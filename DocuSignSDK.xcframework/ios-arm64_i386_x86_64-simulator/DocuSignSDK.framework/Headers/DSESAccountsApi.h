#import <Foundation/Foundation.h>
#import <DocuSignSDK/DSESAccountInformation.h>
#import <DocuSignSDK/DSESErrorDetails.h>
#import <DocuSignSDK/DSESCustomFields.h>
#import <DocuSignSDK/DSESAccountSettingsInformation.h>
#import <DocuSignSDK/DSESAccountSharedAccess.h>
#import <DocuSignSDK/DSESFileTypeList.h>
#import <DocuSignSDK/DSESObject.h>
#import <DocuSignSDK/DSESApiClient.h>
#import <DocuSignSDK/DSESSignatureAdoptionConfigurations.h>
#import <DocuSignSDK/DSESUserSignatures.h>

/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Do not edit the class manually.
 */
 


/**
 * 
 */
 

@interface DSESAccountsApi_GetAccountInformationOptions : DSESObject
/*
 * includeAccountSettings When set to **true**, includes the account settings for the account in the response.
 */
@property NSString* includeAccountSettings;
/*
 * op 
 */
@property NSString* op;

@end







 
@interface DSESAccountsApi: NSObject

@property(nonatomic, assign)DSESApiClient *apiClient;

-(instancetype) initWithApiClient:(DSESApiClient *)apiClient;
-(void) addHeader:(NSString*)value forKey:(NSString*)key;
-(unsigned long) requestQueueSize;
+(DSESAccountsApi*) apiWithHeader:(NSString*)headerValue key:(NSString*)key;
+(DSESAccountsApi*) sharedAPI;

///
///
/// Retrieves the account information for the specified account.
/// Retrieves the account information for the specified account.\n\n**Response**\nThe `canUpgrade` property contains is a Boolean that indicates whether the account can be upgraded through the API.
///
///  @param accountId The external account number (int) or account ID Guid.
///
///
/// @param DSESAccountsApi_GetAccountInformationOptions  Options for modifying the request.
/// @return DSESAccountInformation*

-(NSNumber*) getAccountInformationWithCompletionBlock :(NSString*) accountId  
     
    
    completionHandler: (void (^)(DSESAccountInformation* output, NSError* error))completionBlock;
    




///
///
/// Retrieves the account information for the specified account.
/// Retrieves the account information for the specified account.\n\n**Response**\nThe `canUpgrade` property contains is a Boolean that indicates whether the account can be upgraded through the API.
///
///  @param accountId The external account number (int) or account ID Guid.
///
///
/// @param DSESAccountsApi_GetAccountInformationOptions  Options for modifying the request.
/// @return DSESAccountInformation*

-(NSNumber*) getAccountInformationWithCompletionBlock :(NSString*) accountId  
     
     options:(DSESAccountsApi_GetAccountInformationOptions*) options
    
    completionHandler: (void (^)(DSESAccountInformation* output, NSError* error))completionBlock;
    


	
	



///
///
/// Gets a list of custom fields associated with the account.
/// Retrieves a list of envelope custom fields associated with the account. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. The list custom field lets the sender select the value of the field from a list you provide.
///
///  @param accountId The external account number (int) or account ID Guid.
///
///
///
/// @return DSESCustomFields*

-(NSNumber*) listCustomFieldsWithCompletionBlock :(NSString*) accountId  
     
    
    
    completionHandler: (void (^)(DSESCustomFields* output, NSError* error))completionBlock;
    


	
	



///
///
/// Gets account settings information.
/// Retrieves the account settings information for the specified account.
///
///  @param accountId The external account number (int) or account ID Guid.
///
///
///
/// @return DSESAccountSettingsInformation*

-(NSNumber*) listSettingsWithCompletionBlock :(NSString*) accountId  
     
    
    
    completionHandler: (void (^)(DSESAccountSettingsInformation* output, NSError* error))completionBlock;
    


	
	



///
///
/// Updates the account settings for an account.
/// Updates the account settings for the specified account.
///
///  @param accountId The external account number (int) or account ID Guid.
///
/// @param accountSettingsInformation TBD Description 
///
/// @return 

-(NSNumber*) updateSettingsWithCompletionBlock :(NSString*) accountId  
    accountSettingsInformation:(DSESAccountSettingsInformation*) accountSettingsInformation 
    
    
    
    completionHandler: (void (^)(NSError* error))completionBlock;


	
	



///
///
/// Reserved: Gets the shared item status for one or more users.
/// Reserved: Retrieves shared item status for one or more users and types of items.\n\nUsers with account administration privileges can retrieve shared access information for all account users. Users without account administrator privileges can only retrieve shared access information for themselves and the returned information is limited to the retrieving the status of all members of the account that are sharing their folders to the user. This is equivalent to setting the shared=shared_from.
///
///  @param accountId The external account number (int) or account ID Guid.
///
///
///
/// @return DSESAccountSharedAccess*

-(NSNumber*) listSharedAccessWithCompletionBlock :(NSString*) accountId  
     
    
    
    completionHandler: (void (^)(DSESAccountSharedAccess* output, NSError* error))completionBlock;
    


	
	



///
///
/// Gets a list of unsupported file types.
/// Retrieves a list of file types (mime-types and file-extensions) that are not supported for upload through the DocuSign system.
///
///  @param accountId The external account number (int) or account ID Guid.
///
///
///
/// @return DSESFileTypeList*

-(NSNumber*) listUnsupportedFileTypesWithCompletionBlock :(NSString*) accountId  
     
    
    
    completionHandler: (void (^)(DSESFileTypeList* output, NSError* error))completionBlock;
    

/// Gets configurations from account settings for signature adoption.
/// Retrieves signature adoption configurations for a given account.
///
/// @param accountId The external account number (int) or account ID Guid.
/// @return DSESSignatureAdoptionConfigurations*
-(NSNumber *)getSignatureAdoptionConfigurations:(NSString *)accountId
                              completionHandler:(void (^)(DSESSignatureAdoptionConfigurations* output, NSError* error))completionBlock;

- (NSNumber *)updateSignatures:(NSString *)accountId
                        userId:(NSString *)userId
                userSignatures:(DSESUserSignatures *)userSignatures
             completionHandler:(void (^) (DSESUserSignatures *output, NSError *error))completionBlock;

- (NSNumber *)getSignatureImage:(NSString *)accountId
                         userId:(NSString *)userId
                    signatureId:(NSString *)signaturesId
                      imageType:(NSString *)imageType
              completionHandler:(void (^) (UIImage *output, NSError *error))completionBlock;

@end
