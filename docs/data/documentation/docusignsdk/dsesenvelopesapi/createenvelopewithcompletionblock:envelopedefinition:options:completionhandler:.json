{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","text":"NSNumber","preciseIdentifier":"c:objc(cs)NSNumber"},{"kind":"text","text":" *) "},{"kind":"identifier","text":"createEnvelopeWithCompletionBlock:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSString","preciseIdentifier":"c:objc(cs)NSString"},{"kind":"text","text":" *)"},{"kind":"internalParam","text":"accountId"},{"kind":"text","text":" "},{"kind":"identifier","text":"envelopeDefinition:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","identifier":"doc:\/\/docusign.DocuSignSDK\/documentation\/DocuSignSDK\/DSESEnvelopeDefinition-c.class","preciseIdentifier":"c:objc(cs)DSESEnvelopeDefinition","text":"DSESEnvelopeDefinition"},{"kind":"text","text":" *)"},{"kind":"internalParam","text":"envelopeDefinition"},{"kind":"text","text":" "},{"kind":"identifier","text":"options:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","identifier":"doc:\/\/docusign.DocuSignSDK\/documentation\/DocuSignSDK\/DSESEnvelopesApi_CreateEnvelopeOptions","preciseIdentifier":"c:objc(cs)DSESEnvelopesApi_CreateEnvelopeOptions","text":"DSESEnvelopesApi_CreateEnvelopeOptions"},{"kind":"text","text":" *)"},{"kind":"internalParam","text":"options"},{"kind":"text","text":" "},{"kind":"identifier","text":"completionHandler:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"void (^)(DSESEnvelopeSummary *, NSError *)","preciseIdentifier":"c:BFv(#*$objc(cs)DSESEnvelopeSummary#*$objc(cs)NSError)"},{"kind":"text","text":")"},{"kind":"internalParam","text":"completionBlock"},{"kind":"text","text":";"}],"languages":["occ"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/docusignsdk\/dsesenvelopesapi\/createenvelopewithcompletionblock:envelopedefinition:options:completionhandler:"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/docusign.DocuSignSDK\/documentation\/DocuSignSDK\/DSESEnvelopesApi\/createEnvelopeWithCompletionBlock:envelopeDefinition:options:completionHandler:","interfaceLanguage":"occ"},"abstract":[{"type":"text","text":"Creates an envelope."},{"type":"text","text":" "},{"type":"text","text":"Creates an envelope. \\n\\nUsing this function you can:\\n* Create an envelope and send it.\\n* Create an envelope from an existing template and send it.\\n\\nIn either case, you can choose to save the envelope as a draft envelope instead of sending it by setting the "},{"type":"codeVoice","code":"status"},{"type":"text","text":" property in the request to "},{"type":"codeVoice","code":"created"},{"type":"text","text":" instead of "},{"type":"codeVoice","code":"sent"},{"type":"text","text":".\\n\\n### Send an Envelope or Create a Draft Envelope\\n\\nThis is a multi-part\/form request.\\n\\nEnvelope Event Notification: "},{"type":"codeVoice","code":"eventNotification"},{"type":"text","text":" is an optional property that specifies a set of envelope and recipient status codes, a URL, and some other options. When the envelope or recipient status changes to one of the specified status codes, DocuSign sends a message containing the updated status to the specified URL.\\n\\n### Note: DocuSign Connect must be enabled to use "},{"type":"codeVoice","code":"eventNotification"},{"type":"text","text":", but Connect does not need to be configured for the account since the configuration is done for each envelope.\\n\\n### Send an Envelope from a Template\\n\\nWhen you create an envelope using a "},{"type":"codeVoice","code":"templateId"},{"type":"text","text":", the "},{"type":"codeVoice","code":"recipients"},{"type":"text","text":" structure is used to assign recipients to template roles via the "},{"type":"codeVoice","code":"roleName"},{"type":"text","text":" property, override recipient settings that have been specified in the template and set values for tab fields that were defined in the template.\\n\\nWhen a template is added or applied to an envelope and the template has a locked email subject and message, that subject and message is used for the envelope and cannot be changed even if another locked template is subsequently added or applied to the envelope. If an email subject or message is entered before adding or applying a locked template, the email subject and message is overwritten with the email subject and message from the locked template.\\n\\n"},{"type":"strong","inlineContent":[{"type":"text","text":"Composite Templates"}]},{"type":"text","text":":\\n\\nYou can add Composite Templates structure to the  to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.\\n\\nEach Composite Template consists of server templates, inline templates, PDF Metadata templates, and documents.\\n\\n* Composite Template ID is an optional element used to identify the composite template. It is used as a reference when adding document object information. If used, the document content-disposition must include the "},{"type":"codeVoice","code":"compositeTemplateId"},{"type":"text","text":" to which the document should be added. If "},{"type":"codeVoice","code":"compositeTemplateId"},{"type":"text","text":" is not specified in the content-disposition, the document is applied based on the "},{"type":"codeVoice","code":"documentId"},{"type":"text","text":" only. If no document object is specified, the composite template inherits the first document.\\n* Server Templates are server-side templates stored on the DocuSign server. If supplied they are overlaid into the envelope in the order of their Sequence value.\\n* Inline Templates provide the container to pass inline XML properties. Inline templates allow you to add documents and, for PDF documents, transform the PDF fields into DocuSign tabs. If inline templates are supplied, they are overlaid into the envelope in the order of their Sequence value.\\n* PDF Metadata Templates provide a container to embed design-time template information into a PDF document. DocuSign uses this information when processing the Envelope. This convention allows the document to carry the signing instructions with it, so that less information needs to be provided at run-time through an inline template or synchronized with an external structure like a server template. PDF Metadata templates are stored in the Metadata layer of a PDF in accordance with Acrobat’s XMP specification. DocuSign will only find PDF Metadata templates inside documents passed in the Document object (see below). If supplied the PDF meta data template will be overlaid into the envelope in the order of their Sequence value.\\n* Document objects are optional structures that provide a container to pass in a document or form. If this object is not passed, the composite template inherits the first document it finds from some other server template or inline template, starting with the lowest sequence value (discussed below).\\n\\nIf there are multiple composite templates, the document content-disposition can include the "},{"type":"codeVoice","code":"compositeTemplateId"},{"type":"text","text":" to which the document should be added. Using the "},{"type":"codeVoice","code":"compositeTemplateId"},{"type":"text","text":" sets which documents are associated with particular composite templates. An example of this usage is:\\n\\n"},{"type":"codeVoice","code":"\\n   --5cd3320a-5aac-4453-b3a4-cbb52a4cba5d\\n\\n   Content-Type: application\/pdf\\n\\n   Content-Disposition: file; filename=\\\"eula.pdf\\\"; documentId=1; compositeTemplateId=\\\"1\\\"\\n\\n   Content-Transfer-Encoding: base64\\n"},{"type":"text","text":"\\n\\nAcrobat form objects are only extrapolated from the document object. DocuSign does not derive Acrobat form properties from server templates or inline templates. To instruct DocuSign to extrapolate objects from the Acrobat form, set "},{"type":"codeVoice","code":"transformPdfFields"},{"type":"text","text":" to \"true\" for the document. See the Transform PDF Fields section for more information about how fields are transformed into DocuSign tabs.\\n\\n"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Sequence"}]},{"type":"text","text":"\\n\\nEach type of template has a sequence property, which enables the templates to be over-laid in a particular order. This is significant because \"last-out\" wins in cases of the same property being specified in multiple places in the method schema.\\n\\n"},{"type":"strong","inlineContent":[{"type":"text","text":"Merge Recipient Roles for Draft Envelopes"}]},{"type":"text","text":"\\n\\nWhen an envelope with multiple templates is sent, the recipients from the templates are merged according to template roles and empty recipients are removed. When creating an envelope with multiple templates, but not sending it (keeping it in a created state), duplicate recipients are not merged, which could cause leave duplicate recipients in the envelope.\\n\\nTo prevent this, the query parameter "},{"type":"codeVoice","code":"merge_roles_on_draft"},{"type":"text","text":" should be added when posting a draft envelope (status=created) with multiple templates. Doing this will merge template roles and remove empty recipients.\\n\\n### Note: DocuSign recommends that the merge roles query parameter be used anytime you are creating an envelope with multiple templates and keeping it in draft (created) status.\\n\\n"},{"type":"strong","inlineContent":[{"type":"text","text":"Template Email Subject Merge Fields"}]},{"type":"text","text":"\\n\\nThis provides the ability to insert recipient name and email address merge fields into the email subject line when creating or sending from a template.\\n\\nThe merge fields, based on the recipient’s "},{"type":"codeVoice","code":"roleName"},{"type":"text","text":", are added to the "},{"type":"codeVoice","code":"emailSubject"},{"type":"text","text":" when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\\n\\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\\n\\nIf merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\\n\\n* To add a recipient’s name in the subject line add the following text in the "},{"type":"codeVoice","code":"emailSubject"},{"type":"text","text":" when creating the template or when sending an envelope from a template:\\n\\n   [["},{"type":"text","text":"_UserName]]\\n\\n   Example:\\n\\n   "},{"type":"codeVoice","code":"\\\"emailSubject\\\":\\\"[[Signer 1_UserName]], Please sign this NDA\\\","},{"type":"text","text":"\\n\\n* To add a recipient’s email address in the subject line add the following text in the emailSubject when creating the template or when sending an envelope from a template:\\n\\n   [["},{"type":"text","text":"_Email]]\\n\\n   Example:\\n\\n   "},{"type":"codeVoice","code":"\\\"emailSubject\\\":\\\"[[Signer 1_Email]], Please sign this NDA\\\","},{"type":"text","text":"\\n\\nIn both cases the "},{"type":"text","text":" is the recipient’s "},{"type":"codeVoice","code":"roleName"},{"type":"text","text":" in the template.\\n\\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [["},{"type":"text","text":"_UserName]] or [["},{"type":"text","text":"_Email]] is shown in the email subject.\\n\\n"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Rules for determining the "},{"type":"codeVoice","code":"brandId"},{"type":"text","text":" used in an envelope"}]},{"type":"text","text":"\\n\\nThe following rules are used to determine the "},{"type":"codeVoice","code":"brandId"},{"type":"text","text":" used in an envelope:\\n\\n* If a "},{"type":"codeVoice","code":"brandId"},{"type":"text","text":" is specified in the envelope\/template and that brandId is available to the account, that brand is used in the envelope.\\n* If more than one template is used in an envelope and more than one "},{"type":"codeVoice","code":"brandId"},{"type":"text","text":" is specified, the first "},{"type":"codeVoice","code":"brandId"},{"type":"text","text":" specified is used throughout the envelope.\\n* In cases where no brand is specified and the sender belongs to a Group; if there is only one brand associated with the Group, then that brand is used in the envelope. Otherwise, the account’s default signing brand is used.\\n* For envelopes that do not meet any of the previous rules, the account’s default signing brand is used in the envelope.\\n\\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type."}],"kind":"symbol","metadata":{"fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"createEnvelopeWithCompletionBlock:envelopeDefinition:options:completionHandler:"}],"title":"createEnvelopeWithCompletionBlock:envelopeDefinition:options:completionHandler:","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"c:objc(cs)DSESEnvelopesApi(im)createEnvelopeWithCompletionBlock:envelopeDefinition:options:completionHandler:","modules":[{"name":"DocuSignSDK"}],"navigatorTitle":[{"kind":"identifier","text":"createEnvelopeWithCompletionBlock:envelopeDefinition:options:completionHandler:"}]},"hierarchy":{"paths":[["doc:\/\/docusign.DocuSignSDK\/documentation\/DocuSignSDK","doc:\/\/docusign.DocuSignSDK\/documentation\/DocuSignSDK\/DSESEnvelopesApi"]]},"references":{"doc://docusign.DocuSignSDK/documentation/DocuSignSDK":{"role":"collection","title":"DocuSignSDK","abstract":[],"identifier":"doc:\/\/docusign.DocuSignSDK\/documentation\/DocuSignSDK","kind":"symbol","type":"topic","url":"\/documentation\/docusignsdk"},"doc://docusign.DocuSignSDK/documentation/DocuSignSDK/DSESEnvelopesApi/createEnvelopeWithCompletionBlock:envelopeDefinition:options:completionHandler:":{"role":"symbol","title":"createEnvelopeWithCompletionBlock:envelopeDefinition:options:completionHandler:","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"createEnvelopeWithCompletionBlock:envelopeDefinition:options:completionHandler:"}],"abstract":[{"type":"text","text":"Creates an envelope."},{"type":"text","text":" "},{"type":"text","text":"Creates an envelope. \\n\\nUsing this function you can:\\n* Create an envelope and send it.\\n* Create an envelope from an existing template and send it.\\n\\nIn either case, you can choose to save the envelope as a draft envelope instead of sending it by setting the "},{"type":"codeVoice","code":"status"},{"type":"text","text":" property in the request to "},{"type":"codeVoice","code":"created"},{"type":"text","text":" instead of "},{"type":"codeVoice","code":"sent"},{"type":"text","text":".\\n\\n### Send an Envelope or Create a Draft Envelope\\n\\nThis is a multi-part\/form request.\\n\\nEnvelope Event Notification: "},{"type":"codeVoice","code":"eventNotification"},{"type":"text","text":" is an optional property that specifies a set of envelope and recipient status codes, a URL, and some other options. When the envelope or recipient status changes to one of the specified status codes, DocuSign sends a message containing the updated status to the specified URL.\\n\\n### Note: DocuSign Connect must be enabled to use "},{"type":"codeVoice","code":"eventNotification"},{"type":"text","text":", but Connect does not need to be configured for the account since the configuration is done for each envelope.\\n\\n### Send an Envelope from a Template\\n\\nWhen you create an envelope using a "},{"type":"codeVoice","code":"templateId"},{"type":"text","text":", the "},{"type":"codeVoice","code":"recipients"},{"type":"text","text":" structure is used to assign recipients to template roles via the "},{"type":"codeVoice","code":"roleName"},{"type":"text","text":" property, override recipient settings that have been specified in the template and set values for tab fields that were defined in the template.\\n\\nWhen a template is added or applied to an envelope and the template has a locked email subject and message, that subject and message is used for the envelope and cannot be changed even if another locked template is subsequently added or applied to the envelope. If an email subject or message is entered before adding or applying a locked template, the email subject and message is overwritten with the email subject and message from the locked template.\\n\\n"},{"type":"strong","inlineContent":[{"type":"text","text":"Composite Templates"}]},{"type":"text","text":":\\n\\nYou can add Composite Templates structure to the  to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.\\n\\nEach Composite Template consists of server templates, inline templates, PDF Metadata templates, and documents.\\n\\n* Composite Template ID is an optional element used to identify the composite template. It is used as a reference when adding document object information. If used, the document content-disposition must include the "},{"type":"codeVoice","code":"compositeTemplateId"},{"type":"text","text":" to which the document should be added. If "},{"type":"codeVoice","code":"compositeTemplateId"},{"type":"text","text":" is not specified in the content-disposition, the document is applied based on the "},{"type":"codeVoice","code":"documentId"},{"type":"text","text":" only. If no document object is specified, the composite template inherits the first document.\\n* Server Templates are server-side templates stored on the DocuSign server. If supplied they are overlaid into the envelope in the order of their Sequence value.\\n* Inline Templates provide the container to pass inline XML properties. Inline templates allow you to add documents and, for PDF documents, transform the PDF fields into DocuSign tabs. If inline templates are supplied, they are overlaid into the envelope in the order of their Sequence value.\\n* PDF Metadata Templates provide a container to embed design-time template information into a PDF document. DocuSign uses this information when processing the Envelope. This convention allows the document to carry the signing instructions with it, so that less information needs to be provided at run-time through an inline template or synchronized with an external structure like a server template. PDF Metadata templates are stored in the Metadata layer of a PDF in accordance with Acrobat’s XMP specification. DocuSign will only find PDF Metadata templates inside documents passed in the Document object (see below). If supplied the PDF meta data template will be overlaid into the envelope in the order of their Sequence value.\\n* Document objects are optional structures that provide a container to pass in a document or form. If this object is not passed, the composite template inherits the first document it finds from some other server template or inline template, starting with the lowest sequence value (discussed below).\\n\\nIf there are multiple composite templates, the document content-disposition can include the "},{"type":"codeVoice","code":"compositeTemplateId"},{"type":"text","text":" to which the document should be added. Using the "},{"type":"codeVoice","code":"compositeTemplateId"},{"type":"text","text":" sets which documents are associated with particular composite templates. An example of this usage is:\\n\\n"},{"type":"codeVoice","code":"\\n   --5cd3320a-5aac-4453-b3a4-cbb52a4cba5d\\n\\n   Content-Type: application\/pdf\\n\\n   Content-Disposition: file; filename=\\\"eula.pdf\\\"; documentId=1; compositeTemplateId=\\\"1\\\"\\n\\n   Content-Transfer-Encoding: base64\\n"},{"type":"text","text":"\\n\\nAcrobat form objects are only extrapolated from the document object. DocuSign does not derive Acrobat form properties from server templates or inline templates. To instruct DocuSign to extrapolate objects from the Acrobat form, set "},{"type":"codeVoice","code":"transformPdfFields"},{"type":"text","text":" to \"true\" for the document. See the Transform PDF Fields section for more information about how fields are transformed into DocuSign tabs.\\n\\n"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Sequence"}]},{"type":"text","text":"\\n\\nEach type of template has a sequence property, which enables the templates to be over-laid in a particular order. This is significant because \"last-out\" wins in cases of the same property being specified in multiple places in the method schema.\\n\\n"},{"type":"strong","inlineContent":[{"type":"text","text":"Merge Recipient Roles for Draft Envelopes"}]},{"type":"text","text":"\\n\\nWhen an envelope with multiple templates is sent, the recipients from the templates are merged according to template roles and empty recipients are removed. When creating an envelope with multiple templates, but not sending it (keeping it in a created state), duplicate recipients are not merged, which could cause leave duplicate recipients in the envelope.\\n\\nTo prevent this, the query parameter "},{"type":"codeVoice","code":"merge_roles_on_draft"},{"type":"text","text":" should be added when posting a draft envelope (status=created) with multiple templates. Doing this will merge template roles and remove empty recipients.\\n\\n### Note: DocuSign recommends that the merge roles query parameter be used anytime you are creating an envelope with multiple templates and keeping it in draft (created) status.\\n\\n"},{"type":"strong","inlineContent":[{"type":"text","text":"Template Email Subject Merge Fields"}]},{"type":"text","text":"\\n\\nThis provides the ability to insert recipient name and email address merge fields into the email subject line when creating or sending from a template.\\n\\nThe merge fields, based on the recipient’s "},{"type":"codeVoice","code":"roleName"},{"type":"text","text":", are added to the "},{"type":"codeVoice","code":"emailSubject"},{"type":"text","text":" when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\\n\\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\\n\\nIf merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\\n\\n* To add a recipient’s name in the subject line add the following text in the "},{"type":"codeVoice","code":"emailSubject"},{"type":"text","text":" when creating the template or when sending an envelope from a template:\\n\\n   [["},{"type":"text","text":"_UserName]]\\n\\n   Example:\\n\\n   "},{"type":"codeVoice","code":"\\\"emailSubject\\\":\\\"[[Signer 1_UserName]], Please sign this NDA\\\","},{"type":"text","text":"\\n\\n* To add a recipient’s email address in the subject line add the following text in the emailSubject when creating the template or when sending an envelope from a template:\\n\\n   [["},{"type":"text","text":"_Email]]\\n\\n   Example:\\n\\n   "},{"type":"codeVoice","code":"\\\"emailSubject\\\":\\\"[[Signer 1_Email]], Please sign this NDA\\\","},{"type":"text","text":"\\n\\nIn both cases the "},{"type":"text","text":" is the recipient’s "},{"type":"codeVoice","code":"roleName"},{"type":"text","text":" in the template.\\n\\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then [["},{"type":"text","text":"_UserName]] or [["},{"type":"text","text":"_Email]] is shown in the email subject.\\n\\n"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Rules for determining the "},{"type":"codeVoice","code":"brandId"},{"type":"text","text":" used in an envelope"}]},{"type":"text","text":"\\n\\nThe following rules are used to determine the "},{"type":"codeVoice","code":"brandId"},{"type":"text","text":" used in an envelope:\\n\\n* If a "},{"type":"codeVoice","code":"brandId"},{"type":"text","text":" is specified in the envelope\/template and that brandId is available to the account, that brand is used in the envelope.\\n* If more than one template is used in an envelope and more than one "},{"type":"codeVoice","code":"brandId"},{"type":"text","text":" is specified, the first "},{"type":"codeVoice","code":"brandId"},{"type":"text","text":" specified is used throughout the envelope.\\n* In cases where no brand is specified and the sender belongs to a Group; if there is only one brand associated with the Group, then that brand is used in the envelope. Otherwise, the account’s default signing brand is used.\\n* For envelopes that do not meet any of the previous rules, the account’s default signing brand is used in the envelope.\\n\\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type."}],"identifier":"doc:\/\/docusign.DocuSignSDK\/documentation\/DocuSignSDK\/DSESEnvelopesApi\/createEnvelopeWithCompletionBlock:envelopeDefinition:options:completionHandler:","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"createEnvelopeWithCompletionBlock:envelopeDefinition:options:completionHandler:"}],"url":"\/documentation\/docusignsdk\/dsesenvelopesapi\/createenvelopewithcompletionblock:envelopedefinition:options:completionhandler:"},"doc://docusign.DocuSignSDK/documentation/DocuSignSDK/DSESEnvelopesApi":{"role":"symbol","title":"DSESEnvelopesApi","fragments":[{"kind":"identifier","text":"DSESEnvelopesApi"}],"abstract":[],"identifier":"doc:\/\/docusign.DocuSignSDK\/documentation\/DocuSignSDK\/DSESEnvelopesApi","kind":"symbol","type":"topic","url":"\/documentation\/docusignsdk\/dsesenvelopesapi"},"doc://docusign.DocuSignSDK/documentation/DocuSignSDK/DSESEnvelopeDefinition-c.class":{"role":"symbol","title":"DSESEnvelopeDefinition","fragments":[{"kind":"identifier","text":"DSESEnvelopeDefinition"}],"abstract":[],"identifier":"doc:\/\/docusign.DocuSignSDK\/documentation\/DocuSignSDK\/DSESEnvelopeDefinition-c.class","kind":"symbol","type":"topic","url":"\/documentation\/docusignsdk\/dsesenvelopedefinition-c.class"},"doc://docusign.DocuSignSDK/documentation/DocuSignSDK/DSESEnvelopesApi_CreateEnvelopeOptions":{"role":"symbol","title":"DSESEnvelopesApi_CreateEnvelopeOptions","fragments":[{"kind":"identifier","text":"DSESEnvelopesApi_CreateEnvelopeOptions"}],"abstract":[],"identifier":"doc:\/\/docusign.DocuSignSDK\/documentation\/DocuSignSDK\/DSESEnvelopesApi_CreateEnvelopeOptions","kind":"symbol","type":"topic","url":"\/documentation\/docusignsdk\/dsesenvelopesapi_createenvelopeoptions"}}}