#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef DOCUSIGNAPI_SWIFT_H
#define DOCUSIGNAPI_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DocuSignAPI",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSString;
@class DSAPICustomFields;
@class NSData;
@class DSAPIAccountInformation;
@class DSAPIConsumerDisclosure;

SWIFT_CLASS("_TtC11DocuSignAPI11AccountsAPI")
@interface AccountsAPI : NSObject
/// Gets a list of custom fields.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)accountCustomFieldsGetAccountCustomFieldsWithAccountId:(NSString * _Nonnull)accountId completion:(void (^ _Nonnull)(DSAPICustomFields * _Nullable, NSError * _Nullable))completion;
/// Returns a signature image, initials, or stamp.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param imageType (path) One of <em>signature_image</em> or <em>initials_image</em>.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param includeChrome (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)accountSignaturesGetAccountSignatureImageWithAccountId:(NSString * _Nonnull)accountId imageType:(NSString * _Nonnull)imageType signatureId:(NSString * _Nonnull)signatureId includeChrome:(NSString * _Nullable)includeChrome completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Retrieves the account information for the specified account.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param includeAccountSettings (query) When set to <em>true</em>, includes the account settings for the account in the response. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)accountsGetAccountWithAccountId:(NSString * _Nonnull)accountId includeAccountSettings:(NSString * _Nullable)includeAccountSettings completion:(void (^ _Nonnull)(DSAPIAccountInformation * _Nullable, NSError * _Nullable))completion;
/// Gets a brand logo.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param brandId (path) The unique identifier of a brand.
///
/// \param logoType (path) One of <em>Primary</em>, <em>Secondary</em> or <em>Email</em>.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)brandLogoGetBrandLogoWithAccountId:(NSString * _Nonnull)accountId brandId:(NSString * _Nonnull)brandId logoType:(NSString * _Nonnull)logoType completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Gets the default Electronic Record and Signature Disclosure for an account.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param langCode (query) Specifies the language used in the response. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk), and Vietnamese (vi).  Additionally, the value can be set to `browser` to automatically detect the browser language being used by the viewer and display the disclosure in that language.  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)consumerDisclosureGetConsumerDisclosureWithAccountId:(NSString * _Nonnull)accountId langCode:(NSString * _Nullable)langCode completion:(void (^ _Nonnull)(DSAPIConsumerDisclosure * _Nullable, NSError * _Nullable))completion;
/// Gets the Electronic Record and Signature Disclosure for an account.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param langCode (path) The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to ï¿½browserï¿½ to automatically detect the browser language being used by the viewer and display the disclosure in that language.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)consumerDisclosureGetConsumerDisclosureLangCodeWithAccountId:(NSString * _Nonnull)accountId langCode:(NSString * _Nonnull)langCode completion:(void (^ _Nonnull)(DSAPIConsumerDisclosure * _Nullable, NSError * _Nullable))completion;
/// Updates the Electronic Record and Signature Disclosure for an account.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param langCode (path) The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to ï¿½browserï¿½ to automatically detect the browser language being used by the viewer and display the disclosure in that language.
///
/// \param body (body)  (optional)
///
/// \param includeMetadata (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)consumerDisclosurePutConsumerDisclosureWithAccountId:(NSString * _Nonnull)accountId langCode:(NSString * _Nonnull)langCode body:(DSAPIConsumerDisclosure * _Nullable)body includeMetadata:(NSString * _Nullable)includeMetadata completion:(void (^ _Nonnull)(DSAPIConsumerDisclosure * _Nullable, NSError * _Nullable))completion;
/// Gets account settings information.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)settingsGetSettingsWithAccountId:(NSString * _Nonnull)accountId completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSNumber;

SWIFT_CLASS("_TtC11DocuSignAPI14BoolFromString")
@interface BoolFromString : NSObject
@property (nonatomic) BOOL wrappedValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPIAccountSettingsInformation;
@class NSDate;
@class NSURL;

/// Contains account Information.
SWIFT_CLASS("_TtC11DocuSignAPI23DSAPIAccountInformation")
@interface DSAPIAccountInformation : NSObject
/// The GUID associated with the account ID.
@property (nonatomic, copy) NSString * _Nullable accountIdGuid;
/// The name of the current account.
@property (nonatomic, copy) NSString * _Nullable accountName;
@property (nonatomic, strong) DSAPIAccountSettingsInformation * _Nullable accountSettings;
/// When <em>true,</em> the transaction rooms feature exposed through the Workspaces API is enabled.
@property (nonatomic) BOOL allowTransactionRooms;
/// Number of days remaining in the current billing period.
@property (nonatomic, copy) NSString * _Nullable billingPeriodDaysRemaining;
/// The billing period end date in UTC timedate format.
@property (nonatomic, copy) NSDate * _Nullable billingPeriodEndDate;
/// The number of envelopes that can be sent in the current billing period (can be unlimited).
@property (nonatomic, copy) NSString * _Nullable billingPeriodEnvelopesAllowed;
/// The number of envelopes that have been sent in the current billing period.
@property (nonatomic, copy) NSString * _Nullable billingPeriodEnvelopesSent;
/// The billing period start date in UTC timedate format.
@property (nonatomic, copy) NSDate * _Nullable billingPeriodStartDate;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable billingProfile;
/// When <em>true,</em> specifies that you can upgrade the account through the API. For GET methods, you must set the `include_metadata` query parameter to <em>true</em> for this property to appear in the response.
@property (nonatomic) BOOL canUpgrade;
@property (nonatomic, copy) NSString * _Nullable connectPermission;
/// The creation date of the account in UTC timedate format.
@property (nonatomic, copy) NSDate * _Nullable createdDate;
/// Specifies the ISO currency code for the account.
@property (nonatomic, copy) NSString * _Nullable currencyCode;
/// ID of the plan used to create this account.
@property (nonatomic, copy) NSString * _Nullable currentPlanId;
@property (nonatomic, copy) NSURL * _Nullable displayApplianceStartUrl;
@property (nonatomic, copy) NSURL * _Nullable displayApplianceUrl;
/// The code that identifies the billing plan groups and plans for the new account.
@property (nonatomic, copy) NSString * _Nullable distributorCode;
/// URL of the landing page used to create the account.
@property (nonatomic, copy) NSURL * _Nullable docuSignLandingUrl;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable dssValues;
/// When <em>true,</em> the ability to send envelopes is blocked. When <em>false,</em> envelopes can be sent.
@property (nonatomic) BOOL envelopeSendingBlocked;
/// The price of sending an envelope, represented in the account's local currency.
@property (nonatomic, copy) NSString * _Nullable envelopeUnitPrice;
/// The Account ID displayed on the user's Account page.
@property (nonatomic, copy) NSString * _Nullable externalAccountId;
/// A complex element that contains up to four Question/Answer pairs for forgotten password information for a user.
@property (nonatomic, copy) NSString * _Nullable forgottenPasswordQuestionsCount;
/// When <em>true,</em> the account has been downgraded from a premium account type. Otherwise <em>false.</em>
@property (nonatomic) BOOL isDowngrade;
/// The payment method used for the billing plan. Valid values are:  - `NotSupported` - `CreditCard` - `PurchaseOrder` - `Premium` - `Freemium` - `FreeTrial` - `AppStore` - `DigitalExternal` - `DirectDebit`
@property (nonatomic, copy) NSString * _Nullable paymentMethod;
/// Identifies the type of plan. Examples include:  - `business` - `corporate` - `enterprise`  - `free`
@property (nonatomic, copy) NSString * _Nullable planClassification;
/// The date that the current plan will end.
@property (nonatomic, copy) NSDate * _Nullable planEndDate;
/// The name of the Billing Plan.
@property (nonatomic, copy) NSString * _Nullable planName;
/// The date that the Account started using the current plan.
@property (nonatomic, copy) NSDate * _Nullable planStartDate;
/// The number of active users the account can have at one time.
@property (nonatomic, copy) NSString * _Nullable seatsAllowed;
/// The number of users currently active on the account.
@property (nonatomic, copy) NSString * _Nullable seatsInUse;
/// The status of the account content per (Title 21 CFR Part 11)[https://www.fda.gov/regulatory-information/search-fda-guidance-documents/part-11-electronic-records-electronic-signatures-scope-and-application]. This regulation defines the criteria under which electronic records and electronic signatures are considered trustworthy.
@property (nonatomic, copy) NSString * _Nullable status21CFRPart11;
/// The date on which the account was suspended.
@property (nonatomic, copy) NSDate * _Nullable suspensionDate;
/// Indicates whether the account is currently suspended.
@property (nonatomic, copy) NSString * _Nullable suspensionStatus;
@property (nonatomic) BOOL useDisplayAppliance;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPISettingsMetadata;

/// Contains account settings information. Used in requests to set property values. Used in responses to report property values.
SWIFT_CLASS("_TtC11DocuSignAPI31DSAPIAccountSettingsInformation")
@interface DSAPIAccountSettingsInformation : NSObject
/// UTC date/time format for the account.
@property (nonatomic, copy) NSString * _Nullable accountDateTimeFormat;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable accountDateTimeFormatMetadata;
@property (nonatomic, copy) NSString * _Nullable accountDefaultLanguage;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable accountDefaultLanguageMetadata;
/// The name on the account.
@property (nonatomic, copy) NSString * _Nullable accountName;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable accountNameMetadata;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-admin-guide-signature-adopt-config">Signature Adoption Configuration</a> is enabled.   <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL adoptSigConfig;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable adoptSigConfigMetadata;
/// When <em>true,</em> the Advanced Correction feature is enabled for this account.
@property (nonatomic) BOOL advancedCorrect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable advancedCorrectMetadata;
/// When <em>true,</em> the configured <a href="/docs/esign-rest-api/reference/accounts/accounts/get/#accessCodeFormat">Access Code Format</a> page is enabled for account administrators.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowAccessCodeFormat;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAccessCodeFormatMetadata;
/// When <em>true,</em> the account can be managed on a per-user basis.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowAccountManagementGranular;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAccountManagementGranularMetadata;
/// Boolean that specifies whether member names can be changed in the account.
@property (nonatomic) BOOL allowAccountMemberNameChange;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAccountMemberNameChangeMetadata;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-user-guide-conditional-recipients">Conditional Routing</a> is enabled for the account as part of DocuSign's Advanced Recipient Routing feature.
@property (nonatomic) BOOL allowAdvancedRecipientRoutingConditional;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAdvancedRecipientRoutingConditionalMetadata;
/// When <em>true,</em> an agent recipient can change the email addresses of recipients later in the signing order.
@property (nonatomic) BOOL allowAgentNameEmailEdit;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAgentNameEmailEditMetadata;
@property (nonatomic) BOOL allowAgreementActions;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAgreementActionsMetadata;
/// When <em>true,</em> auto-navigation can be enabled for this account.
@property (nonatomic) BOOL allowAutoNavSettings;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAutoNavSettingsMetadata;
/// When <em>true,</em> auto-tagging is enabled for the account.
@property (nonatomic) BOOL allowAutoTagging;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAutoTaggingMetadata;
/// When <em>true,</em> bulk send functionality is enabled for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowBulkSend;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowBulkSendMetadata;
/// When <em>true,</em> indicates that the customer can withdraw their consent to the consumer disclosure when they decline to sign documents. If these recipients sign documents sent to them from your account in the future, they will be required to agree to the terms in the disclosure. The default value is <em>false.</em> <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowCDWithdraw;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowCDWithdrawMetadata;
/// Boolean that specifies whether a Connect configuration can use HTTP listeners.
@property (nonatomic) BOOL allowConnectHttpListenerConfigs;
/// Reserved for DocuSign.
@property (nonatomic) BOOL allowConnectSendFinishLater;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowConnectSendFinishLaterMetadata;
@property (nonatomic) BOOL allowConnectUnifiedPayloadUI;
/// When <em>true,</em> the account has the ability to change the <a href="https://support.docusign.com/en/guides/ndse-admin-guide-legal-disclosure">Consumer Disclosure</a> setting.
@property (nonatomic) BOOL allowConsumerDisclosureOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowConsumerDisclosureOverrideMetadata;
/// When <em>true,</em> senders can download form data from the envelopes that they send.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowDataDownload;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowDataDownloadMetadata;
/// &quot;true&quot; if the account has permission to use the scheduled sending feature to send envelopes at a specified datetime in the future, &quot;false&quot; otherwise.
@property (nonatomic) BOOL allowDelayedRouting;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowDelayedRoutingMetadata;
@property (nonatomic) BOOL allowDelegatedSigning;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowDelegatedSigningMetadata;
/// Boolean that specifies whether disclosure documents can be included in envelopes.
@property (nonatomic) BOOL allowDocumentDisclosures;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowDocumentDisclosuresMetadata;
/// Boolean that specifies whether notifications can include the envelope's signed document.
@property (nonatomic) BOOL allowDocumentsOnSignedEnvelopes;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowDocumentsOnSignedEnvelopesMetadata;
/// When <em>true,</em> the <a href="https://support.docusign.com/guides/ndse-user-guide-document-visibility">Document Visibility</a> feature is enabled for the account.
@property (nonatomic) BOOL allowDocumentVisibility;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowDocumentVisibilityMetadata;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-user-guide-manage-your-stamps">eHanko stamps</a> are enabled.
@property (nonatomic) BOOL allowEHankoStamps;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEHankoStampsMetadata;
/// Specifies whether eNote eOriginal integration is enabled.
@property (nonatomic) BOOL allowENoteEOriginal;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowENoteEOriginalMetadata;
/// When <em>true,</em> the envelope correction feature is enabled.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowEnvelopeCorrect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEnvelopeCorrectMetadata;
/// Specifies whether the account is able to manage rules that <a href="https://support.docusign.com/en/guides/ndse-admin-guide-custody-transfer">transfer ownership</a> of envelopes within the same account.
@property (nonatomic) BOOL allowEnvelopeCustodyTransfer;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEnvelopeCustodyTransferMetadata;
/// Specifies whether <a href="https://support.docusign.com/en/guides/ndse-user-guide-manage-custom-fields">envelope custom fields</a> are enabled.
@property (nonatomic) BOOL allowEnvelopeCustomFields;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEnvelopeCustomFieldsMetadata;
/// When <em>true,</em> envelope publishing reporting is enabled.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowEnvelopePublishReporting;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEnvelopePublishReportingMetadata;
/// Specifies whether the account has access to reports.
@property (nonatomic) BOOL allowEnvelopeReporting;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEnvelopeReportingMetadata;
/// If the account plan does not include calculated fields, this setting allows an account to use them.
@property (nonatomic) BOOL allowExpression;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowExpressionMetadata;
/// When <em>true,</em> signers are required to use Express Digital Signatures.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowExpressSignerCertificate;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowExpressSignerCertificateMetadata;
/// Boolean that specifies whether resource files can be used for extended sending.
@property (nonatomic) BOOL allowExtendedSendingResourceFile;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowExtendedSendingResourceFileMetadata;
@property (nonatomic) BOOL allowExternalLinkedAccounts;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowExternalLinkedAccountsMetadata;
/// When <em>true,</em> the account can configure and use signature pads for their recipients.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowExternalSignaturePad;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowExternalSignaturePadMetadata;
/// When <em>true,</em> IDV Level 1 is allowed. The default value is <em>false.</em>
@property (nonatomic) BOOL allowIDVLevel1;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowIDVLevel1Metadata;
@property (nonatomic) BOOL allowIDVLevel2;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowIDVLevel2Metadata;
@property (nonatomic) BOOL allowIDVLevel3;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowIDVLevel3Metadata;
@property (nonatomic) BOOL allowIDVPlatform;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowIDVPlatformMetadata;
/// When <em>true,</em> the account administrator can enable in-person signing.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL allowInPerson;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowInPersonMetadata;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-admin-guide-managed-stamps">Managed Stamps</a> are enabled.
@property (nonatomic) BOOL allowManagedStamps;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowManagedStampsMetadata;
/// When <em>true,</em> the Document Markup feature is enabled.  <em>Note:</em>  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.
@property (nonatomic) BOOL allowMarkup;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowMarkupMetadata;
/// When <em>true,</em> account users can set their own <a href="https://support.docusign.com/en/articles/How-do-I-modify-time-zone-settings-for-my-account">time zone settings</a>.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowMemberTimeZone;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowMemberTimeZoneMetadata;
/// When <em>true,</em> the account can use <a href="https://support.docusign.com/en/guides/dfs-user-guide-merge-fields-user">merge fields</a> with DocuSign for Salesforce.
@property (nonatomic) BOOL allowMergeFields;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowMergeFieldsMetadata;
/// Specifies whether the account supports multiple brands.
@property (nonatomic) BOOL allowMultipleBrandProfiles;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowMultipleBrandProfilesMetadata;
/// When <em>true,</em> recipients can upload multiple signer attachments with a single attachment.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowMultipleSignerAttachments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowMultipleSignerAttachmentsMetadata;
/// Specifies whether users can use international numbers for phone authentication.
@property (nonatomic) BOOL allowNonUSPhoneAuth;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowNonUSPhoneAuthMetadata;
@property (nonatomic) BOOL allowOcrOfEnvelopeDocuments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOcrOfEnvelopeDocumentsMetadata;
/// When <em>true,</em> <a href="https://support.docusign.com/articles/Offline-access-with-the-DocuSign-Mobile-App-for-iOS-iPad-iPhone-iPod-Touch">offline signing</a> is enabled for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowOfflineSigning;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOfflineSigningMetadata;
/// When <em>true,</em> senders can use OpenTrust signer certificates.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowOpenTrustSignerCertificate;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOpenTrustSignerCertificateMetadata;
@property (nonatomic) BOOL allowOrganizationDocusignMonitor;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOrganizationDocusignMonitorMetadata;
@property (nonatomic) BOOL allowOrganizationDomainUserManagement;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOrganizationDomainUserManagementMetadata;
/// Boolean that specifies whether <a href="/docs/admin-api/">DocuSign Admin</a> is enabled for the account.
@property (nonatomic) BOOL allowOrganizations;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOrganizationsMetadata;
@property (nonatomic) BOOL allowOrganizationSsoManagement;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOrganizationSsoManagementMetadata;
@property (nonatomic) BOOL allowOrganizationToUseRemoteNotary;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOrganizationToUseRemoteNotaryMetadata;
/// When <em>true,</em> payment processing is enabled for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowPaymentProcessing;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowPaymentProcessingMetadata;
/// When <em>true,</em> signers can use personal signer certificates.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowPersonalSignerCertificate;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowPersonalSignerCertificateMetadata;
/// Boolean that specifies whether phone authentication is enabled for the account.
@property (nonatomic) BOOL allowPhoneAuthentication;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowPhoneAuthenticationMetadata;
/// Boolean that specifies whether users can override phone authentication.
@property (nonatomic) BOOL allowPhoneAuthOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowPhoneAuthOverrideMetadata;
/// Reserved for DocuSign. This property returns the value <em>false</em> when listing account settings. This property is read-only.
@property (nonatomic) BOOL allowPrivateSigningGroups;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowPrivateSigningGroupsMetadata;
@property (nonatomic) BOOL allowRecipientConnect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowRecipientConnectMetadata;
/// When <em>true,</em> an account administrator can to turn on reminders and expiration defaults for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowReminders;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowRemindersMetadata;
@property (nonatomic) BOOL allowRemoteNotary;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowRemoteNotaryMetadata;
/// When <em>true,</em> resource files can be uploaded in branding.
@property (nonatomic) BOOL allowResourceFileBranding;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowResourceFileBrandingMetadata;
/// When <em>true,</em> account administrators can specify that signers are required to use SAFE-BioPharma digital signatures.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowSafeBioPharmaSignerCertificate;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSafeBioPharmaSignerCertificateMetadata;
/// &quot;true&quot; if the account has permission to use the scheduled sending feature to send envelopes at a specified datetime in the future, &quot;false&quot; otherwise.
@property (nonatomic) BOOL allowScheduledSending;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowScheduledSendingMetadata;
/// Boolean that specifies whether a DocuSign Signature Appliance can be used with the account.
@property (nonatomic) BOOL allowSecurityAppliance;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSecurityApplianceMetadata;
/// When <em>true,</em> the account admin can enable the Send to Certified Delivery feature on the account.
@property (nonatomic) BOOL allowSendToCertifiedDelivery;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSendToCertifiedDeliveryMetadata;
/// When <em>true,</em> the account admin can enable the Send to Intermediary feature on the account.
@property (nonatomic) BOOL allowSendToIntermediary;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSendToIntermediaryMetadata;
/// When <em>true,</em> the account can use templates.
@property (nonatomic) BOOL allowServerTemplates;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowServerTemplatesMetadata;
@property (nonatomic) BOOL allowSetEmbeddedRecipientStartURL;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSetEmbeddedRecipientStartURLMetadata;
/// When <em>true,</em> shared tabs are enabled for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowSharedTabs;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSharedTabsMetadata;
/// When <em>true,</em> Signature Stamps are enabled.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowSignatureStamps;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSignatureStampsMetadata;
/// When <em>true,</em> recipients can sign documents from the home page.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowSignDocumentFromHomePage;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSignDocumentFromHomePageMetadata;
/// When <em>true,</em> the recipient of an envelope sent from this account can reassign it to another person.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowSignerReassign;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSignerReassignMetadata;
/// When <em>true,</em> an account administrator can override the ability of an envelope recipient to reassign it to another person.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowSignerReassignOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSignerReassignOverrideMetadata;
/// Boolean that specifies whether Signing and App Extensions are allowed.
@property (nonatomic) BOOL allowSigningExtensions;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSigningExtensionsMetadata;
/// When <em>true,</em> the account allows signing groups. This setting is only shown in responses that list account settings. This property is read-only.
@property (nonatomic) BOOL allowSigningGroups;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSigningGroupsMetadata;
@property (nonatomic) BOOL allowSigningInsights;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSigningInsightsMetadata;
/// Boolean that specifies whether the account supports radio buttons on tabs <a href="/docs/esign-soap-api/reference/sending-group/tab/">Radio CustomTabType</a>.
@property (nonatomic) BOOL allowSigningRadioDeselect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSigningRadioDeselectMetadata;
/// When <em>true,</em> the account administrator can enable the Sign Now feature.
@property (nonatomic) BOOL allowSignNow;
/// Metadata that indicates whether the `allowSignNow` property is editable.
@property (nonatomic, copy) NSString * _Nullable allowSignNowMetadata;
@property (nonatomic) BOOL allowSMSDelivery;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSMSDeliveryMetadata;
/// Deprecated.
@property (nonatomic) BOOL allowSocialIdLogin;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSocialIdLoginMetadata;
/// When <em>true,</em> this user can include supplemental documents.
@property (nonatomic) BOOL allowSupplementalDocuments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSupplementalDocumentsMetadata;
@property (nonatomic) BOOL allowUsersToAccessDirectory;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowUsersToAccessDirectoryMetadata;
@property (nonatomic) BOOL allowValueInsights;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowValueInsightsMetadata;
/// This property determines how template anchor tabs are applied.  Valid values are:  - `document`: Anchor tabs are applied only to the document that you specify.  - `envelope`: Anchor tabs are applied to all of the documents in the envelope associated with the template.  <em>Note:</em> When you are using the `anchorPopulationScope` property with a Composite Template, the value `document` is supported only with a single server template and a single inline template.
@property (nonatomic, copy) NSString * _Nullable anchorPopulationScope;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable anchorPopulationScopeMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL anchorTagVersionedPlacementEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable anchorTagVersionedPlacementMetadataEnabled;
/// When <em>true,</em> envelope documents are included as a PDF file attachment to &quot;signing completed&quot; emails.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL attachCompletedEnvelope;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable attachCompletedEnvelopeMetadata;
/// Sets when authentication checks are applied for recipient envelope access. This setting only applies to the following ID checks:   - Phone Authentication - SMS Authentication - Knowledge-Based ID  This setting takes one of the following options:   - `initial_access`: The authentication check always applies the first time a recipient accesses the documents. Recipients are not asked to authenticate again when they access the documents from the same browser on the same device. If the recipient attempts to access the documents from a different browser or a different device, the recipient must pass authentication again. Once authenticated, that recipient is not challenged again on the new device or browser. The ability for a recipient to skip authentication for documents is limited to documents sent from the same sending account. - `each_access`: Authentication checks apply every time a recipient attempts to access the envelope. However, you can configure the Authentication Expiration setting to allow recipients to skip authentication when they have recently passed authentication by setting a variable time frame.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable authenticationCheck;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable authenticationCheckMetadata;
/// Specifies how auto-navigation works. Valid values are:  - `off` - `required_fields` - `required_and_blank_fields` - `all_fields` - `page_then_required_fields` - `page_then_required_and_blank_fields` - `page_then_all_fields`
@property (nonatomic, copy) NSString * _Nullable autoNavRule;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable autoNavRuleMetadata;
/// Boolean that specifies whether to automatically provision a user membership in the account for accountless recipients. (Also known as Just-in-Time provisioning.)
@property (nonatomic) BOOL autoProvisionSignerAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable autoProvisionSignerAccountMetadata;
/// Boolean that specifies whether BCC for Email Archive is enabled for the account. BCC for Email Archive allows you to set up an archive email address so that a BCC copy of an envelope is sent only to that address.
@property (nonatomic) BOOL bccEmailArchive;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable bccEmailArchiveMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable betaSwitchConfiguration;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable betaSwitchConfigurationMetadata;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable billingAddressMetadata;
/// When <em>true,</em> this user can use the bulk send feature for the account.
@property (nonatomic) BOOL bulkSend;
@property (nonatomic, copy) NSString * _Nullable bulkSendMaxCopiesInBatch;
@property (nonatomic, copy) NSString * _Nullable bulkSendMaxUnprocessedEnvelopesCount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable bulkSendMetadata;
/// When <em>true,</em> account administrators can self-brand their sending console through the DocuSign console.
@property (nonatomic) BOOL canSelfBrandSend;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canSelfBrandSendMetadata;
/// When <em>true,</em> account administrators can self-brand their signing console through the DocuSign console.
@property (nonatomic) BOOL canSelfBrandSign;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canSelfBrandSignMetadata;
@property (nonatomic) BOOL canUseSalesforceOAuth;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canUseSalesforceOAuthMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable captureVoiceRecording;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable captureVoiceRecordingMetadata;
@property (nonatomic) BOOL cfr21SimplifiedSigningEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable cfr21SimplifiedSigningEnabledMetadata;
/// Boolean that specifies whether to use a shorter/wider format when generating the CFR Part 11 signature image.
@property (nonatomic) BOOL cfrUseWideImage;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable cfrUseWideImageMetadata;
@property (nonatomic) BOOL checkForMultipleAdminsOnAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable checkForMultipleAdminsOnAccountMetadata;
/// Boolean that specifies whether the signers of the envelopes from this account use a signature with a DocuSign chrome around it or not.
@property (nonatomic) BOOL chromeSignatureEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable chromeSignatureEnabledMetadata;
/// When <em>true,</em> the text of comments is included in email notifications when a comment is posted.  <em>Note:</em>  If the envelope requires additional recipient authentication, comment text is not included.
@property (nonatomic) BOOL commentEmailShowMessageText;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable commentEmailShowMessageTextMetadata;
/// When <em>true</em> and comments are enabled for the account, senders can disable comments for an envelope through the <em>Advanced Options</em> menu that appears during the sending process.
@property (nonatomic) BOOL commentsAllowEnvelopeOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable commentsAllowEnvelopeOverrideMetadata;
/// When <em>true,</em> conditional fields can be used in documents.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL conditionalFieldsEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable conditionalFieldsEnabledMetadata;
/// Speficies how often to display the consumer disclosure.  Valid values are:  - `once`: Per account, the supplemental document is displayed once only per `userId`.  - `always`: Per envelope, the supplemental document is displayed once only per `userId`.  - `each_access`: Per envelope, the supplemental document is displayed once only per `recipientId`.
@property (nonatomic, copy) NSString * _Nullable consumerDisclosureFrequency;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable consumerDisclosureFrequencyMetadata;
/// Boolean that specifies whether to enable PDF form fields to get converted to DocuSign secure fields when the document is added or uploaded to an envelope.
@property (nonatomic) BOOL convertPdfFields;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable convertPdfFieldsMetadata;
/// Specifies how data is shared for tabs with the same tabLabel. Valid values are:  - `document`: Tabs in a document with the same label populate with the same data. - `envelope`: Tabs in all documents in the envelope with the same label populate with the same data.  This setting applies to the following tab types:   - Check box  - Company - Data field - Drop-down list - Full name  - Formula - Note - Title  <em>Note:</em> Only Admin users can change this setting. Changing this setting affects envelopes that have been sent but not completed.
@property (nonatomic, copy) NSString * _Nullable dataPopulationScope;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable dataPopulationScopeMetadata;
@property (nonatomic) BOOL disableAutoTemplateMatching;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableAutoTemplateMatchingMetadata;
/// When <em>true,</em> the mobile app distributor key is prevented from connecting for account users.
@property (nonatomic) BOOL disableMobileApp;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableMobileAppMetadata;
/// When <em>true,</em> push notifications are disabled for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL disableMobilePushNotifications;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableMobilePushNotificationsMetadata;
/// When <em>true,</em> sending from a mobile application is disabled.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL disableMobileSending;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableMobileSendingMetadata;
/// When <em>true,</em> account users cannot be logged into multiple sessions at the same time.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL disableMultipleSessions;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableMultipleSessionsMetadata;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disablePurgeNotificationsForSenderMetadata;
/// When <em>true,</em> signers cannot view certificates of completion.
@property (nonatomic) BOOL disableSignerCertView;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableSignerCertViewMetadata;
/// When <em>true,</em> signers cannot view envelope history.
@property (nonatomic) BOOL disableSignerHistoryView;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableSignerHistoryViewMetadata;
/// When <em>true,</em> the <em>Select Style</em> option is hidden from signers and they must draw their signature instead.
@property (nonatomic) BOOL disableStyleSignature;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableStyleSignatureMetadata;
/// When <em>true,</em> signers cannot upload custom image files of their signature and initials.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL disableUploadSignature;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableUploadSignatureMetadata;
/// When <em>true,</em> the User Sharing feature is disabled for the account.
@property (nonatomic) BOOL disableUserSharing;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableUserSharingMetadata;
/// Boolean that specifies whether to display a Beta switch for your app.
@property (nonatomic, copy) NSString * _Nullable displayBetaSwitch;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable displayBetaSwitchMetadata;
/// Sets the account document upload restriction for non-account administrators. Valid values are:  - `no_restrictions`: There are no restrictions on the type of documents that can be uploaded. - `allow_pdf_only`: Non-administrators can only upload PDF files. - `no_upload`: Non-administrators cannot upload files.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable documentConversionRestrictions;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable documentConversionRestrictionsMetadata;
/// Sets a document retention period, which controls the number of days that DocuSign retains documents after they have reached a completed,declined, or voided state. When document retention is enabled for the account, the default value is `356` days.
@property (nonatomic, copy) NSString * _Nullable documentRetention;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable documentRetentionMetadata;
/// When <em>true</em> and `documentRetention` is set, document fields and metadata are also purged after the document retention period ends. The default value is <em>false.</em>  <em>Note:</em> Only Admins can change this setting.
@property (nonatomic) BOOL documentRetentionPurgeTabs;
/// Configures the Document Visibility feature for the account. Valid values are:  - `Off`: Document Visibility is not active for the account. - `MustSignToViewUnlessSenderAccount`: Document Visibility is enabled for all envelopes sent from the account. Any member of the sending account can view all of the documents in an envelope. - `MustSignToViewUnlessSender`: Document Visibility is enabled for all envelopes sent from the account. Only the sender can view all of the documents in an envelope. - `SenderCanSetMustSignToViewUnlessSenderAccount`: The sender has the option to enable Document Visibility for an envelope. When enabled for an envelope, all of the documents within it are still visible to any member of the sending account. Vd- `SenderCanSetMustSignToViewUnlessSender`: The sender has the option to enable Document Visibility for an envelope. When enabled for an envelope, all of the documents in the envelope are visible only to the sender.  <em>Note:</em> For this configuration to take effect, `allowDocumentVisibility` must be set to <em>true.</em>
@property (nonatomic, copy) NSString * _Nullable documentVisibility;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable documentVisibilityMetadata;
@property (nonatomic, copy) NSString * _Nullable dssSIGN28411EnableLeavePagePromptRadminOption;
@property (nonatomic, copy) NSString * _Nullable dssSIGN29182SlideUpBarRadminOption;
/// Specifies the version of the email templates used in an account. If new signing is selected in a member's Admin page, the user is updated to the newest version (1.1), the minimum version of email supported for the account.
@property (nonatomic, copy) NSString * _Nullable emailTemplateVersion;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable emailTemplateVersionMetadata;
/// When <em>true,</em> enables Access Code Generator on the account.
@property (nonatomic) BOOL enableAccessCodeGenerator;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableAccessCodeGeneratorMetadata;
/// When <em>true,</em> enables Advanced Payments for the account.
@property (nonatomic) BOOL enableAdvancedPayments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableAdvancedPaymentsMetadata;
/// When <em>true,</em> enables advanced PowerForms for the account.
@property (nonatomic) BOOL enableAdvancedPowerForms;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableAdvancedPowerFormsMetadata;
@property (nonatomic) BOOL enableAgreementActionsForCLM;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableAgreementActionsForCLMMetadata;
@property (nonatomic) BOOL enableAgreementActionsForESign;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableAgreementActionsForESignMetadata;
/// When <em>true,</em> enables the account to set the AutoNav rule setting, which enables a sender to override the auto-navigation setting per envelope.  <em>Note:</em> To change this setting, you must be a SysAdmin user or `EnableAutoNavByDSAdmin must be set.
@property (nonatomic) BOOL enableAutoNav;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableAutoNavMetadata;
@property (nonatomic) BOOL enableBccDummyLink;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableBccDummyLinkMetadata;
/// When <em>true,</em> calculated fields are enabled for the account.   <em>Note:</em> This setting can be changed only by Admin users, and only if the account-level setting `allowExpression` is set to <em>true.</em>
@property (nonatomic) BOOL enableCalculatedFields;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableCalculatedFieldsMetadata;
/// Boolean that specifies whether clickwraps are enabled in your app. A <a href="/docs/click-api/click101/">clickwrap</a> is an iframe that you embed in your own website or app.
@property (nonatomic) BOOL enableClickwraps;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableClickwrapsMetadata;
@property (nonatomic) BOOL enableCommentsHistoryDownloadInSigning;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableCommentsHistoryDownloadInSigningMetadata;
/// When <em>true,</em> enables customer satisfaction metric tracking for the account.
@property (nonatomic) BOOL enableCustomerSatisfactionMetricTracking;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableCustomerSatisfactionMetricTrackingMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL enableDSPro;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableDSProMetadata;
/// When <em>true,</em> enables the account administrator to control envelope stamping for an account (stamping the `envelopeId` in the the document margins).  <em>Note:</em> This setting can be changed only by Admin users, and only if the account-level setting `enableEnvelopeStampingByDSAdmin` is set to <em>true.</em>
@property (nonatomic) BOOL enableEnvelopeStampingByAccountAdmin;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableEnvelopeStampingByAccountAdminMetadata;
/// When <em>true,</em> enables the DocuSign administrator to control envelope stamping for an account (placement of the `envelopeId`).
@property (nonatomic) BOOL enableEnvelopeStampingByDSAdmin;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableEnvelopeStampingByDSAdminMetadata;
@property (nonatomic) BOOL enableEsignCommunities;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableEsignCommunitiesMetadata;
@property (nonatomic) BOOL enableIDFxIntuitKBA;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableIDFxIntuitKBAMetadata;
@property (nonatomic) BOOL enableIDFxPhoneAuthentication;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableIDFxPhoneAuthenticationMetadata;
@property (nonatomic) BOOL enableInBrowserEditor;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableInBrowserEditorMetadata;
/// When <em>true,</em> payment processing is enabled for this account.  <em>Note:</em> This setting can be changed only by Admin users, and only if the account-level setting `allowPaymentProcessing` is set.
@property (nonatomic) BOOL enablePaymentProcessing;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enablePaymentProcessingMetadata;
@property (nonatomic) BOOL enablePDFAConversion;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enablePDFAConversionMetadata;
/// When <em>true,</em> enables PowerForms for the account.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enablePowerForm;
/// When <em>true,</em> enables direct PowerForms for an account. Direct PowerForms are in-session PowerForms.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enablePowerFormDirect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enablePowerFormDirectMetadata;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enablePowerFormMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL enableRecipientDomainValidation;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableRecipientDomainValidationMetadata;
@property (nonatomic) BOOL enableRecipientMayProvidePhoneNumber;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableRecipientMayProvidePhoneNumberMetadata;
/// Enables direct links to envelopes in reports for administrators in the following scopes: - `NoEnvelopes` - `AllEnvelopes` - `OnlyOwnEnvelopes`
@property (nonatomic) BOOL enableReportLinks;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableReportLinksMetadata;
/// When <em>true,</em> the account can use the `requireSignOnPaper` option.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableRequireSignOnPaper;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableRequireSignOnPaperMetadata;
/// When <em>true,</em> account administrators can reserve a web domain and users. Domains are organization-specific reserved internet domains, such as `@exampledomain.com`. You can define policy settings for users of each reserved domain within your organization, export lists of domain users for audit purposes, and manage domain users.  - Domains may be claimed by an organization. - When a domain is claimed by an organization, all users within that domain are added to the organization, even if they have trial or free accounts. - You can set domain controls for all users of the domain. - You can export information about your organization’s users that are associated with your reserved domains.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enableReservedDomain;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableReservedDomainMetadata;
/// When <em>true,</em> enables responsive signing.
@property (nonatomic) BOOL enableResponsiveSigning;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableResponsiveSigningMetadata;
/// When <em>true,</em> scheduled releases are enabled. The default value is <em>false.</em>
@property (nonatomic) BOOL enableScheduledRelease;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableScheduledReleaseMetadata;
@property (nonatomic) BOOL enableSearch;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSearchMetadata;
@property (nonatomic) BOOL enableSearchUI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSearchUIMetadata;
/// When <em>true,</em> enables fonts to be set on tags for the account.
@property (nonatomic) BOOL enableSendingTagsFontSettings;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSendingTagsFontSettingsMetadata;
/// When <em>true,</em> this account can use the Agent recipient type.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enableSendToAgent;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSendToAgentMetadata;
/// When <em>true,</em> this account can use the Intermediary recipient type.  <em>Note:</em> Only Admin users can change this setting, and only if `allowSendToIntermediary` is set.
@property (nonatomic) BOOL enableSendToIntermediary;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSendToIntermediaryMetadata;
/// When <em>true,</em> this account can use the Editor recipient type.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSendToManage;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSendToManageMetadata;
/// When <em>true,</em> the account can define the routing order of recipients for envelopes sent by using the eSignature API.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enableSequentialSigningAPI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSequentialSigningAPIMetadata;
/// When <em>true,</em> the account can define the routing order of recipients for envelopes sent by using the DocuSign application.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enableSequentialSigningUI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSequentialSigningUIMetadata;
/// When <em>true,</em> users can use the signing attachments feature to request attachments from signers.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSignerAttachments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSignerAttachmentsMetadata;
/// When <em>true,</em> enables comments for the account so that signers and recipients can make and respond to comments in documents belonging to the envelopes that they are sent.
@property (nonatomic) BOOL enableSigningExtensionComments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSigningExtensionCommentsMetadata;
/// When <em>true,</em> enables conversation functionality.
@property (nonatomic) BOOL enableSigningExtensionConversations;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSigningExtensionConversationsMetadata;
/// When <em>true,</em> switches Signing Order to On by default for new envelopes.
@property (nonatomic) BOOL enableSigningOrderSettingsForAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSigningOrderSettingsForAccountMetadata;
/// When <em>true,</em> a sender can allow signers to use the sign on paper option.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSignOnPaper;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSignOnPaperMetadata;
/// When <em>true,</em> a user can override the default default account setting for the Sign on Paper option, which specifies whether signers can sign documents on paper as an option to signing electronically.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSignOnPaperOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSignOnPaperOverrideMetadata;
/// When <em>true,</em> Sign with Notary functionality is enabled for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSignWithNotary;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSignWithNotaryMetadata;
/// When <em>true,</em> blockchain-based <a href="https://www.docusign.com/products/blockchain">Smart Contracts</a> are enabled. The default value is <em>false.</em>
@property (nonatomic) BOOL enableSmartContracts;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSmartContractsMetadata;
/// When <em>true,</em> the account can use SMS authentication.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSMSAuthentication;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSMSAuthenticationMetadata;
@property (nonatomic) BOOL enableSMSDeliveryAdditionalNotification;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSMSDeliveryAdditionalNotificationMetadata;
@property (nonatomic) BOOL enableSMSDeliveryPrimary;
/// Deprecated.
@property (nonatomic) BOOL enableSocialIdLogin;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSocialIdLoginMetadata;
/// When <em>true,</em> enables strikethrough formatting in documents.
@property (nonatomic) BOOL enableStrikeThrough;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableStrikeThroughMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL enableTransactionPoint;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableTransactionPointMetadata;
/// When <em>true,</em> Vaulting is enabled for the account.
@property (nonatomic) BOOL enableVaulting;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableVaultingMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL enableWitnessing;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableWitnessingMetadata;
/// When <em>true,</em> the template name must be unique.
@property (nonatomic) BOOL enforceTemplateNameUniqueness;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enforceTemplateNameUniquenessMetadata;
/// Shows the envelope integration rule for the account, which indicates whether custom admins can enable Connect for their accounts. Enumeration values are:   - `not_allowed` - `full`   <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable envelopeIntegrationAllowed;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable envelopeIntegrationAllowedMetadata;
/// When <em>true,</em> enables Connect for an account. Note that Connect integration requires additional configuration that must be set up for it to take effect; this switch is only the on/off control for the account.  <em>Note:</em> Only Admin users can change this setting, and only when `envelopeIntegrationAllowed` is set.
@property (nonatomic) BOOL envelopeIntegrationEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable envelopeIntegrationEnabledMetadata;
/// When <em>true,</em> envelopes sent by this account automatically have the envelope ID stamped in the document margins, unless the sender selects not to have the documents stamped.
@property (nonatomic) BOOL envelopeStampingDefaultValue;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable envelopeStampingDefaultValueMetadata;
@property (nonatomic, copy) NSString * _Nullable exitPrompt;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable exitPromptMetadata;
/// Boolean that specifies whether a member of an account can express send (without tags) or must send with tags on documents.
@property (nonatomic) BOOL expressSend;
/// Boolean that specifies whether a member of an account can send templates without the tags being stripped out, even when the account is configured to let its users express send only (they cannot use the tagger).
@property (nonatomic) BOOL expressSendAllowTabs;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable expressSendAllowTabsMetadata;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable expressSendMetadata;
/// Specifies the signature pad type. Valid values are:  - `none` - `topaz` - `e_padv9` - `e_pad_integrisign` - `topaz_sigplusextlite`  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable externalSignaturePadType;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable externalSignaturePadTypeMetadata;
/// When <em>true,</em> fax delivery to recipients is allowed for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL faxOutEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable faxOutEnabledMetadata;
@property (nonatomic, copy) NSString * _Nullable finishReminder;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable finishReminderMetadata;
/// When <em>true,</em> HTML used to implement <a href="https://www.docusign.com/products/guided-forms">Guided Forms</a> is enabled for the account.
@property (nonatomic) BOOL guidedFormsHtmlAllowed;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable guidedFormsHtmlAllowedMetadata;
@property (nonatomic, copy) NSString * _Nullable hasRecipientConnectClaimedDomain;
/// Boolean that specifies whether to hide the account address in the Certificate of Completion.
@property (nonatomic) BOOL hideAccountAddressInCoC;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable hideAccountAddressInCoCMetadata;
/// Boolean that specifies whether to hide the pricing functionality for an account.
@property (nonatomic) BOOL hidePricing;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable hidePricingMetadata;
/// Determines when a user's authentication with the account expires. Valid values are:  - `always`: Users are required to authenticate each time. - `variable`: If the authentication for a user is valid and falls within the value for the `idCheckExpireDays` property, the user is not required to authenticate again.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable idCheckExpire;
/// The number of days before user authentication credentials expire. A value of `0` specifies that users must re-authenticate for each new session.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable idCheckExpireDays;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable idCheckExpireDaysMetadata;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable idCheckExpireMetadata;
/// The number of minutes before user authentication credentials expire.
@property (nonatomic, copy) NSString * _Nullable idCheckExpireMinutes;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable idCheckExpireMinutesMetadata;
/// Indicates if authentication is configured for the account. Valid values are:  - `always`: Authentication checks are performed on every envelope. - `never`: Authentication checks are not performed on any envelopes. - `optional`: Authentication is configurable per envelope.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable idCheckRequired;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable idCheckRequiredMetadata;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable identityVerificationMetadata;
@property (nonatomic, copy) NSString * _Nullable idfxPhoneAuthenticationOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable idfxPhoneAuthenticationOverrideMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable ignoreErrorIfAnchorTabNotFound;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable ignoreErrorIfAnchorTabNotFoundMetadataEnabled;
/// A text field containing the question that an in-person signing host uses to collect personal information from the recipient. The recipient's response to this question is saved and can be viewed in the certificate associated with the envelope.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable inPersonIDCheckQuestion;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable inPersonIDCheckQuestionMetadata;
/// When <em>true,</em> in-person signing is enabled for the account.
@property (nonatomic) BOOL inPersonSigningEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable inPersonSigningEnabledMetadata;
/// When <em>true,</em> the account can send in-session (embedded) envelopes.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL inSessionEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable inSessionEnabledMetadata;
/// When <em>true,</em> emails are not sent to the in-session (embedded) recipients on an envelope.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL inSessionSuppressEmails;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable inSessionSuppressEmailsMetadata;
/// The maximum number of signing groups allowed on the account. The default value is `50`. This setting is only shown in responses that list account settings.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable maximumSigningGroups;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable maximumSigningGroupsMetadata;
/// The maximum number of users per signing group. The default value is `50`. This setting is only shown in responses that list account settings.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable maximumUsersPerSigningGroup;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable maximumUsersPerSigningGroupMetadata;
/// The maximum number of custom stamps.
@property (nonatomic, copy) NSString * _Nullable maxNumberOfCustomStamps;
/// The number of minutes of inactivity before a mobile user is automatically logged out of the system. Valid values are `1` to `120` minutes. The default value is `20` minutes.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable mobileSessionTimeout;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable mobileSessionTimeoutMetadata;
/// The number of active custom stamps associated with the account. DocuSign calculates this number automatically. This property is only visible to the DocuSign account manager.
@property (nonatomic, copy) NSString * _Nullable numberOfActiveCustomStamps;
/// Boolean that specifies whether to opt in for Signing v02 on Mobile Devices functionality.
@property (nonatomic) BOOL optInMobileSigningV02;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable optInMobileSigningV02Metadata;
/// Boolean that allows envelope senders to opt out of the recipient signing auto-navigation feature and opt out of updating tab font color.
@property (nonatomic) BOOL optOutAutoNavTextAndTabColorUpdates;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable optOutAutoNavTextAndTabColorUpdatesMetadata;
/// Boolean that specifies whether to allow envelope senders to opt out of using the new platform seal.
@property (nonatomic) BOOL optOutNewPlatformSeal;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable optOutNewPlatformSealPlatformMetadata;
/// When <em>true,</em> senders can allow recipients to provide a phone number for the Phone Authentication process.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL phoneAuthRecipientMayProvidePhoneNumber;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable phoneAuthRecipientMayProvidePhoneNumberMetadata;
/// The policy for adding a digital certificate to downloaded, printed, and emailed documents.   Possible values are:   - `no_sign` - `no_sign_allow_user_override` - `yes_sign` (Specifies that PDF files downloaded from the platform are signed.)  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable pkiSignDownloadedPDFDocs;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable pkiSignDownloadedPDFDocsMetadata;
@property (nonatomic, copy) NSString * _Nullable readOnlyMode;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable readOnlyModeMetadata;
/// When <em>true,</em> recipients receiving envelopes from this account can sign offline.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL recipientsCanSignOffline;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable recipientsCanSignOfflineMetadata;
/// When <em>true,</em> recipients receiving envelopes from this account can override auto-navigation functionality.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL recipientSigningAutoNavigationControl;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable recipientSigningAutoNavigationControlMetadata;
/// When <em>true,</em> recipients are required to use a 21 CFR part 11-compliant signing experience.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL require21CFRpt11Compliance;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable require21CFRpt11ComplianceMetadata;
/// When <em>true,</em> signers who decline to sign an envelope sent from this account are required to provide a reason for declining.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL requireDeclineReason;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable requireDeclineReasonMetadata;
/// When <em>true,</em> the account requires external management of users.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL requireExternalUserManagement;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable requireExternalUserManagementMetadata;
/// Sets the Digital Signature certificate requirements for sending envelopes. Valid values are:  - `none`: A Digital Signature certificate is not required. - `docusign_express`: Signers must use a DocuSign Express certificate. - `docusign_personal`: Signers must use a DocuSign personal certificate. - `safe` - `open_trust`: Signers must use an OpenTrust certificate.
@property (nonatomic, copy) NSString * _Nullable requireSignerCertificateType;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable requireSignerCertificateTypeMetadata;
/// The RSA account name.  <em>Note:</em> Only Admin users can change this setting. Modifying this value may disrupt your ID Check capability. Ensure you have the correct value before changing it.
@property (nonatomic, copy) NSString * _Nullable rsaVeridAccountName;
/// The password for the RSA account.   <em>Note:</em> Only Admin users can change this setting. Modifying this value may disrupt your ID Check capability. Ensure you have the correct value before changing it.
@property (nonatomic, copy) NSString * _Nullable rsaVeridPassword;
/// The RSA rule set used with the account.  <em>Note:</em> Only Admin users can change this setting. Modifying this value may disrupt your ID Check capability. Ensure you have the correct value before changing it.
@property (nonatomic, copy) NSString * _Nullable rsaVeridRuleset;
/// The user ID for the RSA account.  <em>Note:</em> Only Admin users can change this setting. Modifying this value may disrupt your ID Check capability. Ensure you have the correct value before changing it.
@property (nonatomic, copy) NSString * _Nullable rsaVeridUserId;
/// Sets how self-signed documents are presented to the email recipients. Valid values are:  - `include_pdf`: A PDF of the completed document is attached to the email. - `include_link`: A secure link to the self-signed documents is included    in the email.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable selfSignedRecipientEmailDocument;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable selfSignedRecipientEmailDocumentMetadata;
/// When <em>true,</em> the `selfSignedRecipientEmailDocument` user setting can be set for an individual user. The user setting overrides the account setting.  <em>Note:</em> Only Admin users can change this account setting.
@property (nonatomic) BOOL selfSignedRecipientEmailDocumentUserOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable selfSignedRecipientEmailDocumentUserOverrideMetadata;
/// When <em>true,</em> a signer can draw their signature in each location where a sign or initial tab exists. This functionality is typically used for mobile signing.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL senderCanSignInEachLocation;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable senderCanSignInEachLocationMetadata;
/// When <em>true,</em> a sender who is also a recipient of an envelope must follow the authentication requirements for the envelope.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL senderMustAuthenticateSigning;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable senderMustAuthenticateSigningMetadata;
/// The account-wide default font color to use for the content of the tab.  Valid values are:  - `Black` - `BrightBlue` - `BrightRed` - `DarkGreen` - `DarkRed` - `Gold` - `Green` - `NavyBlue` - `Purple` - `White`
@property (nonatomic, copy) NSString * _Nullable sendingTagsFontColor;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sendingTagsFontColorMetadata;
/// The account-wide default font to be used for the tab value. Supported fonts include:  - `Default` - `Arial` - `ArialNarrow` - `Calibri` - `CourierNew` - `Garamond` - `Georgia` - `Helvetica` - `LucidaConsole` - `MSGothic` - `MSMincho` - `OCR-A` - `Tahoma` - `TimesNewRoman` - `Trebuchet` - `Verdana`
@property (nonatomic, copy) NSString * _Nullable sendingTagsFontName;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sendingTagsFontNameMetadata;
/// The account-wide default font size used for the information in the tab:  - `Size7` - `Size8` - `Size9` - `Size10` - `Size11` - `Size12` - `Size14` - `Size16` - `Size18` - `Size20` - `Size22` - `Size24` - `Size26` - `Size28` - `Size36` - `Size48` - `Size72`
@property (nonatomic, copy) NSString * _Nullable sendingTagsFontSize;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sendingTagsFontSizeMetadata;
@property (nonatomic, copy) NSString * _Nullable sendLockoutRecipientNotification;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sendLockoutRecipientNotificationMetadata;
/// When true, the account can use the certified deliveries recipient type.
@property (nonatomic) BOOL sendToCertifiedDeliveryEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sendToCertifiedDeliveryEnabledMetadata;
/// The amount of idle activity time, in minutes, before a user is automatically logged out of the system. The minimum setting is 20 minutes and the maximum setting is 120 minutes.
@property (nonatomic, copy) NSString * _Nullable sessionTimeout;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sessionTimeoutMetadata;
/// When <em>true,</em> senders can set the email language to use for each recipient.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL setRecipEmailLang;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable setRecipEmailLangMetadata;
/// When <em>true,</em> setting a unique language for a recipient not only affects the email language, but also the signing language they are presented with. When <em>false,</em> only the email will be affected when the sender specifies a unique language for a recipient.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL setRecipSignLang;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable setRecipSignLangMetadata;
/// Boolean that specifies whether an account can use Shared Template Folders.
@property (nonatomic) BOOL sharedTemplateFolders;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sharedTemplateFoldersMetadata;
/// Boolean that specifies whether complete dialogs are displayed directly within an application in embedded signing sessions.
@property (nonatomic) BOOL showCompleteDialogInEmbeddedSession;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable showCompleteDialogInEmbeddedSessionMetadata;
/// When <em>true,</em> Conditional Routing options display to senders during the sending experience.
@property (nonatomic) BOOL showConditionalRoutingOnSend;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable showConditionalRoutingOnSendMetadata;
/// Boolean that specifies whether conditional field options are initially displayed (before a user makes entries).
@property (nonatomic) BOOL showInitialConditionalFields;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable showInitialConditionalFieldsMetadata;
/// Boolean that specifies whether localized watermarks are displayed.
@property (nonatomic) BOOL showLocalizedWatermarks;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable showLocalizedWatermarksMetadata;
@property (nonatomic) BOOL showMaskedFieldsWhenDownloadingDocumentAsSender;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable showMaskedFieldsWhenDownloadingDocumentAsSenderMetadata;
/// When <em>true,</em> show tutorials.
@property (nonatomic) BOOL showTutorials;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable showTutorialsMetadata;
/// Names of electronic or digital signature providers that can be used.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable signatureProviders;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signatureProvidersMetadata;
/// The format for the signature date. Valid values are:  - `d/M/yyyy` - `dd-MM-yy` - `dd-MMM-yy` - `dd-MM-yyyy` - `dd.MM.yyyy` - `dd-MMM-yyyy` - `dd MMMM yyyy` - `M/d/yyyy` - `MM-dd-yyyy` - `MM/dd/yyyy` - `MM/dd/yy` - `MMM-dd-yyyy` - `MMM d, yyyy` - `MMMM d, yyyy` - `yyyy-MM-dd` - `yyyy-MMM-dd` - `yyyy/MM/dd` - `yyyy MMMM d`  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable signDateFormat;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signDateFormatMetadata;
@property (nonatomic, copy) NSString * _Nullable signDateTimeAccountLanguageOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signDateTimeAccountLanguageOverrideMetadata;
@property (nonatomic, copy) NSString * _Nullable signDateTimeAccountTimezoneOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signDateTimeAccountTimezoneOverrideMetadata;
/// When <em>true,</em> the Certificate of Completion is included in the PDF of the envelope documents when it is downloaded.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerAttachCertificateToEnvelopePDF;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerAttachCertificateToEnvelopePDFMetadata;
/// When <em>true,</em> signer attachments are added to the parent document that contains the attachment. The default behavior creates a new document in the envelope for every signer attachment.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerAttachConcat;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerAttachConcatMetadata;
/// When <em>true,</em> a signer can create a DocuSign account after signing.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerCanCreateAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerCanCreateAccountMetadata;
/// When <em>true,</em> recipients can sign on a mobile device.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerCanSignOnMobile;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerCanSignOnMobileMetadata;
/// When <em>true,</em> an &quot;envelope complete&quot; email is sent to an in-session (embedded) or offline signer after DocuSign processes the envelope if in-session emails are not suppressed.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerInSessionUseEnvelopeCompleteEmail;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerInSessionUseEnvelopeCompleteEmailMetadata;
/// Sets the login requirements for signers. Valid values are:  - `login_not_required`: Signers are not required to log in. - `login_required_if_account_holder`: If the signer has a DocuSign account,   they must log in to sign the document. - `login_required_per_session`: The sender cannot send an envelope to anyone   who does not have a DocuSign account. - `login_required_per_envelope`: The sender cannot send an envelope to anyone   who does not have a DocuSign account, and the signer must also log in for   each envelope they will sign.   <em>Note:</em> Only Admin users can change this setting. If you use Direct PowerForms or captive (embedded signers), the &quot;Account required&quot; settings are bypassed for those signers. If your workflow requires that the signer have an account, you should not use those methods.
@property (nonatomic, copy) NSString * _Nullable signerLoginRequirements;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerLoginRequirementsMetadata;
/// When <em>true,</em> senders can only send an envelope to a recipient that has a DocuSign account.  <em>Note:</em> Only Account Administrators can change this setting.
@property (nonatomic) BOOL signerMustHaveAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerMustHaveAccountMetadata;
/// When <em>true,</em> signers must log in to the DocuSign platform to sign an envelope.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerMustLoginToSign;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerMustLoginToSignMetadata;
/// When <em>true,</em> the initial values of all SecureFields are written to the document when it is sent.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerShowSecureFieldInitialValues;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerShowSecureFieldInitialValuesMetadata;
/// The number of minutes that a signing session stays alive without any activity.
@property (nonatomic, copy) NSString * _Nullable signingSessionTimeout;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signingSessionTimeoutMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable signingUiVersion;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signingUiVersionMetadata;
/// The format for the signature time. Valid values are:  - `none` - `HH:mm` - `h:mm` - `HH:mm:ss` - `h:mm:ss`
@property (nonatomic, copy) NSString * _Nullable signTimeFormat;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signTimeFormatMetadata;
/// When <em>true,</em> the time shows the AM or PM indicator.
@property (nonatomic) BOOL signTimeShowAmPm;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signTimeShowAmPmMetadata;
/// When <em>true,</em> simplified sending is enabled for the account. The default value is <em>false.</em>
@property (nonatomic) BOOL simplifiedSendingEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable simplifiedSendingEnabledMetadata;
/// When <em>true,</em> single sign-on (SSO) is enabled.
@property (nonatomic) BOOL singleSignOnEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable singleSignOnEnabledMetadata;
/// When <em>true,</em> do not require authentication prompt for viewing completed envelopes
@property (nonatomic) BOOL skipAuthCompletedEnvelopes;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable skipAuthCompletedEnvelopesMetadata;
/// When <em>true,</em> recipients can use <a href="https://support.docusign.com/guides/signer-authentication">social ids</a> when signing
@property (nonatomic) BOOL socialIdRecipAuth;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable socialIdRecipAuthMetadata;
/// When <em>true,</em> senders can specify the visibility of the documents in an envelope at the recipient level.
@property (nonatomic) BOOL specifyDocumentVisibility;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable specifyDocumentVisibilityMetadata;
/// When <em>true,</em> when initiating correction of an in-flight envelope the sender starts in advanced correct mode.
@property (nonatomic) BOOL startInAdvancedCorrect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable startInAdvancedCorrectMetadata;
/// When <em>true,</em> account users must accept supplemental documents when signing.
@property (nonatomic) BOOL supplementalDocumentsMustAccept;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable supplementalDocumentsMustAcceptMetadata;
/// When <em>true,</em> account users must both view and accept supplemental documents when signing.
@property (nonatomic) BOOL supplementalDocumentsMustRead;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable supplementalDocumentsMustReadMetadata;
/// When <em>true,</em> account users must view supplemental documents when signing.
@property (nonatomic) BOOL supplementalDocumentsMustView;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable supplementalDocumentsMustViewMetadata;
/// Boolean that specifies whether or not API calls require a x509 cert in the header of the call.
@property (nonatomic) BOOL suppressCertificateEnforcement;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable suppressCertificateEnforcementMetadata;
/// Specifies the time zone to use with the API.  Valid values are:  - `TZ_01_AfghanistanStandardTime` - `TZ_02_AlaskanStandardTime` - `TZ_03_ArabStandardTime` - `TZ_04_ArabianStandardTime` - `TZ_05_ArabicStandardTime` - `TZ_06_ArgentinaStandardTime` - `TZ_07_AtlanticStandardTime` - `TZ_08_AUS_CentralStandardTime` - `TZ_09_AUS_EasternStandardTime` - `TZ_10_AzerbaijanStandardTime` - `TZ_11_AzoresStandardTime` - `TZ_12_BangladeshStandardTime` - `TZ_13_CanadaCentralStandardTime` - `TZ_14_CapeVerdeStandardTime` - `TZ_15_CaucasusStandardTime` - `TZ_16_CentralAustraliaStandardTime` - `TZ_17_CentralAmericaStandardTime` - `TZ_18_CentralAsiaStandardTime` - `TZ_19_CentralBrazilianStandardTime` - `TZ_20_CentralEuropeStandardTime` - `TZ_21_CentralEuropeanStandardTime` - `TZ_22_CentralPacificStandardTime` - `TZ_23_CentralStandardTime` - `TZ_24_CentralStandardTimeMexico` - `TZ_25_ChinaStandardTime` - `TZ_26_DatelineStandardTime` - `TZ_27_E_AfricaStandardTime` - `TZ_28_E_AustraliaStandardTime` - `TZ_29_E_EuropeStandardTime` - `TZ_30_E_SouthAmericaStandardTime` - `TZ_31_EasternStandardTime` - `TZ_32_EgyptStandardTime` - `TZ_33_EkaterinburgStandardTime` - `TZ_34_FijiStandardTime` - `TZ_35_FLE_StandardTime` - `TZ_36_GeorgianStandardTime` - `TZ_37_GMT_StandardTime` - `TZ_38_GreenlandStandardTime` - `TZ_39_GreenwichStandardTime` - `TZ_40_GTB_StandardTime` - `TZ_41_HawaiianStandardTime` - `TZ_42_IndiaStandardTime` - `TZ_43_IranStandardTime` - `TZ_44_IsraelStandardTime` - `TZ_45_JordanStandardTime` - `TZ_46_KaliningradStandardTime` - `TZ_47_KamchatkaStandardTime` - `TZ_48_KoreaStandardTime` - `TZ_49_MagadanStandardTime` - `TZ_50_MauritiusStandardTime` - `TZ_51_MidAtlanticStandardTime` - `TZ_52_MiddleEastStandardTime` - `TZ_53_MontevideoStandardTime` - `TZ_54_MoroccoStandardTime` - `TZ_55_MountainStandardTime` - `TZ_56_MountainStandardTimeMMexico` - `TZ_57_MyanmarStandardTime` - `TZ_58_N_CentralAsiaStandardTime` - `TZ_59_NamibiaStandardTime` - `TZ_60_NepalStandardTime` - `TZ_61_NewZealandStandardTime` - `TZ_62_NewfoundlandStandardTime` - `TZ_63_NorthAsiaEastStandardTime` - `TZ_64_NorthAsiaStandardTime` - `TZ_65_PacificSAStandardTime` - `TZ_66_PacificStandardTime` - `TZ_67_PacificStandardTimeMexico` - `TZ_68_PakistanStandardTime` - `TZ_69_ParaguayStandardTime` - `TZ_70_RomanceStandardTime` - `TZ_71_RussianStandardTime` - `TZ_72_SAEasternStandardTime` - `TZ_73_SAPacificStandardTime` - `TZ_74_SAWesternStandardTime` - `TZ_75_SamoaStandardTime` - `TZ_76_SE_AsiaStandardTime` - `TZ_77_SingaporeStandardTime` - `TZ_78_SouthAfricaStandardTime` - `TZ_79_SriLankaStandardTime` - `TZ_80_SyriaStandardTime` - `TZ_81_TaipeiStandardTime` - `TZ_82_TasmaniaStandardTime` - `TZ_83_TokyoStandardTime` - `TZ_84_TongaStandardTime` - `TZ_85_TurkeyStandardTime` - `TZ_86_UlaanbaatarStandardTime` - `TZ_87_US_EasternStandardTime` - `TZ_88_USMountainStandardTime` - `TZ_89_VenezuelaStandardTime` - `TZ_90_VladivostokStandardTime` - `TZ_91_W_AustraliaStandardTime` - `TZ_92_W_CentralAfricaStandardTime` - `TZ_93_W_EuropeStandardTime` - `TZ_94_WestAsiaStandardTime` - `TZ_95_WestPacificStandardTime` - `TZ_96_YakutskStandardTime`
@property (nonatomic, copy) NSString * _Nullable timezoneOffsetAPI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneOffsetAPIMetadata;
/// Specifies the time zone to use in the UI.  Valid values are:  - `TZ_01_AfghanistanStandardTime` - `TZ_02_AlaskanStandardTime` - `TZ_03_ArabStandardTime` - `TZ_04_ArabianStandardTime` - `TZ_05_ArabicStandardTime` - `TZ_06_ArgentinaStandardTime` - `TZ_07_AtlanticStandardTime` - `TZ_08_AUS_CentralStandardTime` - `TZ_09_AUS_EasternStandardTime` - `TZ_10_AzerbaijanStandardTime` - `TZ_11_AzoresStandardTime` - `TZ_12_BangladeshStandardTime` - `TZ_13_CanadaCentralStandardTime` - `TZ_14_CapeVerdeStandardTime` - `TZ_15_CaucasusStandardTime` - `TZ_16_CentralAustraliaStandardTime` - `TZ_17_CentralAmericaStandardTime` - `TZ_18_CentralAsiaStandardTime` - `TZ_19_CentralBrazilianStandardTime` - `TZ_20_CentralEuropeStandardTime` - `TZ_21_CentralEuropeanStandardTime` - `TZ_22_CentralPacificStandardTime` - `TZ_23_CentralStandardTime` - `TZ_24_CentralStandardTimeMexico` - `TZ_25_ChinaStandardTime` - `TZ_26_DatelineStandardTime` - `TZ_27_E_AfricaStandardTime` - `TZ_28_E_AustraliaStandardTime` - `TZ_29_E_EuropeStandardTime` - `TZ_30_E_SouthAmericaStandardTime` - `TZ_31_EasternStandardTime` - `TZ_32_EgyptStandardTime` - `TZ_33_EkaterinburgStandardTime` - `TZ_34_FijiStandardTime` - `TZ_35_FLE_StandardTime` - `TZ_36_GeorgianStandardTime` - `TZ_37_GMT_StandardTime` - `TZ_38_GreenlandStandardTime` - `TZ_39_GreenwichStandardTime` - `TZ_40_GTB_StandardTime` - `TZ_41_HawaiianStandardTime` - `TZ_42_IndiaStandardTime` - `TZ_43_IranStandardTime` - `TZ_44_IsraelStandardTime` - `TZ_45_JordanStandardTime` - `TZ_46_KaliningradStandardTime` - `TZ_47_KamchatkaStandardTime` - `TZ_48_KoreaStandardTime` - `TZ_49_MagadanStandardTime` - `TZ_50_MauritiusStandardTime` - `TZ_51_MidAtlanticStandardTime` - `TZ_52_MiddleEastStandardTime` - `TZ_53_MontevideoStandardTime` - `TZ_54_MoroccoStandardTime` - `TZ_55_MountainStandardTime` - `TZ_56_MountainStandardTimeMMexico` - `TZ_57_MyanmarStandardTime` - `TZ_58_N_CentralAsiaStandardTime` - `TZ_59_NamibiaStandardTime` - `TZ_60_NepalStandardTime` - `TZ_61_NewZealandStandardTime` - `TZ_62_NewfoundlandStandardTime` - `TZ_63_NorthAsiaEastStandardTime` - `TZ_64_NorthAsiaStandardTime` - `TZ_65_PacificSAStandardTime` - `TZ_66_PacificStandardTime` - `TZ_67_PacificStandardTimeMexico` - `TZ_68_PakistanStandardTime` - `TZ_69_ParaguayStandardTime` - `TZ_70_RomanceStandardTime` - `TZ_71_RussianStandardTime` - `TZ_72_SAEasternStandardTime` - `TZ_73_SAPacificStandardTime` - `TZ_74_SAWesternStandardTime` - `TZ_75_SamoaStandardTime` - `TZ_76_SE_AsiaStandardTime` - `TZ_77_SingaporeStandardTime` - `TZ_78_SouthAfricaStandardTime` - `TZ_79_SriLankaStandardTime` - `TZ_80_SyriaStandardTime` - `TZ_81_TaipeiStandardTime` - `TZ_82_TasmaniaStandardTime` - `TZ_83_TokyoStandardTime` - `TZ_84_TongaStandardTime` - `TZ_85_TurkeyStandardTime` - `TZ_86_UlaanbaatarStandardTime` - `TZ_87_US_EasternStandardTime` - `TZ_88_USMountainStandardTime` - `TZ_89_VenezuelaStandardTime` - `TZ_90_VladivostokStandardTime` - `TZ_91_W_AustraliaStandardTime` - `TZ_92_W_CentralAfricaStandardTime` - `TZ_93_W_EuropeStandardTime` - `TZ_94_WestAsiaStandardTime` - `TZ_95_WestPacificStandardTime` - `TZ_96_YakutskStandardTime`
@property (nonatomic, copy) NSString * _Nullable timezoneOffsetUI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneOffsetUIMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable universalSignatureOptIn;
/// Reserved for DocuSign.
@property (nonatomic) BOOL useAccountLevelEmail;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useAccountLevelEmailMetadata;
/// When <em>true,</em> the account uses an Electronic Record and Signature Disclosure Statement.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL useConsumerDisclosure;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useConsumerDisclosureMetadata;
/// When <em>true,</em> specifies that recipients in the same account as the sender must agree to eSign an Electronic Record and Signature Disclosure Statement.
@property (nonatomic) BOOL useConsumerDisclosureWithinAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useConsumerDisclosureWithinAccountMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL useDerivedKeys;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useDerivedKeysMetadata;
/// When <em>true,</em> signers are required to use Express Digital Signatures.
@property (nonatomic) BOOL useDocuSignExpressSignerCertificate;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useDocuSignExpressSignerCertificateMetadata;
@property (nonatomic) BOOL useMultiAppGroupsData;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useMultiAppGroupsDataMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL useNewBlobForPdf;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useNewBlobForPdfMetadata;
/// When <em>true,</em> signers are required to use SAFE digital signatures.
@property (nonatomic) BOOL useSAFESignerCertificates;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useSAFESignerCertificatesMetadata;
/// When <em>true,</em> the account can use the API.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL usesAPI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable usesAPIMetadata;
/// Boolean that specifies whether the account uses the digital signature provider platform to eSign.
@property (nonatomic) BOOL useSignatureProviderPlatform;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useSignatureProviderPlatformMetadata;
/// Boolean that specifies whether validations on recipient email domains are allowed.
@property (nonatomic) BOOL validationsAllowed;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable validationsAllowedMetadata;
/// Valid values are:  - `docusign` - `account`
@property (nonatomic, copy) NSString * _Nullable validationsBrand;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable validationsBrandMetadata;
/// Valid values are:  - `none` - `monthly`
@property (nonatomic, copy) NSString * _Nullable validationsCadence;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable validationsCadenceMetadata;
/// When <em>true,</em> enables validations.
@property (nonatomic) BOOL validationsEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable validationsEnabledMetadata;
/// Valid values are:  - `none` - `life_sciences_part11`
@property (nonatomic, copy) NSString * _Nullable validationsReport;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable validationsReportMetadata;
/// When <em>true,</em> the <a href="https://support.docusign.com/en/articles/How-do-I-manage-the-watermark-for-In-Process-envelopes-sent-from-my-account">watermark feature</a> is enabled for the account.
@property (nonatomic) BOOL waterMarkEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable waterMarkEnabledMetadata;
/// When <em>true,</em> sent reminders are included in the envelope history.
@property (nonatomic) BOOL writeReminderToEnvelopeHistory;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable writeReminderToEnvelopeHistoryMetadata;
/// The smallest screen allowed.
@property (nonatomic, copy) NSString * _Nullable wurflMinAllowableScreenSize;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable wurflMinAllowableScreenSizeMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIPropertyMetadata;
@class DSAPIRecipientAdditionalNotification;
@class DSAPIDocumentVisibility;
@class DSAPIRecipientEmailNotification;
@class DSAPIErrorDetails;
@class DSAPIRecipientAttachment;
@class DSAPIUserInfo;
@class DSAPIRecipientSMSAuthentication;
@class DSAPISocialAuthentication;

/// Contains information about an agent recipient. An agent is a recipient who can add name and email information for recipients that appear after the agent in routing order.
SWIFT_CLASS("_TtC11DocuSignAPI10DSAPIAgent")
@interface DSAPIAgent : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic) BOOL addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The email ID of the agent. Notification of the document to sign is sent to this email id.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name. Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The total number of tabs in the documents. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPIMergeField;

/// A tab that allows the recipient to approve documents without placing a signature or initials on the document.
SWIFT_CLASS("_TtC11DocuSignAPI12DSAPIApprove")
@interface DSAPIApprove : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// Specifies the approval text that displays in the tab.
@property (nonatomic, copy) NSString * _Nullable buttonText;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable buttonTextMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to be applied. You can only use this when adding new tabs for a recipient. When used, the new tab inherits all of the properties of the custom tab.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// Specifies the page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.  <em>Note:</em> Approve, Date Signed, Decline, Email Address, and Note tabs do not display custom tooltip text in the signing interface. Although you can technically set a value via the API for these tabs, it will not be displayed to the recipient.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Contains information about an attachment.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIAttachment")
@interface DSAPIAttachment : NSObject
/// Valid values are `sender` and `senderAndAllRecipients`.
@property (nonatomic, copy) NSString * _Nullable accessControl;
/// The unique identifier for the attachment.
@property (nonatomic, copy) NSString * _Nullable attachmentId;
/// Specifies the type of the attachment for the recipient.
@property (nonatomic, copy) NSString * _Nullable attachmentType;
/// A Base64-encoded representation of the attachment that is used to upload and download the file. File attachments may be up to 50 MB in size.
@property (nonatomic, copy) NSString * _Nullable data;
/// A label for the attachment. Potential values include:   - `guidedForm`: <a href="https://www.docusign.com/products/guided-forms">Guided forms</a> provide a step-by-step, mobile-ready experience to help signers easily complete long or complex forms. - `eventNotifications`: A list of envelope-level event statuses that trigger Connect to send updates to the endpoint specified in the `url` property.
@property (nonatomic, copy) NSString * _Nullable label;
/// The name of the attachment.
@property (nonatomic, copy) NSString * _Nullable name;
/// The URL of a previously staged chunked upload. Using a chunked upload enables you to stage a large, chunkable temp file. You then use the `remoteUrl` property to reference the chunked upload as the content in attachment and document-related requests. The `remoteUrl` property cannot be used for downloads.
@property (nonatomic, copy) NSURL * _Nullable remoteUrl;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAccessControl:(NSString * _Nullable)accessControl attachmentId:(NSString * _Nullable)attachmentId attachmentType:(NSString * _Nullable)attachmentType data:(NSString * _Nullable)data label:(NSString * _Nullable)label name:(NSString * _Nullable)name remoteUrl:(NSURL * _Nullable)remoteUrl OBJC_DESIGNATED_INITIALIZER;
@end


/// Contains information about the BCC email address.
SWIFT_CLASS("_TtC11DocuSignAPI20DSAPIBccEmailAddress")
@interface DSAPIBccEmailAddress : NSObject
/// Only users with canManageAccount setting can use this option. An array of up to 5 email addresses the envelope is sent to as a BCC email.    Example: If your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.
@property (nonatomic, copy) NSString * _Nullable bccEmailAddressId;
/// Specifies the BCC email address. DocuSign verifies that the email format is correct, but does not verify that the email is active.Using this overrides the BCC for Email Archive information setting for this envelope.  Maximum of length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBccEmailAddressId:(NSString * _Nullable)bccEmailAddressId email:(NSString * _Nullable)email OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPITabs;

/// Contains information about a carbon copy recipient. Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date or add information to any of the documents.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPICarbonCopy")
@interface DSAPICarbonCopy : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditEmail;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditName;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Not applicable for Carbon Copy recipients.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address. Notification of the document to sign is sent to this email address.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name. Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
@property (nonatomic, copy) NSString * _Nullable linkedAccountConfigurationId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The total number of tabs in the documents. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Contains information about a certified delivery recipient. Certified delivery recipients must receive the completed documents for the envelope to be completed. However, they don't need to sign, initial, date or add information to any of the documents.
SWIFT_CLASS("_TtC11DocuSignAPI22DSAPICertifiedDelivery")
@interface DSAPICertifiedDelivery : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditEmail;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditName;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name. Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The status of the recipient. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The total number of tabs in the documents. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to select a yes/no (on/off) option.
SWIFT_CLASS("_TtC11DocuSignAPI13DSAPICheckbox")
@interface DSAPICheckbox : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to apply. This property can only be used when adding new tabs for a recipient. When used, the new tab inherits all custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// This property does not apply to `checkbox` tabs.  To require users to check at least one, or at most some number of checkboxes, associate the checkbox tabs with a [`tabGroup`][tabGroup]. Then set the following `tabGroup` properties:  - [`maximumAllowed`][maximumAllowed] - [`minimumRequired`][minimumRequired] - [`groupRule`][groupRule] specifies how the other two properties are interpreted.  You can find an example at [Stack Overflow][so].  [so]:               https://stackoverflow.com/questions/58209376/checkbox-validation-using-docusign-rest-api/58210277#58210277 [tabGroup]:         /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups [groupRule]:        /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_grouprule [maximumAllowed]:   /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_maximumallowed [minimumRequired]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_minimumrequired
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the checkbox is selected.
@property (nonatomic) BOOL selected;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable selectedMetadata;
@property (nonatomic, copy) NSString * _Nullable selectedOriginal;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable selectedOriginalMetadata;
/// When <em>true,</em> this tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-7, -6)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-7, -6)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// This client specific details for the telemetry events.
SWIFT_CLASS("_TtC11DocuSignAPI18DSAPIClientContext")
@interface DSAPIClientContext : NSObject
/// The name of application.
@property (nonatomic, copy) NSString * _Nullable application;
/// The name of environment.
@property (nonatomic, copy) NSString * _Nullable environment;
/// The name of site.
@property (nonatomic, copy) NSString * _Nullable site;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithApplication:(NSString * _Nullable)application environment:(NSString * _Nullable)environment site:(NSString * _Nullable)site OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that displays the recipient's company name.
SWIFT_CLASS("_TtC11DocuSignAPI12DSAPICompany")
@interface DSAPICompany : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Details about consumer disclosures.
SWIFT_CLASS("_TtC11DocuSignAPI23DSAPIConsumerDisclosure")
@interface DSAPIConsumerDisclosure : NSObject
/// The GUID of the account associated with the consumer disclosure.
@property (nonatomic, copy) NSString * _Nullable accountEsignId;
/// When <em>true,</em> indicates that the customer can withdraw their consent to the consumer disclosure when they decline to sign documents. If these recipients sign documents sent to them from your account in the future, they will be required to agree to the terms in the disclosure. The default value is <em>false.</em> <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowCDWithdraw;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowCDWithdrawMetadata;
/// If the customer needs to change their email address, this is the email address to which they should the change request.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable changeEmail;
/// Other information about the requirements for the user to change their email address.  Maximum length: 255 characters.  Example:   `We do not require any other information from you to change your email address.`
@property (nonatomic, copy) NSString * _Nullable changeEmailOther;
/// Specifies the company name used in the disclosure. The default value is the account name.  However, if your account uses signing brands that specify a company name, you can substitute the brand's company name by setting the `useBrand` property to <em>true.</em> Whenever an envelope is sent from the account that uses a signing brand with a specified `companyName`, that value is used in email notifications and in the signing experience.  <em>Note:</em> This substitution only works if you use the default legal disclosure or if you apply the `companyName` to the merge fields in a custom ERSD. You must also set the value of the `useBrand` property to <em>true.</em>
@property (nonatomic, copy) NSString * _Nullable companyName;
/// The phone number of the company associated with the consumer disclosure, as a free-formatted string.
@property (nonatomic, copy) NSString * _Nullable companyPhone;
/// The cost per page if the customer requests paper copies.  Example:   `0.0000`
@property (nonatomic, copy) NSString * _Nullable copyCostPerPage;
/// Specifies the fee collection method for cases in which the customer requires paper copies of the document.  Maximum length: 255 characters.  Example:   `We will bill you for any fees at that time, if any.`
@property (nonatomic, copy) NSString * _Nullable copyFeeCollectionMethod;
/// The email address to which the customer should send a request for copies of a document.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable copyRequestEmail;
/// When <em>true,</em> indicates that the consumer disclosure is a custom disclosure. The default is <em>false.</em>
@property (nonatomic) BOOL custom;
/// When <em>true</em> (default), indicates that eSign is enabled.
@property (nonatomic, copy) NSString * _Nullable enableEsign;
/// The final, assembled text of the Electronic Record and Signature Disclosure that includes the appropriate `companyName` and other specifics. It also includes the HTML tags used for formatting.
@property (nonatomic, copy) NSString * _Nullable esignAgreement;
/// The template for the Electronic Record and Signature Disclosure, which contains placeholders for information such as the `companyName`. It also includes the HTML tags used for formatting.  <em>Note:</em> If you are switching to or updating a custom disclosure, you can edit both the text and the HTML formatting.
@property (nonatomic, copy) NSString * _Nullable esignText;
/// The code for the language version of the disclosure. The following languages are supported:  - Arabic (`ar`) - Bulgarian (`bg`) - Czech (`cs`) - Chinese Simplified (`zh_CN`) - Chinese Traditional (`zh_TW`) - Croatian (`hr`) - Danish (`da`) - Dutch (`nl`) - English US (`en`) - English UK (`en_GB`) - Estonian (`et`) - Farsi (`fa`) - Finnish (`fi`) - French (`fr`) - French Canadian (`fr_CA`) - German (`de`) - Greek (`el`) - Hebrew (`he`) - Hindi (`hi`) - Hungarian (`hu`) - Bahasa Indonesian (`id`) - Italian (`it`) - Japanese (`ja`) - Korean (`ko`) - Latvian (`lv`) - Lithuanian (`lt`) - Bahasa Melayu (`ms`) - Norwegian (`no`) - Polish (`pl`) - Portuguese (`pt`) - Portuguese Brazil (`pt_BR`) - Romanian (`ro`) - Russian (`ru`) - Serbian (`sr`) - Slovak (`sk`) - Slovenian (`sl`) - Spanish (`es`) - Spanish Latin America (`es_MX`) - Swedish (`sv`) - Thai (`th`) - Turkish (`tr`) - Ukrainian (`uk`)  - Vietnamese (`vi`)  Additionally, you can automatically detect the browser language being used by the viewer and display the disclosure in that language by setting the value to `browser`.
@property (nonatomic, copy) NSString * _Nullable languageCode;
/// When <em>true,</em> the  recipient must agree to the consumer disclosure. The value of this property is read-only. It is calculated based on the account setting `consumerDisclosureFrequency` and the user's actions.
@property (nonatomic) BOOL mustAgreeToEsign;
/// <em>Deprecated.</em>   The `pdfId` property in the consumer_disclosure PUT request is deprecated. For security reasons going forward, any value provided in the request packet must be ignored.
@property (nonatomic, copy) NSString * _Nullable pdfId;
/// When <em>true,</em> specifies that the company name in the signing brand is used for the disclosure. Whenever an envelope is sent from the account that uses a signing brand with a specified company name, that value is used in email notifications and in the signing experience.    When <em>false</em> (default), or if the signing brand does not specify a company name, the account name is used instead.  <em>Note:</em> This substitution only works if you use the default legal disclosure or if you apply the `companyName` to the merge fields in a custom ERSD.
@property (nonatomic) BOOL useBrand;
/// When <em>true,</em> specifies that recipients in the same account as the sender must agree to eSign an Electronic Record and Signature Disclosure Statement.
@property (nonatomic) BOOL useConsumerDisclosureWithinAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useConsumerDisclosureWithinAccountMetadata;
/// Contains the first address line of the postal address to which a customer can send a consent withdrawal notification.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawAddressLine1;
/// Contains the second address line of the postal address to which a customer can send a consent withdrawal notification.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawAddressLine2;
/// When <em>true</em> (default), indicates that the customer can withdraw consent by email.
@property (nonatomic, copy) NSString * _Nullable withdrawByEmail;
/// When <em>true,</em> indicates that the customer can withdraw consent by postal mail. The default is <em>false.</em>
@property (nonatomic) BOOL withdrawByMail;
/// When <em>true,</em> indicates that the customer can withdraw consent by phone. The default is <em>false.</em>
@property (nonatomic) BOOL withdrawByPhone;
/// Contains the city of the postal address to which a customer can send a consent withdrawal notification.  Maximum length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawCity;
/// Text indicating the consequences of withdrawing consent.  Maximum length: 255 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawConsequences;
/// Contains the email address to which a customer can send a consent withdrawal notification.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawEmail;
/// Contains any other information needed to withdraw consent.  Maximum length: 255 characters.  Example:  `We do not need any other information from you to withdraw consent.`
@property (nonatomic, copy) NSString * _Nullable withdrawOther;
/// Contains the phone number that a customer can call to register consent withdrawal notification as a free-formatted string.  Maximum length: 20 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawPhone;
/// Contains the postal code of the postal address to which a customer can send a consent withdrawal notification.  Maximum length: 20 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawPostalCode;
/// Contains the state of the postal address to which a customer can send a consent withdrawal notification.  Example: `PA`
@property (nonatomic, copy) NSString * _Nullable withdrawState;
- (nonnull instancetype)initWithAccountEsignId:(NSString * _Nullable)accountEsignId allowCDWithdraw:(BOOL)allowCDWithdraw allowCDWithdrawMetadata:(DSAPISettingsMetadata * _Nullable)allowCDWithdrawMetadata changeEmail:(NSString * _Nullable)changeEmail changeEmailOther:(NSString * _Nullable)changeEmailOther companyName:(NSString * _Nullable)companyName companyPhone:(NSString * _Nullable)companyPhone copyCostPerPage:(NSString * _Nullable)copyCostPerPage copyFeeCollectionMethod:(NSString * _Nullable)copyFeeCollectionMethod copyRequestEmail:(NSString * _Nullable)copyRequestEmail custom:(BOOL)custom enableEsign:(NSString * _Nullable)enableEsign esignAgreement:(NSString * _Nullable)esignAgreement esignText:(NSString * _Nullable)esignText languageCode:(NSString * _Nullable)languageCode mustAgreeToEsign:(BOOL)mustAgreeToEsign pdfId:(NSString * _Nullable)pdfId useBrand:(BOOL)useBrand useConsumerDisclosureWithinAccount:(BOOL)useConsumerDisclosureWithinAccount useConsumerDisclosureWithinAccountMetadata:(DSAPISettingsMetadata * _Nullable)useConsumerDisclosureWithinAccountMetadata withdrawAddressLine1:(NSString * _Nullable)withdrawAddressLine1 withdrawAddressLine2:(NSString * _Nullable)withdrawAddressLine2 withdrawByEmail:(NSString * _Nullable)withdrawByEmail withdrawByMail:(BOOL)withdrawByMail withdrawByPhone:(BOOL)withdrawByPhone withdrawCity:(NSString * _Nullable)withdrawCity withdrawConsequences:(NSString * _Nullable)withdrawConsequences withdrawEmail:(NSString * _Nullable)withdrawEmail withdrawOther:(NSString * _Nullable)withdrawOther withdrawPhone:(NSString * _Nullable)withdrawPhone withdrawPostalCode:(NSString * _Nullable)withdrawPostalCode withdrawState:(NSString * _Nullable)withdrawState OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIListCustomField;
@class DSAPITextCustomField;

/// Contains information about custom fields.
SWIFT_CLASS("_TtC11DocuSignAPI17DSAPICustomFields")
@interface DSAPICustomFields : NSObject
/// An array of list custom fields.
@property (nonatomic, copy) NSArray<DSAPIListCustomField *> * _Nullable listCustomFields;
/// An array of text custom fields.
@property (nonatomic, copy) NSArray<DSAPITextCustomField *> * _Nullable textCustomFields;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithListCustomFields:(NSArray<DSAPIListCustomField *> * _Nullable)listCustomFields textCustomFields:(NSArray<DSAPITextCustomField *> * _Nullable)textCustomFields OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to enter a date. Date tabs are one-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. If you need a particular date format enforced, DocuSign recommends using a Text tab with a validation pattern and a validation message to enforce the format.
SWIFT_CLASS("_TtC11DocuSignAPI9DSAPIDate")
@interface DSAPIDate : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A tab that displays the date that the recipient signed the document.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIDateSigned")
@interface DSAPIDateSigned : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.  <em>Note:</em> Approve, Date Signed, Decline, Email Address, and Note tabs do not display custom tooltip text in the signing interface. Although you can technically set a value via the API for these tabs, it will not be displayed to the recipient.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.  This property contains the following information about the central rectangle:  - `DateAreaX`: The X axis position of the top-left corner. - `DateAreaY`: The Y axis position of the top-left corner. - `DateAreaWidth`: The width of the rectangle. - `DateAreaHeight`: The height of the rectangle.
SWIFT_CLASS("_TtC11DocuSignAPI24DSAPIDateStampProperties")
@interface DSAPIDateStampProperties : NSObject
/// The height of the rectangle.
@property (nonatomic, copy) NSString * _Nullable dateAreaHeight;
/// The width of the rectangle.
@property (nonatomic, copy) NSString * _Nullable dateAreaWidth;
/// The X axis position of the top-left corner.
@property (nonatomic, copy) NSString * _Nullable dateAreaX;
/// The Y axis position of the top-left corner.
@property (nonatomic, copy) NSString * _Nullable dateAreaY;
- (nonnull instancetype)initWithDateAreaHeight:(NSString * _Nullable)dateAreaHeight dateAreaWidth:(NSString * _Nullable)dateAreaWidth dateAreaX:(NSString * _Nullable)dateAreaX dateAreaY:(NSString * _Nullable)dateAreaY OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A tab that allows the recipient the option of declining an envelope. If the recipient clicks the tab during the signing process, the envelope is voided.
SWIFT_CLASS("_TtC11DocuSignAPI12DSAPIDecline")
@interface DSAPIDecline : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// Specifies the decline text displayed in the tab.
@property (nonatomic, copy) NSString * _Nullable buttonText;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable buttonTextMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// The reason the recipient declined the document.
@property (nonatomic, copy) NSString * _Nullable declineReason;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable declineReasonMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.  <em>Note:</em> Approve, Date Signed, Decline, Email Address, and Note tabs do not display custom tooltip text in the signing interface. Although you can technically set a value via the API for these tabs, it will not be displayed to the recipient.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPINameValue;

/// A document object.
SWIFT_CLASS("_TtC11DocuSignAPI13DSAPIDocument")
@interface DSAPIDocument : NSObject
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable applyAnchorTabs;
@property (nonatomic, copy) NSString * _Nullable assignTabsToRecipientId;
/// This string sets the display and behavior properties of the document during signing. Valid values:  * `modal`<br>   The document is shown as a supplement action strip   and can be viewed, downloaded, or printed in a modal window.   This is the recommended value for supplemental documents.   * `inline`<br>   The document is shown in the normal signing window.   This value is not used with supplemental documents,   but is the default value for all other documents.
@property (nonatomic, copy) NSString * _Nullable display;
/// The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.
@property (nonatomic, copy) NSString * _Nullable documentBase64;
/// The array of name/value custom data strings to be added to a document. Custom document field information is returned in the status, but otherwise is not used by DocuSign. The array contains the elements:   * `name`: A string that can be a maximum of 50 characters.  * `value`: A string that can be a maximum of 200 characters.  If you are using XML, the name/value pair is contained in a `nameValue` element.
@property (nonatomic, copy) NSArray<DSAPINameValue *> * _Nullable documentFields;
/// Specifies the document ID of this document. This value is used by tabs to determine which document they appear in.
@property (nonatomic, copy) NSString * _Nullable documentId;
/// When <em>true,</em> the document is been already encrypted by the sender for use with the DocuSign Key Manager Security Appliance.
@property (nonatomic) BOOL encryptedWithKeyManager;
/// The file extension type of the document. Non-PDF documents are converted to PDF.  If the document is not a PDF, `fileExtension` is required.  If you try to upload a non-PDF document without a `fileExtension`, you will receive an &quot;unable to load document&quot; error message.
@property (nonatomic, copy) NSString * _Nullable fileExtension;
@property (nonatomic, copy) NSString * _Nullable fileFormatHint;
/// When <em>true,</em> the document is included in the combined document download (`documentsCombinedUri`).  The default value is <em>true.</em>
@property (nonatomic) BOOL includeInDownload;
/// The name of the document.
@property (nonatomic, copy) NSString * _Nullable name;
/// The order in which to sort the results.  Valid values are:    * `asc`: Ascending order. * `desc`: Descending order.
@property (nonatomic, copy) NSString * _Nullable order;
/// The number of pages in the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable pages;
/// The user's encrypted password hash.
@property (nonatomic, copy) NSString * _Nullable password;
@property (nonatomic, copy) NSString * _Nullable pdfFormFieldOption;
/// The file ID from the cloud storage service where the document is located. This information is returned using <a href="/docs/esign-rest-api/reference/cloudstorage/cloudstorage/listfolders/">CloudStorage: listFolders</a> or <a href="/docs/esign-rest-api/reference/cloudstorage/cloudstorage/list/">CloudStorage: list</a>.
@property (nonatomic, copy) NSURL * _Nullable remoteUrl;
/// Sets how the signer interacts with the supplemental document. Valid values:   * `no_interaction`<br>   No recipient action is required.   * `view`<br>   The recipient is required to view the document.   * `accept`<br>   The recipient is required to accept the document by selecting accept during signing, but is not required to view the document.   * `view_accept`<br>   The recipient is required to view and accept the document.
@property (nonatomic, copy) NSString * _Nullable signerMustAcknowledge;
/// When <em>true,</em> the account default setting for the required recipient option is used. If this property is set, `signerMustAcknowledge` cannot be set (and vice versa).
@property (nonatomic) BOOL signerMustAcknowledgeUseAccountDefault;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// When <em>true,</em> PDF form field data is transformed into document tab values when the PDF form field name matches the DocuSign custom tab tabLabel. The resulting PDF form data is also returned in the PDF meta data when requesting the document PDF.
@property (nonatomic) BOOL transformPdfFields;
/// A URI containing the user ID.
@property (nonatomic, copy) NSURL * _Nullable uri;
@property (nonatomic, copy) NSURL * _Nullable fileSandboxURL;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// This object configures a recipient's read/write access to a document.
SWIFT_CLASS("_TtC11DocuSignAPI23DSAPIDocumentVisibility")
@interface DSAPIDocumentVisibility : NSObject
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// Indicates whether the document is editable:  - `editable` - `read_only`
@property (nonatomic, copy) NSString * _Nullable rights;
/// When <em>true,</em> the document is visible to the recipient.
@property (nonatomic) BOOL visible;
- (nonnull instancetype)initWithDocumentId:(NSString * _Nullable)documentId errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails recipientId:(NSString * _Nullable)recipientId rights:(NSString * _Nullable)rights visible:(BOOL)visible OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A complex type defining the management and access rights of a recipient assigned as an editor on the envelope. Editors have the same management and access rights for the envelope as the sender. They can make changes to the envelope as if they were using the Correct feature. This recipient can add name and email information, add or change the routing order and set authentication options for the remaining recipients. Additionally, this recipient can edit signature/initial tabs and text tabs for the remaining recipients.
SWIFT_CLASS("_TtC11DocuSignAPI11DSAPIEditor")
@interface DSAPIEditor : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address. Notification of the document to sign is sent to this email address.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name.   Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The total number of tabs in the documents. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to enter an email address. This is a one-line field that checks that a valid email address is entered. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.  When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
SWIFT_CLASS("_TtC11DocuSignAPI10DSAPIEmail")
@interface DSAPIEmail : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A tab that displays the recipient's email as entered in the recipient information.
SWIFT_CLASS("_TtC11DocuSignAPI17DSAPIEmailAddress")
@interface DSAPIEmailAddress : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to be applied. This property can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.  <em>Note:</em> Approve, Date Signed, Decline, Email Address, and Note tabs do not display custom tooltip text in the signing interface. Although you can technically set a value via the API for these tabs, it will not be displayed to the recipient.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A complex element that allows  the sender to override some envelope email setting information. This can be used to override the Reply To email address and name associated with the envelope and to override the BCC email addresses to which an envelope is sent.   When the emailSettings information is used for an envelope, it only applies to that envelope.   <em>IMPORTANT:</em> The emailSettings information is not returned in the GET for envelope status. Use GET /email_settings to return information about the emailSettings.   EmailSettings consists of:   * replyEmailAddressOverride - The Reply To email used for the envelope. DocuSign will verify that a correct email format is used, but does not verify that the email is active. Maximum Length: 100 characters. * replyEmailNameOverride - The name associated with the Reply To email address. Maximum Length: 100 characters. * bccEmailAddresses - An array of up to five email addresses to which the envelope is sent to as a BCC email. Only users with canManageAccount setting set to true can use this option.  DocuSign verifies that the email format is correct, but does not verify that the email is active. Using this overrides the BCC for Email Archive information setting for this envelope. Maximum Length: 100 characters. <em>Example</em>: if your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.
SWIFT_CLASS("_TtC11DocuSignAPI18DSAPIEmailSettings")
@interface DSAPIEmailSettings : NSObject
/// An array containing the email address that should receive a copy of all email communications related to an envelope for archiving purposes. Maximum Length: 100 characters.  While this property is an array, note that it takes only a single email address.  <em>Note:</em> Only users with the `canManageAccount` setting set to <em>true</em> can use this option.   DocuSign verifies that the email format is correct, but does not verify that the email address is active. You can use this for archiving purposes. However, using this property overrides the BCC for Email Archive information setting for this envelope.   <em>Example:</em> if your account has BCC for Email Archive set up for the email address archive@mycompany.com and you send an envelope using the BCC Email Override to send a BCC email to salesarchive@mycompany.com, then a copy of the envelope is only sent to the salesarchive@mycompany.com email address.
@property (nonatomic, copy) NSArray<DSAPIBccEmailAddress *> * _Nullable bccEmailAddresses;
/// The Reply To email address to use for email replies, instead of the one that is configured at the account level. DocuSign verifies that the email address is in a correct format, but does not verify that it is active. Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable replyEmailAddressOverride;
/// The name to associate with the Reply To email address, instead of the name that is configured at the account level. Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable replyEmailNameOverride;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBccEmailAddresses:(NSArray<DSAPIBccEmailAddress *> * _Nullable)bccEmailAddresses replyEmailAddressOverride:(NSString * _Nullable)replyEmailAddressOverride replyEmailNameOverride:(NSString * _Nullable)replyEmailNameOverride OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPIEnvelopeDocument;
@class DSAPIFolder;
@class DSAPILockInformation;
@class DSAPINotification;
@class DSAPIRecipients;

SWIFT_CLASS("_TtC11DocuSignAPI13DSAPIEnvelope")
@interface DSAPIEnvelope : NSObject
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable accessControlListBase64;
/// When <em>true,</em> users can add comments to the documents in the envelope. For example, if a signer has a question about the text in the document, they can add a comment to the document.
@property (nonatomic) BOOL allowComments;
/// When <em>true,</em> the Document Markup feature is enabled.  <em>Note:</em>  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.
@property (nonatomic) BOOL allowMarkup;
/// When <em>true,</em> the recipient can redirect an envelope to a more appropriate recipient.
@property (nonatomic) BOOL allowReassign;
/// When <em>true,</em> recipients can view the history of the envelope.
@property (nonatomic) BOOL allowViewHistory;
/// Deprecated. This feature has been replaced by signing groups.
@property (nonatomic, copy) NSString * _Nullable anySigner;
/// When <em>true,</em> the envelope is queued for processing and the value of the `status` property is set to `Processing`. Additionally, GET status calls return `Processing` until completed.   <em>Note:</em> A `transactionId` is required for this call to work correctly. When the envelope is created, the status is `Processing` and an `envelopeId` is not returned in the response. To get the `envelopeId`, use a GET envelope query by using the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/">transactionId</a> or by checking the Connect notification.
@property (nonatomic) BOOL asynchronous;
/// Contains a URL for retrieving the attachments that are associated with the envelope.
@property (nonatomic, copy) NSURL * _Nullable attachmentsUri;
/// When <em>true,</em> marks all of the documents in the envelope as authoritative copies.  <em>Note:</em> You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to <em>true</em> at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to <em>false.</em>
@property (nonatomic) BOOL authoritativeCopy;
/// The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set. If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
@property (nonatomic, copy) NSString * _Nullable authoritativeCopyDefault;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// The ID of the brand.
@property (nonatomic, copy) NSString * _Nullable brandId;
/// When <em>true,</em> the `brandId` for the envelope is locked and senders cannot change the brand used for the envelope.
@property (nonatomic) BOOL brandLock;
/// The URI for retrieving certificate information.
@property (nonatomic, copy) NSURL * _Nullable certificateUri;
/// Specifies the date and time this item was completed.
@property (nonatomic, copy) NSDate * _Nullable completedDateTime;
@property (nonatomic, copy) NSString * _Nullable copyRecipientData;
/// The UTC DateTime when the item was created.
@property (nonatomic, copy) NSDate * _Nullable createdDateTime;
@property (nonatomic, strong) DSAPICustomFields * _Nullable customFields;
/// The URI for retrieving custom fields.
@property (nonatomic, copy) NSURL * _Nullable customFieldsUri;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable deletedDateTime;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// When <em>true,</em> responsive documents are disabled for the envelope.
@property (nonatomic) BOOL disableResponsiveDocument;
/// The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.
@property (nonatomic, copy) NSString * _Nullable documentBase64;
/// The URI for retrieving all of the documents associated with the envelope as a single PDF file.
@property (nonatomic, copy) NSURL * _Nullable documentsCombinedUri;
/// The URI for retrieving all of the documents associated with the envelope as separate files.
@property (nonatomic, copy) NSURL * _Nullable documentsUri;
/// This is the same as the email body. If specified it is included in email body for all envelope recipients.
@property (nonatomic, copy) NSString * _Nullable emailBlurb;
@property (nonatomic, strong) DSAPIEmailSettings * _Nullable emailSettings;
/// The subject line of the email message that is sent to all recipients.  For information about adding merge field information to the email subject, see <a href="/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields">Template Email Subject Merge Fields</a>.  <em>Note:</em> The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.
@property (nonatomic, copy) NSString * _Nullable emailSubject;
/// When <em>true,</em> the signer is allowed to print the document and sign it on paper.
@property (nonatomic) BOOL enableWetSign;
/// When <em>true,</em> signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.  <em>Note:</em> To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` <em>true.</em>  [docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/
@property (nonatomic) BOOL enforceSignerVisibility;
/// An array of attachment objects that provide information about the attachments that are associated with the envelope.
@property (nonatomic, copy) NSArray<DSAPIAttachment *> * _Nullable envelopeAttachments;
/// An array containing information about the documents that are included in the envelope.
@property (nonatomic, copy) NSArray<DSAPIEnvelopeDocument *> * _Nullable envelopeDocuments;
/// The envelope ID of the envelope status that failed to post.
@property (nonatomic, copy) NSString * _Nullable envelopeId;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-user-guide-set-advanced-document-options">Envelope ID Stamping</a> is enabled. After a document or attachment is stamped with an Envelope ID, the ID is seen by all recipients and becomes a permanent part of the document and cannot be removed.
@property (nonatomic) BOOL envelopeIdStamping;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable envelopeLocation;
/// The URI for retrieving the envelope or envelopes.
@property (nonatomic, copy) NSURL * _Nullable envelopeUri;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSString * _Nullable expireAfter;
/// The date and time that the envelope is set to expire. This value is determined by the `InitialSentDateTime` of the envelope and the `expireAfter` property of the `notification` object. (Note that the `expireAfter` property of the envelope itself is not used.)
@property (nonatomic, copy) NSDate * _Nullable expireDateTime;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSString * _Nullable expireEnabled;
/// May contain an external identifier for the envelope.
@property (nonatomic, copy) NSString * _Nullable externalEnvelopeId;
/// A list of folder objects.
@property (nonatomic, copy) NSArray<DSAPIFolder *> * _Nullable folders;
/// When <em>true,</em> indicates that users have added comments to the envelope.
@property (nonatomic) BOOL hasComments;
/// When <em>true,</em> indicates that the data collected through form fields on a document has changed.
@property (nonatomic) BOOL hasFormDataChanged;
/// When <em>true,</em> indicates that a .wav file used for voice authentication is included in the envelope.
@property (nonatomic) BOOL hasWavFile;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable holder;
/// The date and time the envelope was initially sent.
@property (nonatomic, copy) NSDate * _Nullable initialSentDateTime;
/// When <em>true,</em> indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).
@property (nonatomic) BOOL is21CFRPart11;
/// When <em>true,</em> indicates that the envelope is a dynamic envelope.
@property (nonatomic) BOOL isDynamicEnvelope;
/// When <em>true,</em> indicates that the envelope is a signature-provided envelope.
@property (nonatomic) BOOL isSignatureProviderEnvelope;
/// The date and time that the item was last modified.
@property (nonatomic, copy) NSDate * _Nullable lastModifiedDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable location;
@property (nonatomic, strong) DSAPILockInformation * _Nullable lockInformation;
/// When <em>true,</em> prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope.   Additionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes.   However, if the `messageLock` node is set to <em>true</em> and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.
@property (nonatomic) BOOL messageLock;
@property (nonatomic, strong) DSAPINotification * _Nullable notification;
/// The URI for retrieving notifications.
@property (nonatomic, copy) NSURL * _Nullable notificationUri;
/// The date that a purge was completed.
@property (nonatomic, copy) NSDate * _Nullable purgeCompletedDate;
/// The date that a purge was requested.
@property (nonatomic, copy) NSDate * _Nullable purgeRequestDate;
/// Shows the current purge state for the envelope. Valid values:  - `unpurged`: There has been no successful request to purge documents. - `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged. - `documents_dequeued`: The envelope documents have been taken out of the purge queue. - `documents_purged`: The envelope documents have been successfully purged. - `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged. - `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged. - `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted. - `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.  <em>Related topics</em>  - <a href="/docs/esign-rest-api/esign101/concepts/documents/purging/">Purging documents (eSingature Concepts)</a> - <a href="https://www.docusign.com/blog/developers/purging-documents-envelope">Purging documents in an envelope (blog post)</a>
@property (nonatomic, copy) NSString * _Nullable purgeState;
@property (nonatomic, strong) DSAPIRecipients * _Nullable recipients;
/// When <em>true,</em> prevents senders from changing, correcting, or deleting the recipient information for the envelope.
@property (nonatomic) BOOL recipientsLock;
/// Contains a URI for an endpoint that you can use to retrieve the recipients.
@property (nonatomic, copy) NSURL * _Nullable recipientsUri;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable sender;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// When <em>true,</em> recipients can sign on a mobile device.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerCanSignOnMobile;
/// Specifies the physical location where the signing takes place. It can have two enumeration values; `inPerson` and `online`. The default value is `online`.
@property (nonatomic, copy) NSString * _Nullable signingLocation;
/// Indicates the envelope status. Valid values are:  * `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in. * `created`: The envelope is created as a draft. It can be modified and sent later. * `declined`: The envelope has been declined by the recipients. * `delivered`: The envelope has been delivered to the recipients. * `sent`: The envelope will be sent to the recipients after the envelope is created. * `signed`: The envelope has been signed by the recipients. * `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.
@property (nonatomic, copy) NSString * _Nullable status;
/// The data and time that the status changed.
@property (nonatomic, copy) NSDate * _Nullable statusChangedDateTime;
/// The DateTime that the envelope changed status (i.e. was created or sent.)
@property (nonatomic, copy) NSDate * _Nullable statusDateTime;
/// The URI for retrieving the templates.
@property (nonatomic, copy) NSURL * _Nullable templatesUri;
/// Used to identify an envelope.   The ID is a sender-generated value and is valid in the DocuSign system for 7 days.  It is recommended that a transaction ID is used for offline  signing to ensure that an envelope is not sent multiple times.  The `transactionId` property can be used determine an envelope's  status (i.e. was it created or not) in cases where the internet c  onnection was lost before the envelope status was returned.
@property (nonatomic, copy) NSString * _Nullable transactionId;
/// When <em>true,</em> the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When <em>false,</em> the Electronic Record and Signature Disclosure is not shown to any envelope recipients.   If the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.
@property (nonatomic, copy) NSString * _Nullable useDisclosure;
/// The date and time the envelope or template was voided.
@property (nonatomic, copy) NSDate * _Nullable voidedDateTime;
/// The reason the envelope or template was voided.
@property (nonatomic, copy) NSString * _Nullable voidedReason;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIRecipientViewRequest;
@class DSAPITemplateRole;

/// Envelope object definition.
SWIFT_CLASS("_TtC11DocuSignAPI23DSAPIEnvelopeDefinition")
@interface DSAPIEnvelopeDefinition : NSObject
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable accessControlListBase64;
/// Sets the document reading zones for screen reader applications.  This element can only be used if Document Accessibility is enabled for the account.  <em>Note:</em> This information is currently generated from the DocuSign web console by setting the reading zones when creating a template, exporting the reading zone string information, and adding it here.
@property (nonatomic, copy) NSString * _Nullable accessibility;
/// When <em>true,</em> comments are allowed on the envelope.
@property (nonatomic) BOOL allowComments;
/// When <em>true,</em> the Document Markup feature is enabled.  <em>Note:</em>  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.
@property (nonatomic) BOOL allowMarkup;
/// When <em>true,</em> the recipient can redirect an envelope to a more appropriate recipient.
@property (nonatomic) BOOL allowReassign;
/// When <em>true,</em> this enables the Recursive Recipients feature and allows a recipient to appear more than once in the routing order.
@property (nonatomic) BOOL allowRecipientRecursion;
/// When <em>true,</em> users can view the history of the envelope.
@property (nonatomic) BOOL allowViewHistory;
/// Deprecated. This feature has been replaced by signing groups.
@property (nonatomic, copy) NSString * _Nullable anySigner;
/// When <em>true,</em> the envelope is queued for processing and the value of the `status` property is set to `Processing`. Additionally, GET status calls return `Processing` until completed.   <em>Note:</em> A `transactionId` is required for this call to work correctly. When the envelope is created, the status is `Processing` and an `envelopeId` is not returned in the response. To get the `envelopeId`, use a GET envelope query by using the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/">transactionId</a> or by checking the Connect notification.
@property (nonatomic) BOOL asynchronous;
/// An array of attachment objects containing details about any envelope attachments.
@property (nonatomic, copy) NSArray<DSAPIAttachment *> * _Nullable attachments;
/// The URI for retrieving the envelope attachments.
@property (nonatomic, copy) NSURL * _Nullable attachmentsUri;
/// When <em>true,</em> marks all of the documents in the envelope as authoritative copies.  <em>Note:</em> You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to <em>true</em> at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to <em>false.</em>
@property (nonatomic) BOOL authoritativeCopy;
/// The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set. If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
@property (nonatomic, copy) NSString * _Nullable authoritativeCopyDefault;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// The ID of the brand, or text and formatting, to use for the envelope. To use brands, account branding must be enabled for the account.  <em>Note:</em> When creating an envelope using a branded template, include this value to ensure that the brand is applied.
@property (nonatomic, copy) NSString * _Nullable brandId;
/// When <em>true,</em> the `brandId` for the envelope is locked and senders cannot change the brand used for the envelope.
@property (nonatomic) BOOL brandLock;
/// The URI for retrieving certificate information.
@property (nonatomic, copy) NSURL * _Nullable certificateUri;
/// The date and time that the envelope was completed.
@property (nonatomic, copy) NSDate * _Nullable completedDateTime;
/// This value is only applicable when copying an existing envelope. Provide the ID of the envelope to clone in `envelopeId`.  When <em>true,</em> the recipient field values of the existing envelope are included. Only values from data entry fields, like checkboxes and radio buttons, will be copied. Fields that require an action, like signatures and initials, will not be included.
@property (nonatomic, copy) NSString * _Nullable copyRecipientData;
/// The date and time that the envelope was created.
@property (nonatomic, copy) NSDate * _Nullable createdDateTime;
@property (nonatomic, strong) DSAPICustomFields * _Nullable customFields;
/// The URI for retrieving custom fields.
@property (nonatomic, copy) NSURL * _Nullable customFieldsUri;
/// The date and time that the recipient declined the envelope.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The date and time that the envelope was deleted.
@property (nonatomic, copy) NSDate * _Nullable deletedDateTime;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// When <em>true,</em> the responsive document feature is turned off for the envelope.
@property (nonatomic) BOOL disableResponsiveDocument;
/// The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.
@property (nonatomic, copy) NSString * _Nullable documentBase64;
/// A complex element that contains details about the documents associated with the envelope.
@property (nonatomic, copy) NSArray<DSAPIDocument *> * _Nullable documents;
/// The URI for retrieving all of the documents associated with the envelope as a single PDF file.
@property (nonatomic, copy) NSURL * _Nullable documentsCombinedUri;
/// The URI for retrieving all of the documents associated with the envelope as separate files.
@property (nonatomic, copy) NSURL * _Nullable documentsUri;
/// This optional element holds the body of the email message that is sent to all envelope recipients.   Maximum Length: 10000 characters.
@property (nonatomic, copy) NSString * _Nullable emailBlurb;
@property (nonatomic, strong) DSAPIEmailSettings * _Nullable emailSettings;
/// The subject line of the email message that is sent to all recipients.  For information about adding merge field information to the email subject, see <a href="/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields">Template Email Subject Merge Fields</a>.  <em>Note:</em> The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.
@property (nonatomic, copy) NSString * _Nullable emailSubject;
/// When <em>true,</em> the signer is allowed to print the document and sign it on paper.
@property (nonatomic) BOOL enableWetSign;
/// When <em>true,</em> signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.  <em>Note:</em> To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` <em>true.</em>  [docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/
@property (nonatomic) BOOL enforceSignerVisibility;
/// An array of attachment objects that provide information about the attachments that are associated with the envelope.
@property (nonatomic, copy) NSArray<DSAPIAttachment *> * _Nullable envelopeAttachments;
/// An array containing information about the documents that are included in the envelope.
@property (nonatomic, copy) NSArray<DSAPIEnvelopeDocument *> * _Nullable envelopeDocuments;
/// The envelope ID.  When used as a request body in <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/">Envelopes: create</a>, this is the ID of the envelope to clone.
@property (nonatomic, copy) NSString * _Nullable envelopeId;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-user-guide-set-advanced-document-options">Envelope ID Stamping</a> is enabled. After a document or attachment is stamped with an Envelope ID, the ID is seen by all recipients and becomes a permanent part of the document and cannot be removed.
@property (nonatomic) BOOL envelopeIdStamping;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable envelopeLocation;
/// The URI for retrieving the envelope or envelopes.
@property (nonatomic, copy) NSURL * _Nullable envelopeUri;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSString * _Nullable expireAfter;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSDate * _Nullable expireDateTime;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSString * _Nullable expireEnabled;
/// May contain an external identifier for the envelope.
@property (nonatomic, copy) NSString * _Nullable externalEnvelopeId;
/// An array of folders that the envelope belongs to.
@property (nonatomic, copy) NSArray<DSAPIFolder *> * _Nullable folders;
/// When <em>true,</em> indicates that users have added comments to the envelope.
@property (nonatomic) BOOL hasComments;
/// When <em>true,</em> indicates that the form data associated with the envelope has changed since it was sent. When <em>false,</em> this property does not appear in the response.
@property (nonatomic) BOOL hasFormDataChanged;
/// When <em>true,</em> indicates that a wave file (voice recording) is part of the envelope.
@property (nonatomic) BOOL hasWavFile;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable holder;
/// The date and time that the envelope was first sent.
@property (nonatomic, copy) NSDate * _Nullable initialSentDateTime;
/// When <em>true,</em> indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).
@property (nonatomic) BOOL is21CFRPart11;
/// When <em>true,</em> indicates that the envelope is a dynamic envelope.
@property (nonatomic) BOOL isDynamicEnvelope;
/// When <em>true,</em> indicates that the envelope is a signature-provided envelope.
@property (nonatomic) BOOL isSignatureProviderEnvelope;
/// The date and time that the item was last modified.
@property (nonatomic, copy) NSDate * _Nullable lastModifiedDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable location;
@property (nonatomic, strong) DSAPILockInformation * _Nullable lockInformation;
/// When <em>true,</em> prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope.   Additionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes.   However, if the `messageLock` node is set to <em>true</em> and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.
@property (nonatomic) BOOL messageLock;
@property (nonatomic, strong) DSAPINotification * _Nullable notification;
/// The URI for retrieving notifications.
@property (nonatomic, copy) NSURL * _Nullable notificationUri;
/// The user's encrypted password hash.
@property (nonatomic, copy) NSString * _Nullable password;
/// The date that a purge was completed.
@property (nonatomic, copy) NSDate * _Nullable purgeCompletedDate;
/// The date that a purge was requested.
@property (nonatomic, copy) NSDate * _Nullable purgeRequestDate;
/// Initiates a purge request. Valid values are:  - `documents_queued`: Places envelope documents in the purge queue. - `documents_and_metadata_queued`: Places envelope documents    and metadata in the purge queue. - `documents_and_metadata_and_redact_queued`: Places envelope documents    and metadata in the purge queue and redacts personal information.  <em>Related topics</em>  - <a href="/docs/esign-rest-api/esign101/concepts/documents/purging/">Purging documents (eSingature Concepts)</a> - <a href="https://www.docusign.com/blog/developers/purging-documents-envelope">Purging documents in an envelope (blog post)</a>
@property (nonatomic, copy) NSString * _Nullable purgeState;
@property (nonatomic, strong) DSAPIRecipients * _Nullable recipients;
/// When <em>true,</em> prevents senders from changing, correcting, or deleting the recipient information for the envelope.
@property (nonatomic) BOOL recipientsLock;
/// Contains a URI for an endpoint that you can use to retrieve the recipients.
@property (nonatomic, copy) NSURL * _Nullable recipientsUri;
@property (nonatomic, strong) DSAPIRecipientViewRequest * _Nullable recipientViewRequest;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable sender;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// When <em>true,</em> recipients can sign on a mobile device.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerCanSignOnMobile;
/// Specifies the physical location where the signing takes place. It can have two enumeration values; `inPerson` and `online`. The default value is `online`.
@property (nonatomic, copy) NSString * _Nullable signingLocation;
/// Indicates the envelope status. Valid values when creating an envelope are:   * `created`: The envelope is created as a draft. It can be modified and sent later. * `sent`: The envelope will be sent to the recipients after the envelope is created.  You can query these additional statuses once the recipients have interacted with the envelope.  * `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in. * `declined`: The envelope has been declined by the recipients. * `delivered`: The envelope has been delivered to the recipients. * `signed`: The envelope has been signed by the recipients. * `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.
@property (nonatomic, copy) NSString * _Nullable status;
/// The data and time that the status changed.
@property (nonatomic, copy) NSDate * _Nullable statusChangedDateTime;
/// The DateTime that the envelope changed status (i.e. was created or sent.)
@property (nonatomic, copy) NSDate * _Nullable statusDateTime;
/// The ID of the template. If a value is not provided, DocuSign generates a value.
@property (nonatomic, copy) NSString * _Nullable templateId;
/// This object specifies the template recipients. Each `roleName` in the template must have a recipient assigned to it. This object is comprised of the following elements:  * `email`: The recipient's email address. * `name`: The recipient's name. * `roleName`: The template roleName associated with the recipient. * `clientUserId`: An optional property that specifies whether the recipient is embedded or remote. If the `clientUserId` is not null, then the recipient is embedded. Note that if a `clientUserId` is used and the account settings `signerMustHaveAccount` or `signerMustLoginToSign` are <em>true,</em> an error is generated on sending. * `defaultRecipient`: Optional, When <em>true,</em> this recipient is the default recipient and any tabs generated by the `transformPdfFields` option are mapped to this recipient. * `routingOrder`: This specifies the routing order of the recipient in the envelope. * `accessCode`: This optional element specifies the access code a recipient has to enter to validate the identity. Maximum Length: 50 characters. * `inPersonSignerName`: Optional. If the template role is an in-person signer, this is the full legal name of the signer. Maximum Length: 100 characters. * `emailNotification`: This is an optional complex element that has a role-specific `emailSubject`, `emailBody`, and `language`. It follows the same format as the `emailNotification` property for recipients. * `tabs`: This property enables the tab values to be specified for matching to tabs in the template.
@property (nonatomic, copy) NSArray<DSAPITemplateRole *> * _Nullable templateRoles;
/// The URI for retrieving any templates associated with the envelope.
@property (nonatomic, copy) NSURL * _Nullable templatesUri;
/// Used to identify an envelope. The ID is a sender-generated value and is valid in the DocuSign system for 7 days. DocuSign recommends that you use a transaction ID for offline signing to ensure that an envelope is not sent multiple times. You can use the `transactionId` property to determine an envelope's status (i.e. was it created or not) in cases where the Internet connection was lost before the envelope status was returned.
@property (nonatomic, copy) NSString * _Nullable transactionId;
/// When <em>true,</em> the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When <em>false,</em> the Electronic Record and Signature Disclosure is not shown to any envelope recipients.   If the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.
@property (nonatomic, copy) NSString * _Nullable useDisclosure;
/// The date and time the envelope or template was voided.
@property (nonatomic, copy) NSDate * _Nullable voidedDateTime;
/// The reason the envelope or template was voided.
@property (nonatomic, copy) NSString * _Nullable voidedReason;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface DSAPIEnvelopeDefinition (SWIFT_EXTENSION(DocuSignAPI))
- (DSAPIEnvelopeDefinition * _Nullable)convertToObjectWithJsonString:(NSString * _Nonnull)jsonString SWIFT_WARN_UNUSED_RESULT;
@end

@class DSAPIPage;

/// This object contains details about the envelope document.
SWIFT_CLASS("_TtC11DocuSignAPI21DSAPIEnvelopeDocument")
@interface DSAPIEnvelopeDocument : NSObject
/// If recipients were added by converting form fields into tabs, their IDs appear here. This property is read-only.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable addedRecipientIds;
/// If this document is an attachment to another document in the envelope, this is the ID of the attachment tab it is associated with on the other document.
@property (nonatomic, copy) NSString * _Nullable attachmentTabId;
/// When <em>true,</em> marks all of the documents in the envelope as authoritative copies.  <em>Note:</em> You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to <em>true</em> at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to <em>false.</em>
@property (nonatomic) BOOL authoritativeCopy;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable authoritativeCopyMetadata;
/// When <em>true,</em> the document has editable form fields that are made available through a PDF format.
@property (nonatomic) BOOL containsPdfFormFields;
/// This string sets the display and behavior properties of the document during signing. Valid values:  * `modal`<br>   The document is shown as a supplement action strip   and can be viewed, downloaded, or printed in a modal window.   This is the recommended value for supplemental documents.   * `inline`<br>   The document is shown in the normal signing window.   This value is not used with supplemental documents,   but is the default value for all other documents.
@property (nonatomic, copy) NSString * _Nullable display;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable displayMetadata;
/// The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.
@property (nonatomic, copy) NSString * _Nullable documentBase64;
/// An object containing information about the custom fields on the document.
@property (nonatomic, copy) NSArray<DSAPINameValue *> * _Nullable documentFields;
/// The ID of the document that the tab is placed on. This value must refer to the ID of an existing document.
@property (nonatomic, copy) NSString * _Nullable documentId;
/// The GUID of the document.
@property (nonatomic, copy) NSString * _Nullable documentIdGuid;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// When <em>true,</em> the document is included in the combined document download (`documentsCombinedUri`).  The default value is <em>true.</em>
@property (nonatomic) BOOL includeInDownload;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable includeInDownloadMetadata;
/// The document's file name.   Example: `Q1-Report.docx`
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The order in which to sort the results.  Valid values are:    * `asc`: Ascending order. * `desc`: Descending order.
@property (nonatomic, copy) NSString * _Nullable order;
/// An array of page objects that contain information about the pages in the document.
@property (nonatomic, copy) NSArray<DSAPIPage *> * _Nullable pages;
/// Sets how the signer interacts with the supplemental document. Valid values:   * `no_interaction`<br>   No recipient action is required.   * `view`<br>   The recipient is required to view the document.   * `accept`<br>   The recipient is required to accept the document by selecting accept during signing, but is not required to view the document.   * `view_accept`<br>   The recipient is required to view and accept the document.
@property (nonatomic, copy) NSString * _Nullable signerMustAcknowledge;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signerMustAcknowledgeMetadata;
@property (nonatomic, copy) NSString * _Nullable sizeBytes;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The type of this tab. Values are:  - Approve - CheckBox - Company - Date - DateSigned, Decline - Email, EmailAddress - EnvelopeId - FirstName - Formula - FullName, InitialHere - InitialHereOptional - LastName - List - Note - Number - Radio - SignerAttachment - SignHere - SignHereOptional - Ssn - Text - Title - Zip5 - Zip5Dash4
@property (nonatomic, copy) NSString * _Nullable type;
/// The URI for retrieving the document.
@property (nonatomic, copy) NSURL * _Nullable uri;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI28DSAPIEnvelopeDocumentsResult")
@interface DSAPIEnvelopeDocumentsResult : NSObject
/// An array containing information about the documents that are included in the envelope.
@property (nonatomic, copy) NSArray<DSAPIEnvelopeDocument *> * _Nullable envelopeDocuments;
/// The envelope ID.
@property (nonatomic, copy) NSString * _Nullable envelopeId;
- (nonnull instancetype)initWithEnvelopeDocuments:(NSArray<DSAPIEnvelopeDocument *> * _Nullable)envelopeDocuments envelopeId:(NSString * _Nullable)envelopeId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A tab that displays the envelope ID. Recipients cannot enter or change the information in this tab.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIEnvelopeId")
@interface DSAPIEnvelopeId : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This object describes an envelope.
SWIFT_CLASS("_TtC11DocuSignAPI20DSAPIEnvelopeSummary")
@interface DSAPIEnvelopeSummary : NSObject
/// The envelope ID of the envelope status that failed to post.
@property (nonatomic, copy) NSString * _Nullable envelopeId;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
@property (nonatomic, copy) NSURL * _Nullable recipientSigningUri;
@property (nonatomic, copy) NSString * _Nullable recipientSigningUriError;
/// Indicates the envelope status. Valid values are:   * `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in. * `created`: The envelope is created as a draft. It can be modified and sent later. * `declined`: The envelope has been declined by the recipients. * `delivered`: The envelope has been delivered to the recipients. * `sent`: The envelope will be sent to the recipients after the envelope is created. * `signed`: The envelope has been signed by the recipients. * `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.
@property (nonatomic, copy) NSString * _Nullable status;
/// The DateTime that the envelope changed status (i.e. was created or sent.)
@property (nonatomic, copy) NSDate * _Nullable statusDateTime;
/// A URI containing the user ID.
@property (nonatomic, copy) NSURL * _Nullable uri;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI21DSAPIEnvelopeTemplate")
@interface DSAPIEnvelopeTemplate : NSObject
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable accessControlListBase64;
/// When <em>true,</em> users can add comments to the documents in the envelope. For example, if a signer has a question about the text in the document, they can add a comment to the document.
@property (nonatomic) BOOL allowComments;
/// When <em>true,</em> the Document Markup feature is enabled.  <em>Note:</em>  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.
@property (nonatomic) BOOL allowMarkup;
/// When <em>true,</em> the recipient can redirect an envelope to a more appropriate recipient.
@property (nonatomic) BOOL allowReassign;
/// When <em>true,</em> recipients can view the history of the envelope.
@property (nonatomic) BOOL allowViewHistory;
/// Deprecated. This feature has been replaced by signing groups.
@property (nonatomic, copy) NSString * _Nullable anySigner;
/// When <em>true,</em> the envelope is queued for processing and the value of the `status` property is set to `Processing`. Additionally, GET status calls return `Processing` until completed.   <em>Note:</em> A `transactionId` is required for this call to work correctly. When the envelope is created, the status is `Processing` and an `envelopeId` is not returned in the response. To get the `envelopeId`, use a GET envelope query by using the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/">transactionId</a> or by checking the Connect notification.
@property (nonatomic) BOOL asynchronous;
/// Contains a URL for retrieving the attachments that are associated with the envelope.
@property (nonatomic, copy) NSURL * _Nullable attachmentsUri;
/// When <em>true,</em> marks all of the documents in the envelope as authoritative copies.  <em>Note:</em> You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to <em>true</em> at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to <em>false.</em>
@property (nonatomic) BOOL authoritativeCopy;
/// The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set. If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
@property (nonatomic, copy) NSString * _Nullable authoritativeCopyDefault;
/// By default, templates that have been used within the last 60 days are included in auto-matching.  By explicitly setting `autoMatch`, you can permanently include or exclude the template in auto matching.  When <em>true</em> the template is included in auto-matching regardless of when it was last used.  When <em>false</em> the template is never included in auto-matching.
@property (nonatomic) BOOL autoMatch;
/// When <em>true,</em> the template has been explicitly included in or excluded from auto-matching. The default is false. This is a read-only property.
@property (nonatomic) BOOL autoMatchSpecifiedByUser;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// The ID of the brand.
@property (nonatomic, copy) NSString * _Nullable brandId;
/// When <em>true,</em> the `brandId` for the envelope is locked and senders cannot change the brand used for the envelope.
@property (nonatomic) BOOL brandLock;
/// The URI for retrieving certificate information.
@property (nonatomic, copy) NSURL * _Nullable certificateUri;
/// Specifies the date and time this item was completed.
@property (nonatomic, copy) NSDate * _Nullable completedDateTime;
@property (nonatomic, copy) NSString * _Nullable copyRecipientData;
/// The UTC DateTime when the workspace user authorization was created.
@property (nonatomic, copy) NSString * _Nullable created;
/// The UTC DateTime when the item was created.
@property (nonatomic, copy) NSDate * _Nullable createdDateTime;
@property (nonatomic, strong) DSAPICustomFields * _Nullable customFields;
/// The URI for retrieving custom fields.
@property (nonatomic, copy) NSURL * _Nullable customFieldsUri;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable deletedDateTime;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// A sender-defined description of the line item.
@property (nonatomic, copy) NSString * _Nullable templatedescription;
/// When <em>true,</em> responsive documents are disabled for the envelope.
@property (nonatomic) BOOL disableResponsiveDocument;
/// The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.
@property (nonatomic, copy) NSString * _Nullable documentBase64;
/// A complex element that contains details about the documents associated with the envelope.
@property (nonatomic, copy) NSArray<DSAPIDocument *> * _Nullable documents;
/// The URI for retrieving all of the documents associated with the envelope as a single PDF file.
@property (nonatomic, copy) NSURL * _Nullable documentsCombinedUri;
/// The URI for retrieving all of the documents associated with the envelope as separate files.
@property (nonatomic, copy) NSURL * _Nullable documentsUri;
/// This is the same as the email body. If the sender enters an email blurb, it is included in the email body for all envelope recipients.
@property (nonatomic, copy) NSString * _Nullable emailBlurb;
@property (nonatomic, strong) DSAPIEmailSettings * _Nullable emailSettings;
/// The subject line of the email message that is sent to all recipients.  For information about adding merge field information to the email subject, see <a href="/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields">Template Email Subject Merge Fields</a>.  <em>Note:</em> The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.
@property (nonatomic, copy) NSString * _Nullable emailSubject;
/// When <em>true,</em> the signer is allowed to print the document and sign it on paper.
@property (nonatomic) BOOL enableWetSign;
/// When <em>true,</em> signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.  <em>Note:</em> To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` <em>true.</em>  [docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/
@property (nonatomic) BOOL enforceSignerVisibility;
/// An array of attachment objects that provide information about the attachments that are associated with the envelope.
@property (nonatomic, copy) NSArray<DSAPIAttachment *> * _Nullable envelopeAttachments;
/// An array containing information about the documents that are included in the envelope.
@property (nonatomic, copy) NSArray<DSAPIEnvelopeDocument *> * _Nullable envelopeDocuments;
/// The envelope ID of the envelope status that failed to post.
@property (nonatomic, copy) NSString * _Nullable envelopeId;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-user-guide-set-advanced-document-options">Envelope ID Stamping</a> is enabled. After a document or attachment is stamped with an Envelope ID, the ID is seen by all recipients and becomes a permanent part of the document and cannot be removed.
@property (nonatomic) BOOL envelopeIdStamping;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable envelopeLocation;
/// The URI for retrieving the envelope or envelopes.
@property (nonatomic, copy) NSURL * _Nullable envelopeUri;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSString * _Nullable expireAfter;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSDate * _Nullable expireDateTime;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic) BOOL expireEnabled;
/// May contain an external identifier for the envelope.
@property (nonatomic, copy) NSString * _Nullable externalEnvelopeId;
@property (nonatomic, copy) NSString * _Nullable favoritedByMe;
/// The ID of the folder.
@property (nonatomic, copy) NSString * _Nullable folderId;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable folderIds;
@property (nonatomic, copy) NSString * _Nullable folderName;
/// A list of folder objects.
@property (nonatomic, copy) NSArray<DSAPIFolder *> * _Nullable folders;
/// When <em>true,</em> indicates that users have added comments to the envelope.
@property (nonatomic) BOOL hasComments;
/// When <em>true,</em> indicates that the data collected through form fields on a document has changed.
@property (nonatomic) BOOL hasFormDataChanged;
/// When <em>true,</em> indicates that a .wav file used for voice authentication is included in the envelope.
@property (nonatomic) BOOL hasWavFile;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable holder;
/// The date and time the envelope was initially sent.
@property (nonatomic, copy) NSDate * _Nullable initialSentDateTime;
/// When <em>true,</em> indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).
@property (nonatomic) BOOL is21CFRPart11;
/// When <em>true,</em> indicates that the envelope is a dynamic envelope.
@property (nonatomic) BOOL isDynamicEnvelope;
/// When <em>true,</em> indicates that the envelope is a signature-provided envelope.
@property (nonatomic) BOOL isSignatureProviderEnvelope;
/// The UTC date and time that the comment was last updated.  <em>Note:</em> This can only be done by the creator.
@property (nonatomic, copy) NSDate * _Nullable lastModified;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable lastModifiedBy;
/// The date and time that the item was last modified.
@property (nonatomic, copy) NSDate * _Nullable lastModifiedDateTime;
@property (nonatomic, copy) NSString * _Nullable lastUsed;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable location;
@property (nonatomic, strong) DSAPILockInformation * _Nullable lockInformation;
/// When <em>true,</em> prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope.   Additionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes.   However, if the `messageLock` node is set to <em>true</em> and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.
@property (nonatomic) BOOL messageLock;
@property (nonatomic, copy) NSString * _Nullable name;
/// The user's new password.
@property (nonatomic, copy) NSString * _Nullable newPassword;
@property (nonatomic, strong) DSAPINotification * _Nullable notification;
/// The URI for retrieving notifications.
@property (nonatomic, copy) NSURL * _Nullable notificationUri;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable owner;
/// An integer value specifying the number of document pages in the template.
@property (nonatomic, copy) NSString * _Nullable pageCount;
/// The user's encrypted password hash.
@property (nonatomic, copy) NSString * _Nullable password;
@property (nonatomic, copy) NSString * _Nullable passwordProtected;
/// The date that a purge was completed.
@property (nonatomic, copy) NSDate * _Nullable purgeCompletedDate;
/// The date that a purge was requested.
@property (nonatomic, copy) NSDate * _Nullable purgeRequestDate;
/// Shows the current purge state for the envelope. Valid values:  - `unpurged`: There has been no successful request to purge documents. - `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged. - `documents_dequeued`: The envelope documents have been taken out of the purge queue. - `documents_purged`: The envelope documents have been successfully purged. - `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged. - `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged. - `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted. - `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.  <em>Related topics</em>  - <a href="/docs/esign-rest-api/esign101/concepts/documents/purging/">Purging documents (eSingature Concepts)</a> - <a href="https://www.docusign.com/blog/developers/purging-documents-envelope">Purging documents in an envelope (blog post)</a>
@property (nonatomic, copy) NSString * _Nullable purgeState;
@property (nonatomic, strong) DSAPIRecipients * _Nullable recipients;
/// When <em>true,</em> prevents senders from changing, correcting, or deleting the recipient information for the envelope.
@property (nonatomic) BOOL recipientsLock;
/// Contains a URI for an endpoint that you can use to retrieve the recipients.
@property (nonatomic, copy) NSURL * _Nullable recipientsUri;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable sender;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
/// When <em>true,</em> recipients can sign on a mobile device.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerCanSignOnMobile;
/// Specifies the physical location where the signing takes place. It can have two enumeration values; `inPerson` and `online`. The default value is `online`.
@property (nonatomic, copy) NSString * _Nullable signingLocation;
/// Indicates the envelope status. Valid values are:  * `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in. * `created`: The envelope is created as a draft. It can be modified and sent later. * `declined`: The envelope has been declined by the recipients. * `delivered`: The envelope has been delivered to the recipients. * `sent`: The envelope will be sent to the recipients after the envelope is created. * `signed`: The envelope has been signed by the recipients. * `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.
@property (nonatomic, copy) NSString * _Nullable status;
/// The data and time that the status changed.
@property (nonatomic, copy) NSDate * _Nullable statusChangedDateTime;
/// The DateTime that the envelope changed status (i.e. was created or sent.)
@property (nonatomic, copy) NSDate * _Nullable statusDateTime;
/// The unique identifier of the template. If this is not provided, DocuSign will generate a value.
@property (nonatomic, copy) NSString * _Nullable templateId;
/// The URI for retrieving the templates.
@property (nonatomic, copy) NSURL * _Nullable templatesUri;
/// Used to identify an envelope.   The ID is a sender-generated value and is valid in the DocuSign system for 7 days.  It is recommended that a transaction ID is used for offline  signing to ensure that an envelope is not sent multiple times.  The `transactionId` property can be used determine an envelope's  status (i.e. was it created or not) in cases where the internet c  onnection was lost before the envelope status was returned.
@property (nonatomic, copy) NSString * _Nullable transactionId;
/// A URI containing the user ID.
@property (nonatomic, copy) NSURL * _Nullable uri;
/// When <em>true,</em> the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When <em>false,</em> the Electronic Record and Signature Disclosure is not shown to any envelope recipients.   If the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.
@property (nonatomic, copy) NSString * _Nullable useDisclosure;
/// The date and time the envelope or template was voided.
@property (nonatomic, copy) NSDate * _Nullable voidedDateTime;
/// The reason the envelope or template was voided.
@property (nonatomic, copy) NSString * _Nullable voidedReason;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface DSAPIEnvelopeTemplate (SWIFT_EXTENSION(DocuSignAPI))
- (id _Nullable)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end


/// Information about templates.
SWIFT_CLASS("_TtC11DocuSignAPI28DSAPIEnvelopeTemplateResults")
@interface DSAPIEnvelopeTemplateResults : NSObject
/// The last index position in the result set.
@property (nonatomic, copy) NSString * _Nullable endPosition;
/// The list of requested templates.
@property (nonatomic, copy) NSArray<DSAPIEnvelopeTemplate *> * _Nullable envelopeTemplates;
/// A list of folder objects.
@property (nonatomic, copy) NSArray<DSAPIFolder *> * _Nullable folders;
/// The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search.
@property (nonatomic, copy) NSURL * _Nullable nextUri;
/// The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search.
@property (nonatomic, copy) NSURL * _Nullable previousUri;
/// The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.
@property (nonatomic, copy) NSString * _Nullable resultSetSize;
/// The starting index position of the current result set.
@property (nonatomic, copy) NSString * _Nullable startPosition;
/// The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.
@property (nonatomic, copy) NSString * _Nullable totalSetSize;
- (nonnull instancetype)initWithEndPosition:(NSString * _Nullable)endPosition envelopeTemplates:(NSArray<DSAPIEnvelopeTemplate *> * _Nullable)envelopeTemplates folders:(NSArray<DSAPIFolder *> * _Nullable)folders nextUri:(NSURL * _Nullable)nextUri previousUri:(NSURL * _Nullable)previousUri resultSetSize:(NSString * _Nullable)resultSetSize startPosition:(NSString * _Nullable)startPosition totalSetSize:(NSString * _Nullable)totalSetSize OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This object describes errors that occur. It is only valid for responses and ignored in requests.
SWIFT_CLASS("_TtC11DocuSignAPI17DSAPIErrorDetails")
@interface DSAPIErrorDetails : NSObject
/// The code associated with the error condition.
@property (nonatomic, copy) NSString * _Nullable errorCode;
/// A brief message describing the error condition.
@property (nonatomic, copy) NSString * _Nullable message;
- (nonnull instancetype)initWithErrorCode:(NSString * _Nullable)errorCode message:(NSString * _Nullable)message OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// A complex element that specifies the expiration settings for the envelope. When an envelope expires, it is voided and no longer available for signing. <em>Note:</em> there is a short delay between when the envelope expires and when it is voided.
SWIFT_CLASS("_TtC11DocuSignAPI16DSAPIExpirations")
@interface DSAPIExpirations : NSObject
/// An integer that sets the number of days the envelope is active. For this value to be used, `expireEnabled` must be explicitly set to <em>true.</em>
@property (nonatomic, copy) NSString * _Nullable expireAfter;
/// When <em>true,</em> the envelope expires in the number of days set by `expireAfter`. When <em>false</em> or not set, the envelope expires in the number of days specified by the <a href="https://support.docusign.com/en/guides/ndse-admin-guide-reminders-and-expirations">default expiration account setting</a>.
@property (nonatomic) BOOL expireEnabled;
/// An integer that specifying the number of days before the envelope expires that an expiration warning email is sent to the recipient. When 0 (zero), no warning email is sent.
@property (nonatomic, copy) NSString * _Nullable expireWarn;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithExpireAfter:(NSString * _Nullable)expireAfter expireEnabled:(BOOL)expireEnabled expireWarn:(NSString * _Nullable)expireWarn OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPITelemetryEvent;

/// This response object is returned after you post a telemetry event.
SWIFT_CLASS("_TtC11DocuSignAPI25DSAPIFailedTelemetryEvent")
@interface DSAPIFailedTelemetryEvent : NSObject
/// The event resulting in the failure.
@property (nonatomic, strong) DSAPITelemetryEvent * _Nullable event;
/// The failure reason.
@property (nonatomic, copy) NSString * _Nullable failureReason;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithEvent:(DSAPITelemetryEvent * _Nullable)event failureReason:(NSString * _Nullable)failureReason OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that displays the recipient's first name. This tab takes the recipient's name as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.
SWIFT_CLASS("_TtC11DocuSignAPI14DSAPIFirstName")
@interface DSAPIFirstName : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This object contains details about a folder.
SWIFT_CLASS("_TtC11DocuSignAPI11DSAPIFolder")
@interface DSAPIFolder : NSObject
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The ID of the folder.
@property (nonatomic, copy) NSString * _Nullable folderId;
/// A collection of folder objects returned in a response.
@property (nonatomic, copy) NSArray<DSAPIFolder *> * _Nullable folders;
/// When <em>true,</em> the current user has access to the folder.
@property (nonatomic) BOOL hasAccess;
/// When <em>true,</em> the folder has subfolders.
@property (nonatomic) BOOL hasSubFolders;
/// The number of items in the folder.
@property (nonatomic, copy) NSString * _Nullable itemCount;
/// The name of the folder.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable owner;
/// The ID of the parent folder, or the special value `root` for the root folder.
@property (nonatomic, copy) NSString * _Nullable parentFolderId;
/// The URI of the parent folder.
@property (nonatomic, copy) NSURL * _Nullable parentFolderUri;
/// The number of subfolders.
@property (nonatomic, copy) NSString * _Nullable subFolderCount;
/// The type of folder. Possible values include:  - `draft` - `inbox` - `normal` (a system-generated folder) - `recyclebin` - `sentitems` - `custom` (a custom folder created by a user)
@property (nonatomic, copy) NSString * _Nullable type;
/// The URI for the folder.
@property (nonatomic, copy) NSURL * _Nullable uri;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI20DSAPIFoldersResponse")
@interface DSAPIFoldersResponse : NSObject
/// The last index position in the result set.
@property (nonatomic, copy) NSString * _Nullable endPosition;
/// An array containing PowerForm data.
@property (nonatomic, copy) NSArray<DSAPIEnvelopeSummary *> * _Nullable envelopes;
/// A list of folder objects.
@property (nonatomic, copy) NSArray<DSAPIFolder *> * _Nullable folders;
/// The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search.
@property (nonatomic, copy) NSURL * _Nullable nextUri;
/// The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search.
@property (nonatomic, copy) NSURL * _Nullable previousUri;
/// The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.
@property (nonatomic, copy) NSString * _Nullable resultSetSize;
/// The starting index position of the current result set.
@property (nonatomic, copy) NSString * _Nullable startPosition;
/// The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.
@property (nonatomic, copy) NSString * _Nullable totalSetSize;
- (nonnull instancetype)initWithEndPosition:(NSString * _Nullable)endPosition envelopes:(NSArray<DSAPIEnvelopeSummary *> * _Nullable)envelopes folders:(NSArray<DSAPIFolder *> * _Nullable)folders nextUri:(NSURL * _Nullable)nextUri previousUri:(NSURL * _Nullable)previousUri resultSetSize:(NSString * _Nullable)resultSetSize startPosition:(NSString * _Nullable)startPosition totalSetSize:(NSString * _Nullable)totalSetSize OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The value of a formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the formula tab calculates and displays the result.  The `formula` property of the tab contains the references to the underlying tabs. See [Calculated Fields][calculatedfields] in the DocuSign Support Center to learn more about formulas.  If a formula tab contains a `paymentDetails` property, the tab is considered a payment item. See [Requesting Payments Along with Signatures][paymentguide] in the DocuSign Support Center to learn more about payments.  [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIFormulaTab")
@interface DSAPIFormulaTab : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// Contains the formula for calculating the value of this tab.  Use a tab's `tabLabel`, enclosed in brackets, to refer to it.  For example, you want to present the total cost of two items, tax included.  The cost of each item is stored in number tabs labeled Item1 and Item2. The tax rate is in a number tab labeled TaxRate.  The formula string for this property would be: `([Item1] + [Item2]) * (1 + [TaxRate])`  See [Calculated Fields][calculatedfields] in the DocuSign Support Center to learn more about formulas.  Maximum Length: 2000 characters  [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
@property (nonatomic, copy) NSString * _Nullable formula;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formulaMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// If this is a regular formula (no `paymentDetails` property is present):  * <em>true:</em> The tab is hidden. * <em>false:</em> The tab is shown.  If the formula is payment item (a `paymentDetails` property is present):  * <em>true:</em> The tab is displayed as a payment. * <em>false:</em> The tab is displayed as a regular formula.
@property (nonatomic, copy) NSString * _Nullable hidden;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable hiddenMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL isPaymentAmount;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable isPaymentAmountMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// The number of decimal places to round to.
@property (nonatomic, copy) NSString * _Nullable roundDecimalPlaces;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable roundDecimalPlacesMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+35, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+35, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that displays the recipient's full name.
SWIFT_CLASS("_TtC11DocuSignAPI13DSAPIFullName")
@interface DSAPIFullName : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPIOfflineAttributes;
@class DSAPIRecipientSignatureInformation;

/// Contains information about an in-person recipient. This is a DocuSign user, acting as a Signing Host, who is in the same physical location as the signer. To learn about the fields used for the eNotary feature, see the [recipients resource][resource].  [resource]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/#in-person-signer-recipient
SWIFT_CLASS("_TtC11DocuSignAPI19DSAPIInPersonSigner")
@interface DSAPIInPersonSigner : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// When <em>true,</em> specifies that the signer can perform the signing ceremony offline.
@property (nonatomic) BOOL canSignOffline;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion.   If this number is greater than `0` for a signing group, only the user who previously completed may sign again.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// The reason why the recipient was created (for example, `sender`). This property is read-only.
@property (nonatomic, copy) NSString * _Nullable creationReason;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// When <em>true,</em> this is the default recipient for the envelope. This option is used when creating an envelope from a template.
@property (nonatomic) BOOL defaultRecipient;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The signer's email address in an eNotary flow.  Use only when `inPersonSigningType` is `notary`. For regular in-person-signer flow, use `signerEmail` instead.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The email address of the signing host. This is the DocuSign user that is hosting the in-person signing session.  Required when `inPersonSigningType` is `inPersonSigner`. For eNotary flow, use `email` instead.  Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable hostEmail;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable hostEmailMetadata;
/// The name of the signing host. This is the DocuSign user that is hosting the in-person signing session.  Required when `inPersonSigningType` is `inPersonSigner`. For eNotary flow, use `name` instead.  Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable hostName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable hostNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// Specifies whether the envelope uses the eNotary feature. Valid values:  * `inPersonSigner`: The envelope uses the normal in-person signing flow. * `notary`: The envelope uses the eNotary in-person signing flow.
@property (nonatomic, copy) NSString * _Nullable inPersonSigningType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable inPersonSigningTypeMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The signer's full legal name in an eNotary flow.  Required when `inPersonSigningType` is `notary`. For a regular in-person-signer flow, use `signerName` instead.  Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
@property (nonatomic, copy) NSString * _Nullable notaryId;
/// A note sent to the in-person signer in the signing email. This note is visible only to this recipient.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
@property (nonatomic, strong) DSAPIOfflineAttributes * _Nullable offlineAttributes;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// When <em>true,</em> specifies that the recipient creates the tabs.
@property (nonatomic) BOOL recipientSuppliesTabs;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.  This parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates.   Set this parameter to `safe` to use a SAFE-BioPharma certificate.  The signer must be enrolled in the SAFE program to sign with a SAFE certificate.
@property (nonatomic, copy) NSString * _Nullable requireSignerCertificate;
/// When <em>true,</em> the signer must print, sign, and upload or fax the signed documents to DocuSign.
@property (nonatomic) BOOL requireSignOnPaper;
/// When <em>true,</em> the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.
@property (nonatomic) BOOL requireUploadSignature;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
@property (nonatomic, strong) DSAPIRecipientSignatureInformation * _Nullable signatureInfo;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// The in-person signer's email address.  Required when `inPersonSigningType` is `inPersonSigner`. For eNotary flow, use `email` instead.  Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signerEmail;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signerEmailMetadata;
/// The signer's first name.
@property (nonatomic, copy) NSString * _Nullable signerFirstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signerFirstNameMetadata;
/// The signer's last name.
@property (nonatomic, copy) NSString * _Nullable signerLastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signerLastNameMetadata;
/// Required. The full legal name of a signer for the envelope.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signerName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signerNameMetadata;
/// When <em>true</em> and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).
@property (nonatomic, copy) NSString * _Nullable signInEachLocation;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signInEachLocationMetadata;
/// Not applicable. You cannot use a signing group for an in-person signer.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// Not applicable.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The total number of tabs in the documents. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to initial the document. May be optional.
SWIFT_CLASS("_TtC11DocuSignAPI16DSAPIInitialHere")
@interface DSAPIInitialHere : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable handDrawRequired;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// When <em>true,</em> the recipient does not need to complete this tab to complete the signing process.
@property (nonatomic) BOOL optional;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable optionalMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Sets the size for the InitialHere tab. It can be value from 0.5 to 1.0, where 1.0 represents full size and 0.5 is 50% size.
@property (nonatomic, copy) NSString * _Nullable scaleValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable scaleValueMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+2, -7)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+2, -7)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
@property (nonatomic, copy) NSString * _Nullable imageDataBase64;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Contains information about an intermediary recipient. An intermediary is a recipient who can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order, unless subsequent agents, editors or intermediaries are added.
SWIFT_CLASS("_TtC11DocuSignAPI17DSAPIIntermediary")
@interface DSAPIIntermediary : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address. Notification of the document to sign is sent to this email address.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name. Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipientÃ¢ÂÂs email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that displays the recipient's last name. This tab takes the recipient's name as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.
SWIFT_CLASS("_TtC11DocuSignAPI13DSAPILastName")
@interface DSAPILastName : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This tab offers a list of options to choose from. The `listItems` property contains a list of <a href="/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/">`listItem`</a> objects to specify the selectable options.
SWIFT_CLASS("_TtC11DocuSignAPI9DSAPIList")
@interface DSAPIList : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// The value in the list that is selected by default.
@property (nonatomic, copy) NSString * _Nullable listSelectedValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable listSelectedValueMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic, copy) NSString * _Nullable requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The value to use when the item is selected.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This object represents a list custom field from which envelope creators and senders can select custom data.
SWIFT_CLASS("_TtC11DocuSignAPI20DSAPIListCustomField")
@interface DSAPIListCustomField : NSObject
/// If you are using merge fields, this property specifies the type of the merge field. The only supported value is `salesforce`.
@property (nonatomic, copy) NSString * _Nullable configurationType;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The ID of the custom field.
@property (nonatomic, copy) NSString * _Nullable fieldId;
/// An array of strings that represents the options in a list.  Maximum length: 2048 characters, but each individual option string can only be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable listItems;
/// The name of the custom field.
@property (nonatomic, copy) NSString * _Nullable name;
/// When <em>true,</em> senders are required to select an option from the list before they can send the envelope.
@property (nonatomic) BOOL required;
/// When <em>true,</em> the field displays in the <em>Envelope Custom Fields</em> section when a user creates or sends an envelope.
@property (nonatomic) BOOL show;
/// The value of the custom field. This is the value that the user who creates or sends the envelope selects from the list.
@property (nonatomic, copy) NSString * _Nullable value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConfigurationType:(NSString * _Nullable)configurationType errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails fieldId:(NSString * _Nullable)fieldId listItems:(NSArray<NSString *> * _Nullable)listItems name:(NSString * _Nullable)name required:(BOOL)required show:(BOOL)show value:(NSString * _Nullable)value OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DocuSignAPI20DSAPILockInformation")
@interface DSAPILockInformation : NSObject
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The number of seconds to lock the envelope for editing.  This value must be greater than `0` seconds.
@property (nonatomic, copy) NSString * _Nullable lockDurationInSeconds;
/// The human-readable name of the application that is locking the envelope or template. This value displays to the user in error messages when lock conflicts occur.
@property (nonatomic, copy) NSString * _Nullable lockedByApp;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable lockedByUser;
/// The date and time that the lock expires.
@property (nonatomic, copy) NSDate * _Nullable lockedUntilDateTime;
/// A unique identifier provided to the owner of the lock. You must use this token with subsequent calls to prove ownership of the lock.
@property (nonatomic, copy) NSString * _Nullable lockToken;
/// The type of lock.  Currently `edit` is the only supported type.
@property (nonatomic, copy) NSString * _Nullable lockType;
/// When <em>true,</em> a scratchpad is used to edit information.
@property (nonatomic) BOOL useScratchPad;
- (nonnull instancetype)initWithErrorDetails:(DSAPIErrorDetails * _Nullable)errorDetails lockDurationInSeconds:(NSString * _Nullable)lockDurationInSeconds lockedByApp:(NSString * _Nullable)lockedByApp lockedByUser:(DSAPIUserInfo * _Nullable)lockedByUser lockedUntilDateTime:(NSDate * _Nullable)lockedUntilDateTime lockToken:(NSString * _Nullable)lockToken lockType:(NSString * _Nullable)lockType useScratchPad:(BOOL)useScratchPad OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIPathExtendedElement;

/// Contains information for transfering values between Salesforce data fields and DocuSign Tabs.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIMergeField")
@interface DSAPIMergeField : NSObject
/// When <em>true,</em> the sender can modify the value of the `mergeField` tab during the sending process.
@property (nonatomic) BOOL allowSenderToEdit;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable allowSenderToEditMetadata;
/// If you are using merge fields, this property specifies the type of the merge field. The only supported value is `salesforce`.
@property (nonatomic, copy) NSString * _Nullable configurationType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable configurationTypeMetadata;
/// Sets the object associated with the custom tab. Currently this is the Salesforce Object.
@property (nonatomic, copy) NSString * _Nullable path;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIPathExtendedElement *> * _Nullable pathExtended;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pathExtendedMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pathMetadata;
/// Specifies the row number in a Salesforce table that the merge field value corresponds to.
@property (nonatomic, copy) NSString * _Nullable row;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable rowMetadata;
/// When <em>true,</em> data entered into the merge field during Signing will update the mapped Salesforce field.
@property (nonatomic) BOOL writeBack;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable writeBackMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAllowSenderToEdit:(BOOL)allowSenderToEdit allowSenderToEditMetadata:(DSAPIPropertyMetadata * _Nullable)allowSenderToEditMetadata configurationType:(NSString * _Nullable)configurationType configurationTypeMetadata:(DSAPIPropertyMetadata * _Nullable)configurationTypeMetadata path:(NSString * _Nullable)path pathExtended:(NSArray<DSAPIPathExtendedElement *> * _Nullable)pathExtended pathExtendedMetadata:(DSAPIPropertyMetadata * _Nullable)pathExtendedMetadata pathMetadata:(DSAPIPropertyMetadata * _Nullable)pathMetadata row:(NSString * _Nullable)row rowMetadata:(DSAPIPropertyMetadata * _Nullable)rowMetadata writeBack:(BOOL)writeBack writeBackMetadata:(DSAPIPropertyMetadata * _Nullable)writeBackMetadata OBJC_DESIGNATED_INITIALIZER;
@end


/// A name-value pair that describes an item and provides a value for the item.
SWIFT_CLASS("_TtC11DocuSignAPI14DSAPINameValue")
@interface DSAPINameValue : NSObject
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The name of the item.
@property (nonatomic, copy) NSString * _Nullable name;
/// The initial value of the item.
@property (nonatomic, copy) NSString * _Nullable originalValue;
/// The current value of the item.
@property (nonatomic, copy) NSString * _Nullable value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithErrorDetails:(DSAPIErrorDetails * _Nullable)errorDetails name:(NSString * _Nullable)name originalValue:(NSString * _Nullable)originalValue value:(NSString * _Nullable)value OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DocuSignAPI20DSAPINotaryRecipient")
@interface DSAPINotaryRecipient : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditEmail;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditName;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSURL * _Nullable bulkRecipientsUri;
/// When <em>true,</em> specifies that the signer can perform the signing ceremony offline.
@property (nonatomic) BOOL canSignOffline;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// The reason why the item was created.
@property (nonatomic, copy) NSString * _Nullable creationReason;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// When <em>true,</em> this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.
@property (nonatomic) BOOL defaultRecipient;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address. Notification of the document to sign is sent to this email address.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The user's first name.  Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable isBulkRecipient;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable isBulkRecipientMetadata;
/// The user's last name.  Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// URL that directs the recipient to LiveOak to complete the remote online notarization process. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable liveOakStartURL;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum length: 100 characters.  Note: You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// Not applicable to Notary tab.
@property (nonatomic, copy) NSString * _Nullable notaryId;
@property (nonatomic, copy) NSString * _Nullable notarySignerEmailSent;
/// An array of strings that correspond to the `recipientId` of each signer in the notary group. This property is read-only.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable notarySigners;
/// The notary type. This property is read-only. Valid values:  - `inperson` - `remote`
@property (nonatomic, copy) NSString * _Nullable notaryType;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
@property (nonatomic, strong) DSAPIOfflineAttributes * _Nullable offlineAttributes;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// When <em>true,</em> specifies that the recipient creates the tabs.
@property (nonatomic) BOOL recipientSuppliesTabs;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.  This parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates.   Set this parameter to `safe` to use a SAFE-BioPharma certificate.  The signer must be enrolled in the SAFE program to sign with a SAFE certificate.
@property (nonatomic, copy) NSString * _Nullable requireSignerCertificate;
/// When <em>true,</em> the signer must print, sign, and upload or fax the signed documents to DocuSign.
@property (nonatomic) BOOL requireSignOnPaper;
/// When <em>true,</em> the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.
@property (nonatomic) BOOL requireUploadSignature;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
@property (nonatomic, strong) DSAPIRecipientSignatureInformation * _Nullable signatureInfo;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// When <em>true</em> and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).
@property (nonatomic) BOOL signInEachLocation;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signInEachLocationMetadata;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.
@property (nonatomic, copy) NSString * _Nullable status;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A tab that displays additional information, in the form of a note, for the recipient.
SWIFT_CLASS("_TtC11DocuSignAPI9DSAPINote")
@interface DSAPINote : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.  <em>Note:</em> Approve, Date Signed, Decline, Email Address, and Note tabs do not display custom tooltip text in the signing interface. Although you can technically set a value via the API for these tabs, it will not be displayed to the recipient.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIReminders;

/// A complex element that specifies the notification settings for the envelope.
SWIFT_CLASS("_TtC11DocuSignAPI17DSAPINotification")
@interface DSAPINotification : NSObject
@property (nonatomic, strong) DSAPIExpirations * _Nullable expirations;
@property (nonatomic, strong) DSAPIReminders * _Nullable reminders;
/// When <em>true,</em> the account default notification settings are used for the envelope, overriding the reminders and expirations settings. When <em>false,</em> the reminders and expirations settings specified in this request are used. The default value is <em>false.</em>
@property (nonatomic) BOOL useAccountDefaults;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithExpirations:(DSAPIExpirations * _Nullable)expirations reminders:(DSAPIReminders * _Nullable)reminders useAccountDefaults:(BOOL)useAccountDefaults OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to enter numbers and decimal (.) points.
SWIFT_CLASS("_TtC11DocuSignAPI11DSAPINumber")
@interface DSAPINumber : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// Contains the formula for calculating the value of this tab.  Use a tab's `tabLabel`, enclosed in brackets, to refer to it.  For example, you want to present the total cost of two items, tax included.  The cost of each item is stored in number tabs labeled Item1 and Item2. The tax rate is in a number tab labeled TaxRate.  The formula string for this property would be: `([Item1] + [Item2]) * (1 + [TaxRate])`  See [Calculated Fields][calculatedfields] in the DocuSign Support Center to learn more about formulas.  Maximum Length: 2000 characters  [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
@property (nonatomic, copy) NSString * _Nullable formula;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formulaMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL isPaymentAmount;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable isPaymentAmountMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Reserved for DocuSign use.
SWIFT_CLASS("_TtC11DocuSignAPI22DSAPIOfflineAttributes")
@interface DSAPIOfflineAttributes : NSObject
/// The GUID of the account associated with the consumer disclosure.
@property (nonatomic, copy) NSString * _Nullable accountEsignId;
/// A string containing information about the model of the device used for offline signing.
@property (nonatomic, copy) NSString * _Nullable deviceModel;
/// A string containing information about the type of device used for offline signing.
@property (nonatomic, copy) NSString * _Nullable deviceName;
/// A string containing the latitude of the device location at the time of signing.
@property (nonatomic, copy) NSString * _Nullable gpsLatitude;
/// A string containing the longitude of the device location at the time of signing.
@property (nonatomic, copy) NSString * _Nullable gpsLongitude;
/// A signing hash used for offline signing.
@property (nonatomic, copy) NSString * _Nullable offlineSigningHash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAccountEsignId:(NSString * _Nullable)accountEsignId deviceModel:(NSString * _Nullable)deviceModel deviceName:(NSString * _Nullable)deviceName gpsLatitude:(NSString * _Nullable)gpsLatitude gpsLongitude:(NSString * _Nullable)gpsLongitude offlineSigningHash:(NSString * _Nullable)offlineSigningHash OBJC_DESIGNATED_INITIALIZER;
@end


/// Description of a page of a document.
SWIFT_CLASS("_TtC11DocuSignAPI9DSAPIPage")
@interface DSAPIPage : NSObject
/// The number of dots per inch used for the page image.
@property (nonatomic, copy) NSString * _Nullable dpi;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The height of the page in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
/// The number of image bytes.
@property (nonatomic, copy) NSString * _Nullable imageBytes;
/// The MIME type.
@property (nonatomic, copy) NSString * _Nullable mimeType;
/// The ID of the page.
@property (nonatomic, copy) NSString * _Nullable pageId;
/// The sequence of the page in the document, or page number.
@property (nonatomic, copy) NSString * _Nullable sequence;
/// The width of the page in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
- (nonnull instancetype)initWithDpi:(NSString * _Nullable)dpi errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails height:(NSString * _Nullable)height imageBytes:(NSString * _Nullable)imageBytes mimeType:(NSString * _Nullable)mimeType pageId:(NSString * _Nullable)pageId sequence:(NSString * _Nullable)sequence width:(NSString * _Nullable)width OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI24DSAPIPathExtendedElement")
@interface DSAPIPathExtendedElement : NSObject
@property (nonatomic, copy) NSString * _Nullable name;
/// The type of this tab. Values are:  - Approve - CheckBox - Company - Date - DateSigned, Decline - Email, EmailAddress - EnvelopeId - FirstName - Formula - FullName, InitialHere - InitialHereOptional - LastName - List - Note - Number - Radio - SignerAttachment - SignHere - SignHereOptional - Ssn - Text - Title - Zip5 - Zip5Dash4
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable typeName;
- (nonnull instancetype)initWithName:(NSString * _Nullable)name type:(NSString * _Nullable)type typeName:(NSString * _Nullable)typeName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Metadata about a property.
SWIFT_CLASS("_TtC11DocuSignAPI21DSAPIPropertyMetadata")
@interface DSAPIPropertyMetadata : NSObject
/// An array of option strings supported by this setting.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable options;
/// Indicates whether the property is editable. Valid values are:  - `editable` - `read_only`
@property (nonatomic, copy) NSString * _Nullable rights;
- (nonnull instancetype)initWithOptions:(NSArray<NSString *> * _Nullable)options rights:(NSString * _Nullable)rights OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// One of the selectable radio buttons in the `radios` property of a <a href="/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/">`radioGroup`</a> tab.
SWIFT_CLASS("_TtC11DocuSignAPI10DSAPIRadio")
@interface DSAPIRadio : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// Specifies the page number on which the tab is located. Must be 1 for supplemental documents.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// When <em>true,</em> the radio button is selected.
@property (nonatomic) BOOL selected;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable selectedMetadata;
/// Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAnchorAllowWhiteSpaceInCharacters:(BOOL)anchorAllowWhiteSpaceInCharacters anchorAllowWhiteSpaceInCharactersMetadata:(DSAPIPropertyMetadata * _Nullable)anchorAllowWhiteSpaceInCharactersMetadata anchorCaseSensitive:(BOOL)anchorCaseSensitive anchorCaseSensitiveMetadata:(DSAPIPropertyMetadata * _Nullable)anchorCaseSensitiveMetadata anchorHorizontalAlignment:(NSString * _Nullable)anchorHorizontalAlignment anchorHorizontalAlignmentMetadata:(DSAPIPropertyMetadata * _Nullable)anchorHorizontalAlignmentMetadata anchorIgnoreIfNotPresent:(BOOL)anchorIgnoreIfNotPresent anchorIgnoreIfNotPresentMetadata:(DSAPIPropertyMetadata * _Nullable)anchorIgnoreIfNotPresentMetadata anchorMatchWholeWord:(BOOL)anchorMatchWholeWord anchorMatchWholeWordMetadata:(DSAPIPropertyMetadata * _Nullable)anchorMatchWholeWordMetadata anchorString:(NSString * _Nullable)anchorString anchorStringMetadata:(DSAPIPropertyMetadata * _Nullable)anchorStringMetadata anchorTabProcessorVersion:(NSString * _Nullable)anchorTabProcessorVersion anchorTabProcessorVersionMetadata:(DSAPIPropertyMetadata * _Nullable)anchorTabProcessorVersionMetadata anchorUnits:(NSString * _Nullable)anchorUnits anchorUnitsMetadata:(DSAPIPropertyMetadata * _Nullable)anchorUnitsMetadata anchorXOffset:(NSString * _Nullable)anchorXOffset anchorXOffsetMetadata:(DSAPIPropertyMetadata * _Nullable)anchorXOffsetMetadata anchorYOffset:(NSString * _Nullable)anchorYOffset anchorYOffsetMetadata:(DSAPIPropertyMetadata * _Nullable)anchorYOffsetMetadata bold:(BOOL)bold boldMetadata:(DSAPIPropertyMetadata * _Nullable)boldMetadata errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails font:(NSString * _Nullable)font fontColor:(NSString * _Nullable)fontColor fontColorMetadata:(DSAPIPropertyMetadata * _Nullable)fontColorMetadata fontMetadata:(DSAPIPropertyMetadata * _Nullable)fontMetadata fontSize:(NSString * _Nullable)fontSize fontSizeMetadata:(DSAPIPropertyMetadata * _Nullable)fontSizeMetadata italic:(BOOL)italic italicMetadata:(DSAPIPropertyMetadata * _Nullable)italicMetadata locked:(BOOL)locked lockedMetadata:(DSAPIPropertyMetadata * _Nullable)lockedMetadata pageNumber:(NSString * _Nullable)pageNumber pageNumberMetadata:(DSAPIPropertyMetadata * _Nullable)pageNumberMetadata required:(BOOL)required requiredMetadata:(DSAPIPropertyMetadata * _Nullable)requiredMetadata selected:(BOOL)selected selectedMetadata:(DSAPIPropertyMetadata * _Nullable)selectedMetadata status:(NSString * _Nullable)status statusMetadata:(DSAPIPropertyMetadata * _Nullable)statusMetadata tabId:(NSString * _Nullable)tabId tabIdMetadata:(DSAPIPropertyMetadata * _Nullable)tabIdMetadata tabOrder:(NSString * _Nullable)tabOrder tabOrderMetadata:(DSAPIPropertyMetadata * _Nullable)tabOrderMetadata underline:(BOOL)underline underlineMetadata:(DSAPIPropertyMetadata * _Nullable)underlineMetadata value:(NSString * _Nullable)value valueMetadata:(DSAPIPropertyMetadata * _Nullable)valueMetadata xPosition:(NSString * _Nullable)xPosition xPositionMetadata:(DSAPIPropertyMetadata * _Nullable)xPositionMetadata yPosition:(NSString * _Nullable)yPosition yPositionMetadata:(DSAPIPropertyMetadata * _Nullable)yPositionMetadata OBJC_DESIGNATED_INITIALIZER;
@end


/// This group tab is used to place radio buttons on a document. The `radios` property contains a list of <a href="/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/">`radio`</a> objects  associated with the group. Only one radio button can be selected in a group.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIRadioGroup")
@interface DSAPIRadioGroup : NSObject
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
/// The name of the group. The search_text provided in the call automatically performs a wild card search on group_name.
@property (nonatomic, copy) NSString * _Nullable groupName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable groupNameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// Specifies the locations and status for radio buttons that are grouped together.
@property (nonatomic, copy) NSArray<DSAPIRadio *> * _Nullable radios;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tooltipMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConditionalParentLabel:(NSString * _Nullable)conditionalParentLabel conditionalParentLabelMetadata:(DSAPIPropertyMetadata * _Nullable)conditionalParentLabelMetadata conditionalParentValue:(NSString * _Nullable)conditionalParentValue conditionalParentValueMetadata:(DSAPIPropertyMetadata * _Nullable)conditionalParentValueMetadata documentId:(NSString * _Nullable)documentId documentIdMetadata:(DSAPIPropertyMetadata * _Nullable)documentIdMetadata groupName:(NSString * _Nullable)groupName groupNameMetadata:(DSAPIPropertyMetadata * _Nullable)groupNameMetadata originalValue:(NSString * _Nullable)originalValue originalValueMetadata:(DSAPIPropertyMetadata * _Nullable)originalValueMetadata radios:(NSArray<DSAPIRadio *> * _Nullable)radios recipientId:(NSString * _Nullable)recipientId recipientIdGuid:(NSString * _Nullable)recipientIdGuid recipientIdGuidMetadata:(DSAPIPropertyMetadata * _Nullable)recipientIdGuidMetadata recipientIdMetadata:(DSAPIPropertyMetadata * _Nullable)recipientIdMetadata requireAll:(BOOL)requireAll requireAllMetadata:(DSAPIPropertyMetadata * _Nullable)requireAllMetadata requireInitialOnSharedChange:(BOOL)requireInitialOnSharedChange requireInitialOnSharedChangeMetadata:(DSAPIPropertyMetadata * _Nullable)requireInitialOnSharedChangeMetadata shared:(BOOL)shared sharedMetadata:(DSAPIPropertyMetadata * _Nullable)sharedMetadata shareToRecipients:(NSString * _Nullable)shareToRecipients shareToRecipientsMetadata:(DSAPIPropertyMetadata * _Nullable)shareToRecipientsMetadata tabType:(NSString * _Nullable)tabType tabTypeMetadata:(DSAPIPropertyMetadata * _Nullable)tabTypeMetadata templateLocked:(BOOL)templateLocked templateLockedMetadata:(DSAPIPropertyMetadata * _Nullable)templateLockedMetadata templateRequired:(BOOL)templateRequired templateRequiredMetadata:(DSAPIPropertyMetadata * _Nullable)templateRequiredMetadata tooltip:(NSString * _Nullable)tooltip tooltipMetadata:(DSAPIPropertyMetadata * _Nullable)tooltipMetadata value:(NSString * _Nullable)value valueMetadata:(DSAPIPropertyMetadata * _Nullable)valueMetadata OBJC_DESIGNATED_INITIALIZER;
@end


/// Describes an additional notification method.
SWIFT_CLASS("_TtC11DocuSignAPI36DSAPIRecipientAdditionalNotification")
@interface DSAPIRecipientAdditionalNotification : NSObject
/// The secondary delivery method. One of:  - `email` - `fax` - `SMS` - `offline`
@property (nonatomic, copy) NSString * _Nullable secondaryDeliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable secondaryDeliveryMethodMetadata;
/// The status of the delivery. This property is read-only.  One of:  - `autoresponded` - `optedout` - `limitreached`
@property (nonatomic, copy) NSString * _Nullable secondaryDeliveryStatus;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI24DSAPIRecipientAttachment")
@interface DSAPIRecipientAttachment : NSObject
/// The unique identifier for the attachment.
@property (nonatomic, copy) NSString * _Nullable attachmentId;
/// Specifies the type of the attachment for the recipient. Possible values are:  - `.htm` - `.xml`
@property (nonatomic, copy) NSString * _Nullable attachmentType;
/// A Base64-encoded representation of the attachment that is used to upload and download the file. File attachments may be up to 50 MB in size.
@property (nonatomic, copy) NSString * _Nullable data;
/// An optional label for the attachment.
@property (nonatomic, copy) NSString * _Nullable label;
/// The name of the attachment.
@property (nonatomic, copy) NSString * _Nullable name;
/// The URL of a previously staged chunked upload. Using a chunked upload enables you to stage a large, chunkable temp file. You then use the `remoteUrl` property to reference the chunked upload as the content in attachment and document-related requests. The `remoteUrl` property cannot be used for downloads.
@property (nonatomic, copy) NSURL * _Nullable remoteUrl;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAttachmentId:(NSString * _Nullable)attachmentId attachmentType:(NSString * _Nullable)attachmentType data:(NSString * _Nullable)data label:(NSString * _Nullable)label name:(NSString * _Nullable)name remoteUrl:(NSURL * _Nullable)remoteUrl OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DocuSignAPI31DSAPIRecipientEmailNotification")
@interface DSAPIRecipientEmailNotification : NSObject
/// The body of the email message.
@property (nonatomic, copy) NSString * _Nullable emailBody;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailBodyMetadata;
/// The subject line for the email notification.
@property (nonatomic, copy) NSString * _Nullable emailSubject;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailSubjectMetadata;
/// The language to use for the standard email format and signing view for a recipient.  For example, in the recipient's email notification, this setting affects elements such as the standard introductory text describing the request to sign. It also determines the language used for buttons and tabs in both the email notification and the signing experience.  <em>Note:</em> This setting affects only DocuSign standard text. Any custom text that you enter for the `emailBody` and `emailSubject` of the notification is not translated, and appears exactly as you enter it.   To retrieve the possible values, use the [Accounts::listSupportedLanguages][ListLang] method.  [ListLang]: /docs/esign-rest-api/reference/accounts/accounts/listsupportedlanguages/
@property (nonatomic, copy) NSString * _Nullable supportedLanguage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable supportedLanguageMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithEmailBody:(NSString * _Nullable)emailBody emailBodyMetadata:(DSAPIPropertyMetadata * _Nullable)emailBodyMetadata emailSubject:(NSString * _Nullable)emailSubject emailSubjectMetadata:(DSAPIPropertyMetadata * _Nullable)emailSubjectMetadata supportedLanguage:(NSString * _Nullable)supportedLanguage supportedLanguageMetadata:(DSAPIPropertyMetadata * _Nullable)supportedLanguageMetadata OBJC_DESIGNATED_INITIALIZER;
@end


/// Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication.
SWIFT_CLASS("_TtC11DocuSignAPI31DSAPIRecipientSMSAuthentication")
@interface DSAPIRecipientSMSAuthentication : NSObject
/// An array containing a list of phone numbers that the recipient can use for SMS text authentication.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable senderProvidedNumbers;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderProvidedNumbersMetadata;
- (nonnull instancetype)initWithSenderProvidedNumbers:(NSArray<NSString *> * _Nullable)senderProvidedNumbers senderProvidedNumbersMetadata:(DSAPIPropertyMetadata * _Nullable)senderProvidedNumbersMetadata OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.  Used only with recipient types In Person Signers and Signers.
SWIFT_CLASS("_TtC11DocuSignAPI34DSAPIRecipientSignatureInformation")
@interface DSAPIRecipientSignatureInformation : NSObject
/// The font type to use for the signature if the signature is not drawn. The following font styles  are supported. The quotes are to indicate that these values are strings, not `enums`.  - `&quot;1_DocuSign&quot;` - `&quot;2_DocuSign&quot;` - `&quot;3_DocuSign&quot;` - `&quot;4_DocuSign&quot;` - `&quot;5_DocuSign&quot;` - `&quot;6_DocuSign&quot;` - `&quot;7_DocuSign&quot;` - `&quot;8_DocuSign&quot;` - `&quot;Mistral&quot;` - `&quot;Rage Italic&quot;`
@property (nonatomic, copy) NSString * _Nullable fontStyle;
/// Specifies the user's signature in initials format.
@property (nonatomic, copy) NSString * _Nullable signatureInitials;
/// Specifies the user's signature name.
@property (nonatomic, copy) NSString * _Nullable signatureName;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFontStyle:(NSString * _Nullable)fontStyle signatureInitials:(NSString * _Nullable)signatureInitials signatureName:(NSString * _Nullable)signatureName OBJC_DESIGNATED_INITIALIZER;
@end


/// The recipient details that are returned after you update the recipient.
SWIFT_CLASS("_TtC11DocuSignAPI28DSAPIRecipientUpdateResponse")
@interface DSAPIRecipientUpdateResponse : NSObject
/// When you use the query parameter `combine_same_order_recipients` on the PUT Recipients call, the `recipientUpdateResponse` returns this property. When <em>true,</em> it indicates that the recipient has been combined or merged with a matching recipient. Recipient matching occurs as part of template matching, and is based on Recipient Role and Routing Order.
@property (nonatomic, copy) NSString * _Nullable combined;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
- (nonnull instancetype)initWithCombined:(NSString * _Nullable)combined errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails recipientId:(NSString * _Nullable)recipientId recipientIdGuid:(NSString * _Nullable)recipientIdGuid tabs:(DSAPITabs * _Nullable)tabs OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The request body for the <a href="/docs/esign-rest-api/reference/envelopes/envelopeviews/createrecipient/">EnvelopeViews: createRecipient</a> and <a href="/docs/esign-rest-api/reference/envelopes/envelopeviews/createsharedrecipient/">EnvelopeViews: createSharedRecipient</a> methods.
SWIFT_CLASS("_TtC11DocuSignAPI25DSAPIRecipientViewRequest")
@interface DSAPIRecipientViewRequest : NSObject
/// A unique identifier of the authentication event executed by the client application.
@property (nonatomic, copy) NSString * _Nullable assertionId;
/// A sender-generated value that indicates the date and time that the signer was authenticated.
@property (nonatomic, copy) NSString * _Nullable authenticationInstant;
/// Required. Choose a value that most closely matches the technique your application used to authenticate the recipient / signer.   Choose a value from this list:  * Biometric  * Email * HTTPBasicAuth * Kerberos * KnowledgeBasedAuth * None * PaperDocuments * Password * RSASecureID * SingleSignOn_CASiteminder * SingleSignOn_InfoCard * SingleSignOn_MicrosoftActiveDirectory * SingleSignOn_Other * SingleSignOn_Passport * SingleSignOn_SAML * Smartcard * SSLMutualAuth * X509Certificate  This information is included in the Certificate of Completion.
@property (nonatomic, copy) NSString * _Nullable authenticationMethod;
/// A sender-created value. If provided, the recipient is treated as an embedded (captive) recipient or signer.  Use your application's client ID (user ID) for the recipient. Doing so enables the details of your application's authentication of the recipient to be connected to the recipient's signature if the signature is disputed or repudiated.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// (Required) Specifies the email of the recipient. You can use either `email` and `userName` or `userId` to identify the recipient.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable frameAncestors;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable messageOrigins;
/// Only used if `pingUrl` is specified. This is the interval, in seconds, between pings on the `pingUrl`.  The default is `300` seconds. Valid values are 60-1200 seconds.
@property (nonatomic, copy) NSString * _Nullable pingFrequency;
/// The client URL that the DocuSign Signing experience should ping to indicate to the client that Signing is active. An HTTP GET call is executed against the client. The response from the client is ignored. The intent is for the client to reset its session timer when the request is received.
@property (nonatomic, copy) NSURL * _Nullable pingUrl;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// (Required) The URL to which the user should be redirected after the signing session has ended.  Maximum Length: 470 characters. If the `returnUrl` exceeds this limit, the user is redirected to a truncated URL Be sure to include `https://` in the URL or redirecting might fail on some browsers.   When DocuSign redirects to this URL, it will include an `event` query parameter that your app can use:  * `access_code_failed`: Recipient used incorrect access code. * `cancel`: Recipient canceled the signing operation,   possibly by using the <em>Finish Later</em> option. * `decline`: Recipient declined to sign. * `exception`: A system error occurred during the signing process. * `fax_pending`: Recipient has a fax pending. * `id_check_failed`: Recipient failed an ID check. * `session_timeout`: The session timed out. An account can control this timeout by using the <em>Signer Session Timeout</em> option. * `signing_complete`: The recipient completed the signing ceremony. * `ttl_expired`: The Time To Live token for the envelope has expired.   After being successfully invoked, these tokens expire   after 5 minutes or if the envelope is voided. * `viewing_complete`: The recipient completed viewing an envelope   that is in a read-only/terminal state,   such as completed, declined, or voided.
@property (nonatomic, copy) NSURL * _Nullable returnUrl;
/// The domain in which the user authenticated.
@property (nonatomic, copy) NSString * _Nullable securityDomain;
/// The user ID of the recipient. You can use either the user ID or email and user name to identify the recipient.   If `userId` is used and a `clientUserId` is provided, the value in the `userId` property must match a `recipientId` (which you can retrieve with a GET recipients call) for the envelope.   If a `userId` is used and a `clientUserId` is not provided, the `userId` must match the user ID of the authenticating user.
@property (nonatomic, copy) NSString * _Nullable userId;
/// The username of the recipient. You can use either `email` and `userName` or `userId` to identify the recipient.
@property (nonatomic, copy) NSString * _Nullable userName;
/// Specifies whether a browser should be allowed to render a page in a frame or IFrame. Setting this property ensures that your content is not embedded into unauthorized pages or frames.  Valid values are:  - `deny`: The page cannot be displayed in a frame. - `same_origin`: The page can only be displayed in a frame on the same origin as the page itself. - `allow_from`: The page can only be displayed in a frame on the origin specified by the `xFrameOptionsAllowFromUrl` property.
@property (nonatomic, copy) NSString * _Nullable xFrameOptions;
/// When the value of `xFrameOptions` is `allow_from`, this property specifies the origin on which the page is allowed to display in a frame. If the value of `xFrameOptions` is `allow_from`, you must include a value for this property.
@property (nonatomic, copy) NSURL * _Nullable xFrameOptionsAllowFromUrl;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPISealSign;
@class DSAPISigner;
@class DSAPIWitness;

/// Specifies the envelope recipients.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIRecipients")
@interface DSAPIRecipients : NSObject
/// A list of agent recipients assigned to the documents.
@property (nonatomic, copy) NSArray<DSAPIAgent *> * _Nullable agents;
/// A list of carbon copy recipients assigned to the documents.
@property (nonatomic, copy) NSArray<DSAPICarbonCopy *> * _Nullable carbonCopies;
/// A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.
@property (nonatomic, copy) NSArray<DSAPICertifiedDelivery *> * _Nullable certifiedDeliveries;
/// The routing order of the current recipient. If this value equals a particular signer's routing order, it indicates that the envelope has been sent to that recipient, but he or she has not completed the required actions.
@property (nonatomic, copy) NSString * _Nullable currentRoutingOrder;
/// A list of users who can edit the envelope.
@property (nonatomic, copy) NSArray<DSAPIEditor *> * _Nullable editors;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.
@property (nonatomic, copy) NSArray<DSAPIInPersonSigner *> * _Nullable inPersonSigners;
/// Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).
@property (nonatomic, copy) NSArray<DSAPIIntermediary *> * _Nullable intermediaries;
/// A list of notary recipients on the envelope.
@property (nonatomic, copy) NSArray<DSAPINotaryRecipient *> * _Nullable notaries;
/// The number of recipients in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientCount;
/// A list of electronic seals to apply to documents.
@property (nonatomic, copy) NSArray<DSAPISealSign *> * _Nullable seals;
/// A list of signers on the envelope.
@property (nonatomic, copy) NSArray<DSAPISigner *> * _Nullable signers;
/// A list of signers who act as witnesses on the envelope.
@property (nonatomic, copy) NSArray<DSAPIWitness *> * _Nullable witnesses;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAgents:(NSArray<DSAPIAgent *> * _Nullable)agents carbonCopies:(NSArray<DSAPICarbonCopy *> * _Nullable)carbonCopies certifiedDeliveries:(NSArray<DSAPICertifiedDelivery *> * _Nullable)certifiedDeliveries currentRoutingOrder:(NSString * _Nullable)currentRoutingOrder editors:(NSArray<DSAPIEditor *> * _Nullable)editors errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails inPersonSigners:(NSArray<DSAPIInPersonSigner *> * _Nullable)inPersonSigners intermediaries:(NSArray<DSAPIIntermediary *> * _Nullable)intermediaries notaries:(NSArray<DSAPINotaryRecipient *> * _Nullable)notaries recipientCount:(NSString * _Nullable)recipientCount seals:(NSArray<DSAPISealSign *> * _Nullable)seals signers:(NSArray<DSAPISigner *> * _Nullable)signers witnesses:(NSArray<DSAPIWitness *> * _Nullable)witnesses OBJC_DESIGNATED_INITIALIZER;
@end


@interface DSAPIRecipients (SWIFT_EXTENSION(DocuSignAPI))
- (id _Nullable)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end


/// This is the response that the API returns after you update recipients.
SWIFT_CLASS("_TtC11DocuSignAPI28DSAPIRecipientsUpdateSummary")
@interface DSAPIRecipientsUpdateSummary : NSObject
/// An array of `recipientUpdateResults` objects that contain details about the recipients.
@property (nonatomic, copy) NSArray<DSAPIRecipientUpdateResponse *> * _Nullable recipientUpdateResults;
- (nonnull instancetype)initWithRecipientUpdateResults:(NSArray<DSAPIRecipientUpdateResponse *> * _Nullable)recipientUpdateResults OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A complex element that specifies reminder settings for the envelope.
SWIFT_CLASS("_TtC11DocuSignAPI14DSAPIReminders")
@interface DSAPIReminders : NSObject
/// An integer specifying the number of days after the recipient receives the envelope that reminder emails are sent to the recipient. The default value is 0.
@property (nonatomic, copy) NSString * _Nullable reminderDelay;
/// When <em>true,</em> reminders are enabled. The default value is <em>false.</em>
@property (nonatomic) BOOL reminderEnabled;
/// An integer specifying the interval in days between reminder emails. The default value is 0.
@property (nonatomic, copy) NSString * _Nullable reminderFrequency;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithReminderDelay:(NSString * _Nullable)reminderDelay reminderEnabled:(BOOL)reminderEnabled reminderFrequency:(NSString * _Nullable)reminderFrequency OBJC_DESIGNATED_INITIALIZER;
@end


/// Specifies one or more electronic seals to apply on documents. An electronic seal recipient is a legal entity rather than an actual person. Electronic Seals can be used by organizations and governments to show evidence of origin and integrity of documents. Even though electronic seals can be represented by a tab in a document, they do not require user interaction and apply automatically in the order specified by the sender. The sender is therefore the person authorizing usage of the electronic seal in the flow.  Example:   ```json &quot;recipients&quot;: {       &quot;seals&quot;: [         {           &quot;recipientId&quot;: &quot;1&quot;,           &quot;routingOrder&quot; : 1,           &quot;recipientSignatureProviders&quot;: [             {               &quot;sealName&quot;: &quot;52e9d968-xxxx-xxxx-xxxx-4682bc45c106&quot;             }        ]      }    ]  },     .     .     . ``` For more information about Electronic Seals, see <a href="https://support.docusign.com/en/guides/ndse-user-guide-apply-electronic-seals">Apply Electronic Seals to Your Documents</a>.
SWIFT_CLASS("_TtC11DocuSignAPI13DSAPISealSign")
@interface DSAPISealSign : NSObject
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// Not applicable.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// Not applicable.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// Not applicable.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// Not applicable.
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// Not applicable.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable name;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
/// Not applicable.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// (Required) The `recipientId` used when the envelope or template was created.   This is a local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// Not applicable.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// (Optional, default: 1)  Specifies the routing order of the electronic seal in the envelope. The routing order assigned to your electronic seal cannot be shared with another recipient. It is recommended that you set a routing order for your electronic seals.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// Not applicable.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// Not applicable.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable suppressEmails;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Metadata that indicates whether a property is editable and describes setting-specific options.
SWIFT_CLASS("_TtC11DocuSignAPI21DSAPISettingsMetadata")
@interface DSAPISettingsMetadata : NSObject
/// When <em>true,</em> indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).
@property (nonatomic) BOOL is21CFRPart11;
/// An array of option strings supported by this setting.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable options;
/// Indicates whether the property is editable. Valid values are:  - `editable` - `read_only`
@property (nonatomic, copy) NSString * _Nullable rights;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable uiHint;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable uiOrder;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable uiType;
- (nonnull instancetype)initWithIs21CFRPart11:(BOOL)is21CFRPart11 options:(NSArray<NSString *> * _Nullable)options rights:(NSString * _Nullable)rights uiHint:(NSString * _Nullable)uiHint uiOrder:(NSString * _Nullable)uiOrder uiType:(NSString * _Nullable)uiType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIStamp;

/// A tab that allows the recipient to sign a document. May be optional.
SWIFT_CLASS("_TtC11DocuSignAPI13DSAPISignHere")
@interface DSAPISignHere : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable handDrawRequired;
/// Not applicable to Sign Here tab.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em>  the tab contains a visual representation for an electronic seal in a document.
@property (nonatomic) BOOL isSealSignTab;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// When <em>true,</em> the recipient does not need to complete this tab to complete the signing process.
@property (nonatomic) BOOL optional;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable optionalMetadata;
/// Specifies the page number on which the tab is located. Must be 1 for supplemental documents.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Scales the size of the tab. This field accepts values from 0.5 to 2.0, where  0.5 is half the normal size, 1.0 is normal size, and 2.0 is twice the normal size.
@property (nonatomic, copy) NSString * _Nullable scaleValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable scaleValueMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, strong) DSAPIStamp * _Nullable stamp;
/// The type of stamp. Valid values are:  - `signature`: A signature image. This is the default value. - `stamp`: A stamp image. - null
@property (nonatomic, copy) NSString * _Nullable stampType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable stampTypeMetadata;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// Not applicable to Sign Here tab.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+1, -7)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+1, -7)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
@property (nonatomic, copy) NSString * _Nullable imageDataBase64;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A complex type containing information about a signer recipient. A signer is a recipient who must take action on a document, such as sign, initial, date, or add data to form fields on a document.
SWIFT_CLASS("_TtC11DocuSignAPI11DSAPISigner")
@interface DSAPISigner : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// Optional element. When <em>true,</em> the agent recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditEmail;
/// Optional. When <em>true,</em> the agent recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditName;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSURL * _Nullable bulkRecipientsUri;
/// When <em>true,</em> specifies that the signer can perform the signing ceremony offline.
@property (nonatomic) BOOL canSignOffline;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// The reason why the item was created.
@property (nonatomic, copy) NSString * _Nullable creationReason;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// When <em>true,</em> this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.
@property (nonatomic) BOOL defaultRecipient;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address. The system sends notifications about the documents to sign to this address. Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name. Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// When <em>true,</em> this signer is a bulk recipient and the recipient information is contained in a bulk recipient file.   Note that when this is true the email and name for the recipient becomes bulk@recipient.com and &quot;Bulk Recipient&quot;. These fields can not be changed for the bulk recipient.
@property (nonatomic) BOOL isBulkRecipient;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable isBulkRecipientMetadata;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The `recipientId` of the notary for this signer.
@property (nonatomic, copy) NSString * _Nullable notaryId;
@property (nonatomic, copy) NSString * _Nullable notarySignerEmailSent;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
@property (nonatomic, strong) DSAPIOfflineAttributes * _Nullable offlineAttributes;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// When <em>true,</em> specifies that the recipient creates the tabs.
@property (nonatomic) BOOL recipientSuppliesTabs;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Sets the type of signer certificate required for signing. If left blank, no certificate is required. Only one type of certificate can be set for a signer. Valid values:  * `docusign_express`: Requires a DocuSign Express certificate. * `safe`: Requires a SAFE-BioPharma certificate. * `open_trust`: Requires an OpenTrust certificate.   <em>Important:</em> There are certain rules and restrictions that must be followed when requiring OpenTrust digital signatures. See [ML:OpenTrust Rules and Restrictions] for more information.
@property (nonatomic, copy) NSString * _Nullable requireSignerCertificate;
/// When <em>true,</em> the signer must print, sign, and upload or fax the signed documents to DocuSign.
@property (nonatomic) BOOL requireSignOnPaper;
/// When <em>true,</em> the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.
@property (nonatomic) BOOL requireUploadSignature;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
@property (nonatomic, strong) DSAPIRecipientSignatureInformation * _Nullable signatureInfo;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// When <em>true</em> and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).
@property (nonatomic) BOOL signInEachLocation;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signInEachLocationMetadata;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// Specifies the status of the recipient at the time of the request. This property is read-only. Possible values are:  - `created`: The recipient is in a draft state. This is only associated with draft envelopes (envelopes with a created status). - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing web site. This is not an email delivery of the documents in an envelope. - `signed`; The recipient has completed (performed all required interactions, such as signing or entering data) all required tags in an envelope. This is a temporary state during processing, after which the recipient is automatically moved to completed. - `declined`: The recipient declined to sign the documents in the envelope. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `faxpending`: The recipient has finished signing and the system is waiting a fax attachment by the recipient before completing their signing step. - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used by the DocuSign webapp (also known as the DocuSign console) to inform senders about the auto-responded email.
@property (nonatomic, copy) NSString * _Nullable status;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The total number of tabs in the documents. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to attach supporting documents to an envelope.
SWIFT_CLASS("_TtC11DocuSignAPI21DSAPISignerAttachment")
@interface DSAPISignerAttachment : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable handDrawRequired;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// When <em>true,</em> the recipient does not need to complete this tab to complete the signing process.
@property (nonatomic) BOOL optional;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable optionalMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Sets the size of the tab. This field accepts values from `0.5` to `1.0`, where `1.0` represents full size and `0.5` is 50% of full size.
@property (nonatomic, copy) NSString * _Nullable scaleValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable scaleValueMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+0, -24)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+0, -24)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI25DSAPISocialAuthentication")
@interface DSAPISocialAuthentication : NSObject
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable authentication;
- (nonnull instancetype)initWithAuthentication:(NSString * _Nullable)authentication OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A one-line field that allows the recipient to enter a Social Security Number. The SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.
SWIFT_CLASS("_TtC11DocuSignAPI8DSAPISsn")
@interface DSAPISsn : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic, copy) NSString * _Nullable requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI10DSAPIStamp")
@interface DSAPIStamp : NSObject
/// The UTC date and time when the user adopted the signature.
@property (nonatomic, copy) NSDate * _Nullable adoptedDateTime;
/// The UTC DateTime when the item was created.
@property (nonatomic, copy) NSDate * _Nullable createdDateTime;
@property (nonatomic, copy) NSString * _Nullable customField;
@property (nonatomic, strong) DSAPIDateStampProperties * _Nullable dateStampProperties;
/// When <em>true,</em> users may not resize the stamp.
@property (nonatomic) BOOL disallowUserResizeStamp;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Optionally specify an external identifier for the user's signature.
@property (nonatomic, copy) NSString * _Nullable externalID;
@property (nonatomic, copy) NSString * _Nullable imageBase64;
/// Specificies the type of image. Valid values are:  - `signature_image` - `initials_image`
@property (nonatomic, copy) NSString * _Nullable imageType;
/// The date and time that the item was last modified.
@property (nonatomic, copy) NSDate * _Nullable lastModifiedDateTime;
/// The phonetic spelling of the `signatureName`.
@property (nonatomic, copy) NSString * _Nullable phoneticName;
/// Specifies the user's signature name.
@property (nonatomic, copy) NSString * _Nullable signatureName;
/// The format of a stamp. Valid values are:  - `NameHanko`: The stamp represents only the signer's name. - `NameDateHanko`: The stamp represents the signer's name and the date.
@property (nonatomic, copy) NSString * _Nullable stampFormat;
/// The URI for retrieving the image of the user's stamp.
@property (nonatomic, copy) NSURL * _Nullable stampImageUri;
/// The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.
@property (nonatomic, copy) NSString * _Nullable stampSizeMM;
/// Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.
@property (nonatomic, copy) NSString * _Nullable status;
- (nonnull instancetype)initWithAdoptedDateTime:(NSDate * _Nullable)adoptedDateTime createdDateTime:(NSDate * _Nullable)createdDateTime customField:(NSString * _Nullable)customField dateStampProperties:(DSAPIDateStampProperties * _Nullable)dateStampProperties disallowUserResizeStamp:(BOOL)disallowUserResizeStamp errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails externalID:(NSString * _Nullable)externalID imageBase64:(NSString * _Nullable)imageBase64 imageType:(NSString * _Nullable)imageType lastModifiedDateTime:(NSDate * _Nullable)lastModifiedDateTime phoneticName:(NSString * _Nullable)phoneticName signatureName:(NSString * _Nullable)signatureName stampFormat:(NSString * _Nullable)stampFormat stampImageUri:(NSURL * _Nullable)stampImageUri stampSizeMM:(NSString * _Nullable)stampSizeMM status:(NSString * _Nullable)status OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI13DSAPITabGroup")
@interface DSAPITabGroup : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// A unique identifier for a tab group. To assign a tab to the `tabGroup`, you assign the `TabGroupLabel` to the `tab.TabGroupLabels` array.
@property (nonatomic, copy) NSString * _Nullable groupLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable groupLabelMetadata;
/// Specifies how `maximumAllowed` and `minimumRequired` are interpreted when selecting tabs in a `tabGroup`.  Possible values are:  - `SelectAtLeast` - `SelectAtMost` - `SelectExactly` - `SelectARange`
@property (nonatomic, copy) NSString * _Nullable groupRule;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable groupRuleMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// The maximum number of tabs within the `tabGroup` that should be checked, populated, or signed. This property is used for validation.
@property (nonatomic, copy) NSString * _Nullable maximumAllowed;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maximumAllowedMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The minimum number of of tabs within the `tabGroup` that should be checked, populated, or signed. This property is used for validation.
@property (nonatomic, copy) NSString * _Nullable minimumRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable minimumRequiredMetadata;
/// Specifies the page number on which the tab is located.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// The scope of the tab group. Possible values are:  - `document` - `envelope` (default)
@property (nonatomic, copy) NSString * _Nullable tabScope;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabScopeMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIText;
@class DSAPITitle;
@class DSAPIZip;

/// Tabs indicate to recipients where they should sign, initial, or enter data on a document. They are represented graphically as symbols on documents at the time of signing. Tabs can also display data to the recipients.
SWIFT_CLASS("_TtC11DocuSignAPI9DSAPITabs")
@interface DSAPITabs : NSObject
/// A list of [Approve tabs][approve].  An Approve tab enables the recipient to approve documents without placing a signature or initials on the document. If the recipient clicks the tab during the signing process, the recipient is considered to have signed the document. No information is shown on the document of the approval, but it is recorded as a signature in the envelope history. The value of an approve tab can't be set.  [approve]:        /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIApprove *> * _Nullable approveTabs;
/// A list of [Checkbox tabs][checkbox].   A Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.   [checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPICheckbox *> * _Nullable checkboxTabs;
/// A list of [Company tabs][company].  A Company tab displays a field for the name of the recipient's company. This value can't be set.  [company]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_company
@property (nonatomic, copy) NSArray<DSAPICompany *> * _Nullable companyTabs;
/// A list of [Date Signed tabs][dateSigned].   A Date Signed tab displays the date that the recipient signed the document. This value can't be set.  [dateSigned]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIDateSigned *> * _Nullable dateSignedTabs;
/// A list of [Date tabs][date].  A Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.  <em>Note:</em> If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.   [date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIDate *> * _Nullable dateTabs;
/// A list of [Decline tabs][decline].  A Decline tab enables the recipient to decline the envelope. If the recipient clicks the tab during the signing process, the envelope is voided. The value of this tab can't be set.   [decline]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIDecline *> * _Nullable declineTabs;
/// A list of [Email Address tabs][emailAddress].  An Email Address tab displays the recipient's email as entered in the recipient information. This value can't be set.   [emailAddress]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIEmailAddress *> * _Nullable emailAddressTabs;
/// A list of [Email tabs][email].  An Email tab enables the recipient to enter an email address. This is a one-line field that checks that a valid email address is entered. It uses the same parameters as a Text tab, with the validation message and pattern set for email information. This value can be set.  When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.  [email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIEmail *> * _Nullable emailTabs;
/// A list of [Envelope ID tabs][envelopeId].  An Envelope ID tab  displays the envelope ID. Recipients cannot enter or change the information in this tab. This value can't be set.   [envelopeId]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#response201_envelopeid
@property (nonatomic, copy) NSArray<DSAPIEnvelopeId *> * _Nullable envelopeIdTabs;
/// A list of [First Name tabs][firstName].  A First Name tab displays the recipient's first name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.   [firstName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_firstname
@property (nonatomic, copy) NSArray<DSAPIFirstName *> * _Nullable firstNameTabs;
/// A list of [Formula tabs][formulaTab].  The value of a Formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the Formula tab calculates and displays the result. This value can be set.  The `formula` property of the tab contains the references to the underlying tabs. To learn more about formulas, see [Calculated Fields][calculatedfields].  If a Formula tab contains a `paymentDetails` property, the tab is considered a payment item. To learn more about payments, see [Requesting Payments Along with Signatures][paymentguide].  [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures [formulaTab]:      /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIFormulaTab *> * _Nullable formulaTabs;
/// A list of [Full Name tabs][fullName].  A Full Name tab displays the recipient's full name. This value can't be set.   [fullName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIFullName *> * _Nullable fullNameTabs;
/// A list of [Initial Here tabs][initialHere].  This type of tab enables the recipient to initial the document. May be optional. This value can't be set.  [initialHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIInitialHere *> * _Nullable initialHereTabs;
/// A list of [Last Name tabs][lastName].  A Last Name tab displays the recipient's last name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.   [lastName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPILastName *> * _Nullable lastNameTabs;
/// An array of List tabs.  A List tab enables the recipient to choose from a list of options. You specify the options in the `listItems` property. This value can't be set.  Find descriptions of all tab types in the [tabs Resource][ert].  [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIList *> * _Nullable listTabs;
/// A list of [Note tabs][note].  A Note tab displays additional information to the recipient in the form of a note. This value can be set.  [note]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPINote *> * _Nullable noteTabs;
/// A list of [Number tabs][number].  A Number tab enables the recipient to enter numbers and decimal points (.). This value can be set.    [number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPINumber *> * _Nullable numberTabs;
/// A list of [Radio Group tabs][radioGroup].  A Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio buttons associated with the group. Only one radio button can be selected in a group. This value can be set.   [radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIRadioGroup *> * _Nullable radioGroupTabs;
/// A list of [Signer Attachment tabs][signerAttachment].  This type of tab enables the recipient to attach supporting documents to an envelope. This value can't be set.   [signerAttachment]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPISignerAttachment *> * _Nullable signerAttachmentTabs;
/// A list of [Sign Here tabs][signHere].  This type of tab enables the recipient to sign a document. May be optional. This value can't be set.  [signHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPISignHere *> * _Nullable signHereTabs;
/// A list of [SSN tabs][ssn].  An SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.   [ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPISsn *> * _Nullable ssnTabs;
/// An array of `tabGroup` items.  To associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.
@property (nonatomic, copy) NSArray<DSAPITabGroup *> * _Nullable tabGroups;
/// A list of Text tabs.  A text tab enables the recipient to enter free text. This value can be set.  Find descriptions of all tab types in the [tabs Resource][ert].  [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIText *> * _Nullable textTabs;
/// A list of [Title tabs][title].  A Title tab displays the recipient's title.  This value can't be set.   [title]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPITitle *> * _Nullable titleTabs;
/// A list of [Zip tabs][zip].  A Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.   [zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIZip *> * _Nullable zipTabs;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The telemetry event model.
SWIFT_CLASS("_TtC11DocuSignAPI19DSAPITelemetryEvent")
@interface DSAPITelemetryEvent : NSObject
/// The app version.
@property (nonatomic, copy) NSString * _Nullable appVersion;
/// The identity (TBD).
@property (nonatomic, copy) NSString * _Nullable identity;
/// The traceToken.
@property (nonatomic, copy) NSString * _Nullable traceToken;
/// The category of the event.
@property (nonatomic, copy) NSString * _Nullable eventCategory;
/// The name of the event.
@property (nonatomic, copy) NSString * _Nullable eventName;
/// The type of the event.
@property (nonatomic, copy) NSString * _Nullable eventType;
/// The array containing application names.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable applications;
/// The client specific details.
@property (nonatomic, strong) DSAPIClientContext * _Nullable clientContext;
/// The data.
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable data;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAppVersion:(NSString * _Nullable)appVersion identity:(NSString * _Nullable)identity traceToken:(NSString * _Nullable)traceToken eventCategory:(NSString * _Nullable)eventCategory eventName:(NSString * _Nullable)eventName eventType:(NSString * _Nullable)eventType applications:(NSArray<NSString *> * _Nullable)applications clientContext:(DSAPIClientContext * _Nullable)clientContext data:(NSDictionary<NSString *, NSString *> * _Nullable)data OBJC_DESIGNATED_INITIALIZER;
@end


/// The telemetry events model.
SWIFT_CLASS("_TtC11DocuSignAPI20DSAPITelemetryEvents")
@interface DSAPITelemetryEvents : NSObject
/// The telemetry events.
@property (nonatomic, copy) NSArray<DSAPITelemetryEvent *> * _Nullable events;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithEvents:(NSArray<DSAPITelemetryEvent *> * _Nullable)events OBJC_DESIGNATED_INITIALIZER;
@end


/// This response object is returned after you post a telemetry event.
SWIFT_CLASS("_TtC11DocuSignAPI28DSAPITelemetryEventsResponse")
@interface DSAPITelemetryEventsResponse : NSObject
/// An array containing failed telemetry events.
@property (nonatomic, copy) NSArray<DSAPIFailedTelemetryEvent *> * _Nullable failedEvents;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFailedEvents:(NSArray<DSAPIFailedTelemetryEvent *> * _Nullable)failedEvents OBJC_DESIGNATED_INITIALIZER;
@end


/// Information about a specific role.
SWIFT_CLASS("_TtC11DocuSignAPI17DSAPITemplateRole")
@interface DSAPITemplateRole : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// When <em>true,</em> this recipient is the default recipient and any tabs generated by the `transformPdfFields` option are mapped to this recipient.
@property (nonatomic) BOOL defaultRecipient;
/// The email address of the person associated with a role name. It is the email address of the person specified in the `name` property.  For an in-person signer, this is the email address of the host.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
/// The full legal name of the in-person signer.  Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable inPersonSignerName;
/// Specifies the recipient's name.  For an in-person signer, this is the name of the host.
@property (nonatomic, copy) NSString * _Nullable name;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to enter any type of text.
SWIFT_CLASS("_TtC11DocuSignAPI9DSAPIText")
@interface DSAPIText : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// Contains the formula for calculating the value of this tab.  Use a tab's `tabLabel`, enclosed in brackets, to refer to it.  For example, you want to present the total cost of two items, tax included.  The cost of each item is stored in number tabs labeled Item1 and Item2. The tax rate is in a number tab labeled TaxRate.  The formula string for this property would be: `([Item1] + [Item2]) * (1 + [TaxRate])`  See [Calculated Fields][calculatedfields] in the DocuSign Support Center to learn more about formulas.  Maximum Length: 2000 characters  [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
@property (nonatomic, copy) NSString * _Nullable formula;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formulaMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL isPaymentAmount;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable isPaymentAmountMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// This object represents a free text custom field where envelope creators and senders can enter custom data.
SWIFT_CLASS("_TtC11DocuSignAPI20DSAPITextCustomField")
@interface DSAPITextCustomField : NSObject
/// If you are using merge fields, this property specifies the type of the merge field. The only supported value is `salesforce`.
@property (nonatomic, copy) NSString * _Nullable configurationType;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The ID of the custom field.
@property (nonatomic, copy) NSString * _Nullable fieldId;
/// The name of the custom field.
@property (nonatomic, copy) NSString * _Nullable name;
/// When <em>true,</em> senders are required to enter or select information for the field before they can send the envelope.
@property (nonatomic) BOOL required;
/// When <em>true,</em> the field displays in the <em>Envelope Custom Fields</em> section when a user creates or sends an envelope.
@property (nonatomic) BOOL show;
/// The value of the custom field. The user who creates or sends the envelope provides this value. Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConfigurationType:(NSString * _Nullable)configurationType errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails fieldId:(NSString * _Nullable)fieldId name:(NSString * _Nullable)name required:(BOOL)required show:(BOOL)show value:(NSString * _Nullable)value OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that displays the recipient's title.
SWIFT_CLASS("_TtC11DocuSignAPI10DSAPITitle")
@interface DSAPITitle : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Describes which account management capabilities a user has.
SWIFT_CLASS("_TtC11DocuSignAPI45DSAPIUserAccountManagementGranularInformation")
@interface DSAPIUserAccountManagementGranularInformation : NSObject
/// <em>True</em> if the user can manage account security settings.
@property (nonatomic, copy) NSString * _Nullable canManageAccountSecuritySettings;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageAccountSecuritySettingsMetadata;
/// <em>True</em> if the user can manage account settings.
@property (nonatomic, copy) NSString * _Nullable canManageAccountSettings;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageAccountSettingsMetadata;
/// <em>True</em> if the user can manage administrators.
@property (nonatomic, copy) NSString * _Nullable canManageAdmins;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageAdminsMetadata;
@property (nonatomic, copy) NSString * _Nullable canManageConnect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageConnectMetadata;
@property (nonatomic, copy) NSString * _Nullable canManageDocumentRetention;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageDocumentRetentionMetadata;
@property (nonatomic, copy) NSString * _Nullable canManageEnvelopeTransfer;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageEnvelopeTransferMetadata;
@property (nonatomic, copy) NSString * _Nullable canManageGroupsButNotUsers;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageGroupsButNotUsersMetadata;
/// <em>True</em> if the user can manage reporting.
@property (nonatomic, copy) NSString * _Nullable canManageReporting;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageReportingMetadata;
/// <em>True</em> if the user can manage sharing.
@property (nonatomic, copy) NSString * _Nullable canManageSharing;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageSharingMetadata;
/// <em>True</em> if the user can manage signing groups.
@property (nonatomic, copy) NSString * _Nullable canManageSigningGroups;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageSigningGroupsMetadata;
/// <em>True</em> if the user can manage users.
@property (nonatomic, copy) NSString * _Nullable canManageUsers;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageUsersMetadata;
@property (nonatomic, copy) NSString * _Nullable canViewUsers;
- (nonnull instancetype)initWithCanManageAccountSecuritySettings:(NSString * _Nullable)canManageAccountSecuritySettings canManageAccountSecuritySettingsMetadata:(DSAPISettingsMetadata * _Nullable)canManageAccountSecuritySettingsMetadata canManageAccountSettings:(NSString * _Nullable)canManageAccountSettings canManageAccountSettingsMetadata:(DSAPISettingsMetadata * _Nullable)canManageAccountSettingsMetadata canManageAdmins:(NSString * _Nullable)canManageAdmins canManageAdminsMetadata:(DSAPISettingsMetadata * _Nullable)canManageAdminsMetadata canManageConnect:(NSString * _Nullable)canManageConnect canManageConnectMetadata:(DSAPISettingsMetadata * _Nullable)canManageConnectMetadata canManageDocumentRetention:(NSString * _Nullable)canManageDocumentRetention canManageDocumentRetentionMetadata:(DSAPISettingsMetadata * _Nullable)canManageDocumentRetentionMetadata canManageEnvelopeTransfer:(NSString * _Nullable)canManageEnvelopeTransfer canManageEnvelopeTransferMetadata:(DSAPISettingsMetadata * _Nullable)canManageEnvelopeTransferMetadata canManageGroupsButNotUsers:(NSString * _Nullable)canManageGroupsButNotUsers canManageGroupsButNotUsersMetadata:(DSAPISettingsMetadata * _Nullable)canManageGroupsButNotUsersMetadata canManageReporting:(NSString * _Nullable)canManageReporting canManageReportingMetadata:(DSAPISettingsMetadata * _Nullable)canManageReportingMetadata canManageSharing:(NSString * _Nullable)canManageSharing canManageSharingMetadata:(DSAPISettingsMetadata * _Nullable)canManageSharingMetadata canManageSigningGroups:(NSString * _Nullable)canManageSigningGroups canManageSigningGroupsMetadata:(DSAPISettingsMetadata * _Nullable)canManageSigningGroupsMetadata canManageUsers:(NSString * _Nullable)canManageUsers canManageUsersMetadata:(DSAPISettingsMetadata * _Nullable)canManageUsersMetadata canViewUsers:(NSString * _Nullable)canViewUsers OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI13DSAPIUserInfo")
@interface DSAPIUserInfo : NSObject
/// The account ID associated with the envelope.
@property (nonatomic, copy) NSString * _Nullable accountId;
/// The name on the account.
@property (nonatomic, copy) NSString * _Nullable accountName;
/// Access code provided to the user to activate the account.
@property (nonatomic, copy) NSString * _Nullable activationAccessCode;
/// The user's email address.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// When <em>true,</em> indicates that the user is logged in. This is a read-only property.
@property (nonatomic) BOOL loginStatus;
/// The user's membership ID.
@property (nonatomic, copy) NSString * _Nullable membershipId;
/// This field is no longer supported for most accounts. To create an eSignature user without sending an activation email, use the Admin API by following <a href="/docs/admin-api/how-to/create-active-user/">these steps</a>.
@property (nonatomic) BOOL sendActivationEmail;
/// A URI containing the user ID.
@property (nonatomic, copy) NSURL * _Nullable uri;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
/// The name of the user.
@property (nonatomic, copy) NSString * _Nullable userName;
/// Status of the user's account. One of:  - `ActivationRequired` - `ActivationSent` - `Active` - `Closed` - `Disabled`
@property (nonatomic, copy) NSString * _Nullable userStatus;
/// The type of user, for example `CompanyUser`.
@property (nonatomic, copy) NSString * _Nullable userType;
- (nonnull instancetype)initWithAccountId:(NSString * _Nullable)accountId accountName:(NSString * _Nullable)accountName activationAccessCode:(NSString * _Nullable)activationAccessCode email:(NSString * _Nullable)email errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails loginStatus:(BOOL)loginStatus membershipId:(NSString * _Nullable)membershipId sendActivationEmail:(BOOL)sendActivationEmail uri:(NSURL * _Nullable)uri userId:(NSString * _Nullable)userId userName:(NSString * _Nullable)userName userStatus:(NSString * _Nullable)userStatus userType:(NSString * _Nullable)userType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Properties that configure the settings for a user. Some elements of this object have a `metadata` property, which includes the following: - `rights`: The calling users permissions to edit this setting (can be `editable` or `read_only`) - `uiHint`: Internally used to build UIs (can be `available` or `hidden`) - `options`: The values supported for this setting (not all settings have this element)
SWIFT_CLASS("_TtC11DocuSignAPI28DSAPIUserSettingsInformation")
@interface DSAPIUserSettingsInformation : NSObject
@property (nonatomic, strong) DSAPIUserAccountManagementGranularInformation * _Nullable accountManagementGranular;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable adminOnly;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable adminOnlyMetadata;
/// When <em>true,</em> the API returns suggested tabs for documents for this user.
@property (nonatomic) BOOL allowAutoTagging;
/// When <em>true,</em> this user can participate in envelope transfers on the account.
@property (nonatomic) BOOL allowEnvelopeTransferTo;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEnvelopeTransferToMetadata;
/// When <em>true,</em> this user can create [electronic seal recipients][eseal].  [eseal]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/#seal-recipient
@property (nonatomic) BOOL allowEsealRecipients;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEsealRecipientsMetadata;
/// When <em>true</em> and this user is an administrator, they can view all of the envelopes generated from PowerForms. The default value is <em>false.</em>
@property (nonatomic) BOOL allowPowerFormsAdminToAccessAllPowerFormEnvelope;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata;
/// When <em>true,</em> this user can set the language used in the standard email format for a recipient when creating an envelope.
@property (nonatomic) BOOL allowRecipientLanguageSelection;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowRecipientLanguageSelectionMetadata;
/// When <em>true,</em> this user can send envelopes &quot;on behalf of&quot; other users through the API.
@property (nonatomic) BOOL allowSendOnBehalfOf;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSendOnBehalfOfMetadata;
/// When <em>true,</em> this user can include supplemental documents.
@property (nonatomic) BOOL allowSupplementalDocuments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSupplementalDocumentsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTagVersionedPlacementEnabled;
/// When <em>true,</em> indicates that this user can send envelope-specific API requests on the account.
@property (nonatomic) BOOL apiAccountWideAccess;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable apiAccountWideAccessMetadata;
/// When <em>true,</em> this user can export authoritative copy for the account.
@property (nonatomic) BOOL apiCanExportAC;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable apiCanExportACMetadata;
/// When <em>true,</em> this user can use the bulk send feature for the account.
@property (nonatomic) BOOL bulkSend;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable bulkSendMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable canChargeAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canChargeAccountMetadata;
/// When true, this user can edit the shared address book for the account.
@property (nonatomic, copy) NSString * _Nullable canEditSharedAddressbook;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canEditSharedAddressbookMetadata;
/// When <em>true,</em> this user can lock envelopes.
@property (nonatomic) BOOL canLockEnvelopes;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canLockEnvelopesMetadata;
/// When <em>true,</em> this user is an administrator for the account.
@property (nonatomic) BOOL canManageAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageAccountMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable canManageDistributor;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageDistributorMetadata;
/// When <em>true,</em> this user can manage templates for the account.
@property (nonatomic) BOOL canManageTemplates;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageTemplatesMetadata;
/// When <em>true,</em> this user can send API requests on the account.
@property (nonatomic) BOOL canSendAPIRequests;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canSendAPIRequestsMetadata;
/// When <em>true,</em> this user can send envelopes on the account.
@property (nonatomic) BOOL canSendEnvelope;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canSendEnvelopeMetadata;
@property (nonatomic, copy) NSString * _Nullable canSendEnvelopesViaSMS;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canSendEnvelopesViaSMSMetadata;
/// When <em>true,</em> this user can sign envelopes.
@property (nonatomic) BOOL canSignEnvelope;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canSignEnvelopeMetadata;
/// When <em>true,</em> this user can use a scratchpad to edit information.
@property (nonatomic) BOOL canUseScratchpad;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canUseScratchpadMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable canUseSmartContracts;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canUseSmartContractsMetadata;
/// When <em>true,</em> this user is prohibited from uploading documents during sending.
@property (nonatomic) BOOL disableDocumentUpload;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableDocumentUploadMetadata;
/// When <em>true,</em> this user can access the <em>Other Actions</em> menu.
@property (nonatomic) BOOL disableOtherActions;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableOtherActionsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable enableDSPro;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableDSProMetadata;
/// When <em>true,</em> the account can define the routing order of recipients for envelopes sent by using the eSignature API.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enableSequentialSigningAPI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSequentialSigningAPIMetadata;
/// When <em>true,</em> the account can define the routing order of recipients for envelopes sent by using the DocuSign application.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enableSequentialSigningUI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSequentialSigningUIMetadata;
/// When <em>true,</em> this user can use the signing attachments feature.
@property (nonatomic) BOOL enableSignerAttachments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSignerAttachmentsMetadata;
/// When <em>true,</em> a user can override the default default account setting for the Sign on Paper option, which specifies whether signers can sign documents on paper as an option to signing electronically.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSignOnPaperOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSignOnPaperOverrideMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable enableTransactionPoint;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableTransactionPointMetadata;
/// When <em>true,</em> Vaulting is enabled for the account.
@property (nonatomic) BOOL enableVaulting;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableVaultingMetadata;
/// When <em>false,</em> this user can apply tabs to documents during the sending experience.
@property (nonatomic, copy) NSString * _Nullable expressSendOnly;
/// The user's locale code. Valid values are: - `zh_CN` - `zh_TW` - `nl` - `en` - `fr` - `de` - `it` - `ja` - `ko` - `pt` - `pt_BR` - `ru` - `es`
@property (nonatomic, copy) NSString * _Nullable locale;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable localeMetadata;
/// When <em>true,</em> this user can create and manage <a href="/docs/click-api/">Clickwraps</a>.
@property (nonatomic) BOOL manageClickwrapsMode;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable manageClickwrapsModeMetadata;
/// The user ID (GUID) of the user who last modified this user record. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable modifiedBy;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable modifiedByMetadata;
/// The date on which this user record was last modified.
@property (nonatomic, copy) NSDate * _Nullable modifiedDate;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable modifiedDateMetadata;
/// Note referencing the page that modified this user record.
@property (nonatomic, copy) NSString * _Nullable modifiedPage;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable modifiedPageMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable newSendUI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable newSendUIMetadata;
/// Indicates the Power Form mode setting for the user: - `none` - `admin` - `user`
@property (nonatomic, copy) NSString * _Nullable powerFormMode;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable powerFormModeMetadata;
/// When <em>true,</em> this user receives notifications when envelopes are viewed.
@property (nonatomic) BOOL recipientViewedNotification;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable recipientViewedNotificationMetadata;
/// Sets how self-signed documents are presented to the email recipients. Valid values are:  - `include_pdf`: A PDF of the completed document is attached to the email. - `include_link`: A secure link to the self-signed documents is included    in the email.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable selfSignedRecipientEmailDocument;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable selfSignedRecipientEmailDocumentMetadata;
/// When <em>true,</em> this user gets supplemental documents when downloading documents.
@property (nonatomic) BOOL supplementalDocumentIncludeInDownload;
/// When <em>true,</em> this user must accept supplemental documents.
@property (nonatomic) BOOL supplementalDocumentsMustAccept;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable supplementalDocumentsMustAcceptMetadata;
/// When <em>true,</em> this user must both view and accept supplemental documents.
@property (nonatomic) BOOL supplementalDocumentsMustRead;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable supplementalDocumentsMustReadMetadata;
/// When <em>true,</em> this user must view supplemental documents.
@property (nonatomic) BOOL supplementalDocumentsMustView;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable supplementalDocumentsMustViewMetadata;
/// When <em>true,</em> a new template is created each time the user sends an envelope.
@property (nonatomic) BOOL templateActiveCreation;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable templateActiveCreationMetadata;
/// When <em>true,</em> the system notifies this user before applying a matching template.
@property (nonatomic) BOOL templateApplyNotify;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable templateApplyNotifyMetadata;
/// When <em>true,</em> the system automatically applies a matching template to a document if only one template matches. If there are multiple matches, it displays a list of matches to select from.
@property (nonatomic) BOOL templateAutoMatching;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable templateAutoMatchingMetadata;
/// Percentage used when matching templates.
@property (nonatomic, copy) NSString * _Nullable templateMatchingSensitivity;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable templateMatchingSensitivityMetadata;
/// When <em>true,</em> users see template matching functionality.
@property (nonatomic) BOOL templatePageLevelMatching;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable templatePageLevelMatchingMetadata;
/// When true, daylight savings time is in effect for this user's time zone.
@property (nonatomic, copy) NSString * _Nullable timezoneDST;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneDSTMetadata;
/// The custom DateTime format setting for this user.
@property (nonatomic, copy) NSString * _Nullable timezoneMask;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneMaskMetadata;
/// The timezone offset for the user. Valid values: - `tz_01_afghanistan` - `tz_02_alaskan` - `tz_03_arab` - `tz_04_arabian` - `tz_05_arabic` - `tz_06_argentina` - `tz_07_atlantic` - `tz_08_aus_central` - `tz_09_aus_eastern` - `tz_10_azerbaijan` - `tz_11_azores` - `tz_12_bangladesh` - `tz_13_canada_central` - `tz_14_cape_verde` - `tz_15_caucasus` - `tz_16_central_australia` - `tz_17_central_america` - `tz_18_central_asia` - `tz_19_central_brazilian` - `tz_20_central_europe` - `tz_21_central_european` - `tz_22_central_pacific` - `tz_23_central` - `tz_24_central_mexico` - `tz_25_china` - `tz_26_dateline` - `tz_27_east_africa` - `tz_28_east_australia` - `tz_29_east_europe` - `tz_30_east_south_america` - `tz_31_eastern` - `tz_32_egypt` - `tz_33_ekaterinburg` - `tz_34_fiji` - `tz_35_fli` - `tz_36_georgian` - `tz_37_gmt` - `tz_38_greenland` - `tz_39_greenwich` - `tz_40_gtb` - `tz_41_hawaiian` - `tz_42_india` - `tz_43_iran` - `tz_44_israel` - `tz_45_jordan` - `tz_46_kaliningrad` - `tz_47_kamchatka` - `tz_48_korea` - `tz_49_magadan` - `tz_50_mauritius` - `tz_51_mid_atlantic` - `tz_52_middle_east` - `tz_53_montevideo` - `tz_54_morocco` - `tz_55_mountain` - `tz_56_mountain_mexico` - `tz_57_myanmar` - `tz_58_north_central_asia` - `tz_59_namibia` - `tz_60_nepal` - `tz_61_new_zealand` - `tz_62_new_foundland` - `tz_63_north_asia_east` - `tz_64_north_asia` - `tz_65_pacific_sa` - `tz_66_pacific` - `tz_67_pacific_mexico` - `tz_68_pakistan` - `tz_69_paraguay` - `tz_70_romance` - `tz_71_russian` - `tz_72_sa_eastern` - `tz_73_sa_pacific` - `tz_74_sa_western` - `tz_75_samoa` - `tz_76_se_asia` - `tz_77_singapore` - `tz_78_south_africa` - `tz_79_sriLanka` - `tz_80_syria` - `tz_81_taipei` - `tz_82_tasmania` - `tz_83_tokyo` - `tz_84_tonga` - `tz_85_turkey` - `tz_86_ulaanbaatar` - `tz_87_us_eastern` - `tz_88_us_mountain` - `tz_89_venezuela` - `tz_90_vladivostok` - `tz_91_west_australia` - `tz_92_west_central_africa` - `tz_93_west_europe` - `tz_94_west_asia` - `tz_95_west_pacific` - `tz_96_yakutsk`
@property (nonatomic, copy) NSString * _Nullable timezoneOffset;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneOffsetMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable timezoneSendingPref;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneSendingPrefMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable timezoneSigningPref;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneSigningPrefMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable transactionPointSiteNameURL;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable transactionPointSiteNameURLMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable transactionPointUserName;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable transactionPointUserNameMetadata;
/// Indicates the specified Vaulting mode: - `none` - `estored` - `electronic_original`
@property (nonatomic, copy) NSString * _Nullable vaultingMode;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable vaultingModeMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI18DSAPIUserSignature")
@interface DSAPIUserSignature : NSObject
/// The date and time the user adopted their signature.
@property (nonatomic, copy) NSDate * _Nullable adoptedDateTime;
/// The UTC DateTime when the item was created.
@property (nonatomic, copy) NSDate * _Nullable createdDateTime;
@property (nonatomic, copy) NSString * _Nullable customField;
@property (nonatomic, strong) DSAPIDateStampProperties * _Nullable dateStampProperties;
/// When <em>true,</em> users may not resize the stamp.
@property (nonatomic) BOOL disallowUserResizeStamp;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Optionally specify an external identifier for the user's signature.
@property (nonatomic, copy) NSString * _Nullable externalID;
/// A Base64-encoded representation of the signature image.
@property (nonatomic, copy) NSString * _Nullable imageBase64;
/// Specificies the type of image. Valid values are:  - `signature_image` - `initials_image`
@property (nonatomic, copy) NSString * _Nullable imageType;
/// The ID of the user's initials image.
@property (nonatomic, copy) NSString * _Nullable initials150ImageId;
/// The URI for retrieving the image of the user's initials.
@property (nonatomic, copy) NSURL * _Nullable initialsImageUri;
/// Boolean that specifies whether the signature is the default signature for the user.
@property (nonatomic, copy) NSString * _Nullable isDefault;
/// The date and time that the item was last modified.
@property (nonatomic, copy) NSDate * _Nullable lastModifiedDateTime;
/// The National Association of Realtors (NAR) membership ID for a user who is a realtor.
@property (nonatomic, copy) NSString * _Nullable nrdsId;
/// The realtor's last name.
@property (nonatomic, copy) NSString * _Nullable nrdsLastName;
/// The realtor's NAR membership status. The value `active` verifies that the user is a current NAR member. Valid values are:  - `Active` - `Inactive` - `Terminate` - `Provisional` - `Deceased` - `Suspend` - `Unknown`
@property (nonatomic, copy) NSString * _Nullable nrdsStatus;
/// The phonetic spelling of the `signatureName`.
@property (nonatomic, copy) NSString * _Nullable phoneticName;
/// The ID of the user's signature image.
@property (nonatomic, copy) NSString * _Nullable signature150ImageId;
/// The font type for the signature, if the signature is not drawn. The supported font types are:  &quot;7_DocuSign&quot;, &quot;1_DocuSign&quot;, &quot;6_DocuSign&quot;, &quot;8_DocuSign&quot;, &quot;3_DocuSign&quot;, &quot;Mistral&quot;, &quot;4_DocuSign&quot;, &quot;2_DocuSign&quot;, &quot;5_DocuSign&quot;, &quot;Rage Italic&quot;
@property (nonatomic, copy) NSString * _Nullable signatureFont;
/// Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as &quot;&&quot;, &quot;<&quot;, &quot;>&quot;) in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.
@property (nonatomic, copy) NSString * _Nullable signatureId;
/// An endpoint URI that you can use to retrieve the user's signature image.
@property (nonatomic, copy) NSURL * _Nullable signatureImageUri;
/// The initials associated with the signature.
@property (nonatomic, copy) NSString * _Nullable signatureInitials;
/// Specifies the user's signature name.
@property (nonatomic, copy) NSString * _Nullable signatureName;
/// The rights that the user has to the signature. Valid values are:  - `none` - `read` - `admin`
@property (nonatomic, copy) NSString * _Nullable signatureRights;
/// Specifies the type of signature.
@property (nonatomic, copy) NSString * _Nullable signatureType;
/// The format of a stamp. Valid values are:  - `NameHanko`: The stamp represents only the signer's name. - `NameDateHanko`: The stamp represents the signer's name and the date.
@property (nonatomic, copy) NSString * _Nullable stampFormat;
/// The URI for retrieving the image of the user's stamp.
@property (nonatomic, copy) NSURL * _Nullable stampImageUri;
/// The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.
@property (nonatomic, copy) NSString * _Nullable stampSizeMM;
/// The type of stamp. Valid values are:  - `signature`: A signature image. This is the default value. - `stamp`: A stamp image. - null
@property (nonatomic, copy) NSString * _Nullable stampType;
/// Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.
@property (nonatomic, copy) NSString * _Nullable status;
- (nonnull instancetype)initWithAdoptedDateTime:(NSDate * _Nullable)adoptedDateTime createdDateTime:(NSDate * _Nullable)createdDateTime customField:(NSString * _Nullable)customField dateStampProperties:(DSAPIDateStampProperties * _Nullable)dateStampProperties disallowUserResizeStamp:(BOOL)disallowUserResizeStamp errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails externalID:(NSString * _Nullable)externalID imageBase64:(NSString * _Nullable)imageBase64 imageType:(NSString * _Nullable)imageType initials150ImageId:(NSString * _Nullable)initials150ImageId initialsImageUri:(NSURL * _Nullable)initialsImageUri isDefault:(NSString * _Nullable)isDefault lastModifiedDateTime:(NSDate * _Nullable)lastModifiedDateTime nrdsId:(NSString * _Nullable)nrdsId nrdsLastName:(NSString * _Nullable)nrdsLastName nrdsStatus:(NSString * _Nullable)nrdsStatus phoneticName:(NSString * _Nullable)phoneticName signature150ImageId:(NSString * _Nullable)signature150ImageId signatureFont:(NSString * _Nullable)signatureFont signatureId:(NSString * _Nullable)signatureId signatureImageUri:(NSURL * _Nullable)signatureImageUri signatureInitials:(NSString * _Nullable)signatureInitials signatureName:(NSString * _Nullable)signatureName signatureRights:(NSString * _Nullable)signatureRights signatureType:(NSString * _Nullable)signatureType stampFormat:(NSString * _Nullable)stampFormat stampImageUri:(NSURL * _Nullable)stampImageUri stampSizeMM:(NSString * _Nullable)stampSizeMM stampType:(NSString * _Nullable)stampType status:(NSString * _Nullable)status OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI28DSAPIUserSignatureDefinition")
@interface DSAPIUserSignatureDefinition : NSObject
@property (nonatomic, strong) DSAPIDateStampProperties * _Nullable dateStampProperties;
/// When <em>true,</em> users may not resize the stamp.
@property (nonatomic) BOOL disallowUserResizeStamp;
/// Optionally specify an external identifier for the user's signature.
@property (nonatomic, copy) NSString * _Nullable externalID;
/// Specificies the type of image. Valid values are:  - `signature_image` - `initials_image`
@property (nonatomic, copy) NSString * _Nullable imageType;
/// Boolean that specifies whether the signature is the default signature for the user.
@property (nonatomic, copy) NSString * _Nullable isDefault;
/// The National Association of Realtors (NAR) membership ID for a user who is a realtor.
@property (nonatomic, copy) NSString * _Nullable nrdsId;
/// The realtor's last name.
@property (nonatomic, copy) NSString * _Nullable nrdsLastName;
/// The phonetic spelling of the `signatureName`.
@property (nonatomic, copy) NSString * _Nullable phoneticName;
/// The font type to use for the signature if the signature is not drawn. The following font styles  are supported. The quotes are to indicate that these values are strings, not `enums`.  - `&quot;1_DocuSign&quot;` - `&quot;2_DocuSign&quot;` - `&quot;3_DocuSign&quot;` - `&quot;4_DocuSign&quot;` - `&quot;5_DocuSign&quot;` - `&quot;6_DocuSign&quot;` - `&quot;7_DocuSign&quot;` - `&quot;8_DocuSign&quot;` - `&quot;Mistral&quot;` - `&quot;Rage Italic&quot;`
@property (nonatomic, copy) NSString * _Nullable signatureFont;
/// Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as &quot;&&quot;, &quot;<&quot;, &quot;>&quot;) in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.
@property (nonatomic, copy) NSString * _Nullable signatureId;
/// Specifies the user's signature in initials format.
@property (nonatomic, copy) NSString * _Nullable signatureInitials;
/// Specifies the user's signature name.
@property (nonatomic, copy) NSString * _Nullable signatureName;
/// Specifies the type of signature.
@property (nonatomic, copy) NSString * _Nullable signatureType;
/// The format of a stamp. Valid values are:  - `NameHanko`: The stamp represents only the signer's name. - `NameDateHanko`: The stamp represents the signer's name and the date.
@property (nonatomic, copy) NSString * _Nullable stampFormat;
/// The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.
@property (nonatomic, copy) NSString * _Nullable stampSizeMM;
- (nonnull instancetype)initWithDateStampProperties:(DSAPIDateStampProperties * _Nullable)dateStampProperties disallowUserResizeStamp:(BOOL)disallowUserResizeStamp externalID:(NSString * _Nullable)externalID imageType:(NSString * _Nullable)imageType isDefault:(NSString * _Nullable)isDefault nrdsId:(NSString * _Nullable)nrdsId nrdsLastName:(NSString * _Nullable)nrdsLastName phoneticName:(NSString * _Nullable)phoneticName signatureFont:(NSString * _Nullable)signatureFont signatureId:(NSString * _Nullable)signatureId signatureInitials:(NSString * _Nullable)signatureInitials signatureName:(NSString * _Nullable)signatureName signatureType:(NSString * _Nullable)signatureType stampFormat:(NSString * _Nullable)stampFormat stampSizeMM:(NSString * _Nullable)stampSizeMM OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI30DSAPIUserSignaturesInformation")
@interface DSAPIUserSignaturesInformation : NSObject
/// An array of  `userSignature` objects.
@property (nonatomic, copy) NSArray<DSAPIUserSignature *> * _Nullable userSignatures;
- (nonnull instancetype)initWithUserSignatures:(NSArray<DSAPIUserSignature *> * _Nullable)userSignatures OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI12DSAPIViewUrl")
@interface DSAPIViewUrl : NSObject
/// URL to the Review ID page.
@property (nonatomic, copy) NSURL * _Nullable url;
- (nonnull instancetype)initWithUrl:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A complex type containing information about a witness recipient. Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
SWIFT_CLASS("_TtC11DocuSignAPI12DSAPIWitness")
@interface DSAPIWitness : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditEmail;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditName;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSURL * _Nullable bulkRecipientsUri;
/// When <em>true,</em> specifies that the signer can perform the signing ceremony offline.
@property (nonatomic) BOOL canSignOffline;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// The reason why the recipient was created (for example, `sender`). This property is read-only.
@property (nonatomic, copy) NSString * _Nullable creationReason;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// When <em>true,</em> this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.
@property (nonatomic) BOOL defaultRecipient;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name. Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable isBulkRecipient;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable isBulkRecipientMetadata;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
@property (nonatomic, copy) NSString * _Nullable notaryId;
@property (nonatomic, copy) NSString * _Nullable notarySignerEmailSent;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
@property (nonatomic, strong) DSAPIOfflineAttributes * _Nullable offlineAttributes;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// When <em>true,</em> specifies that the recipient creates the tabs.
@property (nonatomic) BOOL recipientSuppliesTabs;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.  This parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates.   Set this parameter to `safe` to use a SAFE-BioPharma certificate.  The signer must be enrolled in the SAFE program to sign with a SAFE certificate.
@property (nonatomic, copy) NSString * _Nullable requireSignerCertificate;
/// When <em>true,</em> the signer must print, sign, and upload or fax the signed documents to DocuSign.
@property (nonatomic) BOOL requireSignOnPaper;
/// When <em>true,</em> the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.
@property (nonatomic) BOOL requireUploadSignature;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
@property (nonatomic, strong) DSAPIRecipientSignatureInformation * _Nullable signatureInfo;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// When <em>true</em> and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).
@property (nonatomic) BOOL signInEachLocation;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signInEachLocationMetadata;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
/// The `recipientId` of the person or party for whom the recipient is a witness.
@property (nonatomic, copy) NSString * _Nullable witnessFor;
/// Not used. Use the `witnessFor` property instead.
@property (nonatomic, copy) NSString * _Nullable witnessForGuid;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A tab that allows the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits in the ZIP+4 format. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.
SWIFT_CLASS("_TtC11DocuSignAPI8DSAPIZip")
@interface DSAPIZip : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// When <em>true,</em> ZIP+4 format is used.
@property (nonatomic) BOOL useDash4;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable useDash4Metadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI11DSClientAPI")
@interface DSClientAPI : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull basePath;)
+ (NSString * _Nonnull)basePath SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull customHeaders;)
+ (NSDictionary<NSString *, NSString *> * _Nonnull)customHeaders SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBasePath:(NSString * _Nonnull)basePath customHeaders:(NSDictionary<NSString *, NSString *> * _Nonnull)customHeaders;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIImage;

SWIFT_CLASS("_TtC11DocuSignAPI12EnvelopesAPI")
@interface EnvelopesAPI : NSObject
/// Gets a PDF transcript of all of the comments in an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param encoding (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)commentsGetCommentsTranscriptWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId encoding:(NSString * _Nullable)encoding completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Gets the default Electronic Record and Signature Disclosure for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param langCode (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)consumerDisclosureGetConsumerDisclosureEnvelopeIdRecipientIdWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId langCode:(NSString * _Nullable)langCode completion:(void (^ _Nonnull)(DSAPIConsumerDisclosure * _Nullable, NSError * _Nullable))completion;
/// Gets the Electronic Record and Signature Disclosure for a specific envelope recipient.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param langCode (path) The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to ï¿½browserï¿½ to automatically detect the browser language being used by the viewer and display the disclosure in that language.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param langCode (query) The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to ï¿½browserï¿½ to automatically detect the browser language being used by the viewer and display the disclosure in that language. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)consumerDisclosureGetConsumerDisclosureEnvelopeIdRecipientIdLangCodeWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId langCode:(NSString * _Nonnull)langCode recipientId:(NSString * _Nonnull)recipientId completion:(void (^ _Nonnull)(DSAPIConsumerDisclosure * _Nullable, NSError * _Nullable))completion;
/// Deletes envelope custom fields for draft and in-process envelopes.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)customFieldsDeleteCustomFieldsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPICustomFields * _Nullable)body completion:(void (^ _Nonnull)(DSAPICustomFields * _Nullable, NSError * _Nullable))completion;
/// Creates envelope custom fields for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)customFieldsPostCustomFieldsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPICustomFields * _Nullable)body completion:(void (^ _Nonnull)(DSAPICustomFields * _Nullable, NSError * _Nullable))completion;
/// Updates envelope custom fields in an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)customFieldsPutCustomFieldsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPICustomFields * _Nullable)body completion:(void (^ _Nonnull)(DSAPICustomFields * _Nullable, NSError * _Nullable))completion;
/// Deletes documents from a draft envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsDeleteDocumentsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIEnvelopeDefinition * _Nullable)body completion:(void (^ _Nonnull)(DSAPIEnvelopeDocumentsResult * _Nullable, NSError * _Nullable))completion;
/// Gets a document from an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param certificate (query) When set to <em>false</em>, the envelope signing certificate is removed from the download. (optional)
///
/// \param documentsByUserid (query)  (optional)
///
/// \param encoding (query)  (optional)
///
/// \param encrypt (query) When set to <em>true</em>, the PDF bytes returned in the response are encrypted for all the key managers configured on your DocuSign account. The documents can be decrypted with the KeyManager Decrypt Document API. (optional)
///
/// \param language (query) Specifies the language for the Certificate of Completion in the response. The supported languages, with the language value shown in parenthesis, are: Chinese Simplified (zh_CN), , Chinese Traditional (zh_TW), Dutch (nl), English US (en), French (fr), German (de), Italian (it), Japanese (ja), Korean (ko), Portuguese (pt), Portuguese (Brazil) (pt_BR), Russian (ru), Spanish (es).  (optional)
///
/// \param recipientId (query)  (optional)
///
/// \param sharedUserId (query)  (optional)
///
/// \param showChanges (query) When set to <em>true</em>, any changed fields for the returned PDF are highlighted in yellow and optional signatures or initials outlined in red.  (optional)
///
/// \param watermark (query) When set to <em>true</em>, the account has the watermark feature enabled, and the envelope is not complete, the watermark for the account is added to the PDF documents. This option can remove the watermark.  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsGetDocumentWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId certificate:(NSString * _Nullable)certificate documentsByUserid:(NSString * _Nullable)documentsByUserid encoding:(NSString * _Nullable)encoding encrypt:(NSString * _Nullable)encrypt language:(NSString * _Nullable)language recipientId:(NSString * _Nullable)recipientId sharedUserId:(NSString * _Nullable)sharedUserId showChanges:(NSString * _Nullable)showChanges watermark:(NSString * _Nullable)watermark completion:(void (^ _Nonnull)(NSURL * _Nullable, NSError * _Nullable))completion;
/// Gets a list of documents in an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param documentsByUserid (query)  (optional)
///
/// \param includeDocumentSize (query)  (optional)
///
/// \param includeMetadata (query)  (optional)
///
/// \param includeTabs (query)  (optional)
///
/// \param recipientId (query)  (optional)
///
/// \param sharedUserId (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsGetDocumentsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId documentsByUserid:(NSString * _Nullable)documentsByUserid includeDocumentSize:(NSString * _Nullable)includeDocumentSize includeMetadata:(NSString * _Nullable)includeMetadata includeTabs:(NSString * _Nullable)includeTabs recipientId:(NSString * _Nullable)recipientId sharedUserId:(NSString * _Nullable)sharedUserId completion:(void (^ _Nonnull)(DSAPIEnvelopeDocumentsResult * _Nullable, NSError * _Nullable))completion;
/// Adds or replaces a document in an existing envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsPutDocumentWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId completion:(void (^ _Nonnull)(DSAPIEnvelopeDocument * _Nullable, NSError * _Nullable))completion;
/// Adds one or more documents to an existing envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsPutDocumentsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIEnvelopeDefinition * _Nullable)body completion:(void (^ _Nonnull)(DSAPIEnvelopeDocumentsResult * _Nullable, NSError * _Nullable))completion;
/// Deletes the email setting overrides for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)emailSettingsDeleteEmailSettingsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId completion:(void (^ _Nonnull)(DSAPIEmailSettings * _Nullable, NSError * _Nullable))completion;
/// Gets the email setting overrides for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)emailSettingsGetEmailSettingsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId completion:(void (^ _Nonnull)(DSAPIEmailSettings * _Nullable, NSError * _Nullable))completion;
/// Adds email setting overrides to an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)emailSettingsPostEmailSettingsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIEmailSettings * _Nullable)body completion:(void (^ _Nonnull)(DSAPIEmailSettings * _Nullable, NSError * _Nullable))completion;
/// Updates the email setting overrides for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)emailSettingsPutEmailSettingsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIEmailSettings * _Nullable)body completion:(void (^ _Nonnull)(DSAPIEmailSettings * _Nullable, NSError * _Nullable))completion;
/// Gets the status of a single envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param advancedUpdate (query) When true, envelope information can be added or modified. (optional)
///
/// \param include (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)envelopesGetEnvelopeWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId advancedUpdate:(NSString * _Nullable)advancedUpdate include:(NSString * _Nullable)include completion:(void (^ _Nonnull)(DSAPIEnvelope * _Nullable, NSError * _Nullable))completion;
/// Creates an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param body (body)  (optional)
///
/// \param cdseMode (query)  (optional)
///
/// \param changeRoutingOrder (query)  (optional)
///
/// \param completedDocumentsOnly (query) If set to true then we want to set the sourceEnvelopeId to indicate that this is a&quot;forward&quot; envelope action (optional)
///
/// \param mergeRolesOnDraft (query) When set to <em>true</em>, merges template roles and remove empty recipients when you create an envelope with multiple templates. (optional)
///
/// \param tabLabelExactMatches (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)envelopesPostEnvelopesWithAccountId:(NSString * _Nonnull)accountId body:(DSAPIEnvelopeDefinition * _Nullable)body cdseMode:(NSString * _Nullable)cdseMode changeRoutingOrder:(NSString * _Nullable)changeRoutingOrder completedDocumentsOnly:(NSString * _Nullable)completedDocumentsOnly mergeRolesOnDraft:(NSString * _Nullable)mergeRolesOnDraft tabLabelExactMatches:(NSString * _Nullable)tabLabelExactMatches completion:(void (^ _Nonnull)(DSAPIEnvelopeSummary * _Nullable, NSError * _Nullable))completion;
/// Deletes an envelope lock.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)lockDeleteEnvelopeLockWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId lockToken:(NSString * _Nonnull)lockToken completion:(void (^ _Nonnull)(DSAPILockInformation * _Nullable, NSError * _Nullable))completion;
/// Gets envelope lock information.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)lockGetEnvelopeLockWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId completion:(void (^ _Nonnull)(DSAPILockInformation * _Nullable, NSError * _Nullable))completion;
/// Gets envelope notification information.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)notificationGetEnvelopesEnvelopeIdNotificationWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId completion:(void (^ _Nonnull)(DSAPINotification * _Nullable, NSError * _Nullable))completion;
/// Gets a page image from an envelope for display.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param pageNumber (path) The page number being accessed.
///
/// \param dpi (query) Sets the dpi for the image. (optional)
///
/// \param maxHeight (query) Sets the maximum height for the page image in pixels. The dpi is recalculated based on this setting. (optional)
///
/// \param maxWidth (query) Sets the maximum width for the page image in pixels. The dpi is recalculated based on this setting. (optional)
///
/// \param showChanges (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)pagesGetPageImageWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId pageNumber:(NSString * _Nonnull)pageNumber dpi:(NSString * _Nullable)dpi maxHeight:(NSString * _Nullable)maxHeight maxWidth:(NSString * _Nullable)maxWidth showChanges:(NSString * _Nullable)showChanges completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Deletes a recipient from an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsDeleteRecipientWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId completion:(void (^ _Nonnull)(DSAPIRecipients * _Nullable, NSError * _Nullable))completion;
/// Deletes the tabs associated with a recipient.  <em>Note:</em> It is an error to delete a tab that has the <code>templateLocked</code> property set to true. This property corresponds to the <em>Restrict changes</em> option in the web app.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsDeleteRecipientTabsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId body:(DSAPITabs * _Nullable)body completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Deletes recipients from an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsDeleteRecipientsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIRecipients * _Nullable)body completion:(void (^ _Nonnull)(DSAPIRecipients * _Nullable, NSError * _Nullable))completion;
/// Gets the initials image for a user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param includeChrome (query) The added line and identifier around the initial image. Note: Older envelopes might only have chromed images. If getting the non-chromed image fails, try getting the chromed image. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetRecipientInitialsImageWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId includeChrome:(NSString * _Nullable)includeChrome completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Gets signature information for a signer or sign-in-person recipient.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetRecipientSignatureWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId completion:(void (^ _Nonnull)(DSAPIUserSignature * _Nullable, NSError * _Nullable))completion;
/// Retrieve signature image information for a signer/sign-in-person recipient.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param includeChrome (query) When set to <em>true</em>, indicates the chromed version of the signature image should be retrieved. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetRecipientSignatureImageWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId includeChrome:(NSString * _Nullable)includeChrome completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Gets the tabs information for a signer or sign-in-person recipient in an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param includeAnchorTabLocations (query) When set to <em>true</em>, all tabs with anchor tab properties are included in the response.  (optional)
///
/// \param includeMetadata (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetRecipientTabsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId includeAnchorTabLocations:(NSString * _Nullable)includeAnchorTabLocations includeMetadata:(NSString * _Nullable)includeMetadata completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Gets the status of recipients for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param includeAnchorTabLocations (query)  When set to <em>true</em> and `include_tabs` is set to <em>true</em>, all tabs with anchor tab properties are included in the response.  (optional)
///
/// \param includeExtended (query)  When set to <em>true</em>, the extended properties are included in the response.  (optional)
///
/// \param includeMetadata (query)  (optional)
///
/// \param includeTabs (query) When set to <em>true</em>, the tab information associated with the recipient is included in the response. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetRecipientsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId includeAnchorTabLocations:(NSString * _Nullable)includeAnchorTabLocations includeExtended:(NSString * _Nullable)includeExtended includeMetadata:(NSString * _Nullable)includeMetadata includeTabs:(NSString * _Nullable)includeTabs completion:(void (^ _Nonnull)(DSAPIRecipients * _Nullable, NSError * _Nullable))completion;
/// Adds tabs for a recipient.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPostRecipientTabsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId body:(DSAPITabs * _Nullable)body completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Adds one or more recipients to an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param resendEnvelope (query) When set to <em>true</em>, resends the   envelope if the new recipient's routing order is before or the same as the envelope's next recipient. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPostRecipientsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIRecipients * _Nullable)body resendEnvelope:(NSString * _Nullable)resendEnvelope completion:(void (^ _Nonnull)(DSAPIRecipients * _Nullable, NSError * _Nullable))completion;
/// Sets the initials image for an accountless signer.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPutRecipientInitialsImageWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId image:(UIImage * _Nonnull)image completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
/// Sets the signature image for an accountless signer.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPutRecipientSignatureImageWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId image:(UIImage * _Nonnull)image completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
/// Updates the tabs for a recipient.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPutRecipientTabsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId body:(DSAPITabs * _Nullable)body completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Updates recipients in a draft envelope or corrects recipient information for an in-process envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param combineSameOrderRecipients (query)  (optional)
///
/// \param offlineSigning (query)  (optional)
///
/// \param resendEnvelope (query) When set to <em>true</em>, resends the   envelope if the new recipient's routing order is before or the same as the envelope's next recipient. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPutRecipientsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIRecipients * _Nullable)body combineSameOrderRecipients:(NSString * _Nullable)combineSameOrderRecipients offlineSigning:(NSString * _Nullable)offlineSigning resendEnvelope:(NSString * _Nullable)resendEnvelope completion:(void (^ _Nonnull)(DSAPIRecipientsUpdateSummary * _Nullable, NSError * _Nullable))completion;
/// Deletes tabs from a document in an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsDeleteDocumentTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPITabs * _Nullable)body completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Returns the tabs on a document.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param includeMetadata (query)  (optional)
///
/// \param pageNumbers (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsGetDocumentTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId includeMetadata:(NSString * _Nullable)includeMetadata pageNumbers:(NSString * _Nullable)pageNumbers completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Returns tabs on the specified page.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param pageNumber (path) The page number being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsGetPageTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId pageNumber:(NSString * _Nonnull)pageNumber completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Adds tabs to a document in an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsPostDocumentTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPITabs * _Nullable)body completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Updates the tabs for document.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsPutDocumentTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPITabs * _Nullable)body completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Returns a URL to the shared recipient view UI for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)viewsPostEnvelopeRecipientSharedViewWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIRecipientViewRequest * _Nullable)body completion:(void (^ _Nonnull)(DSAPIViewUrl * _Nullable, NSError * _Nullable))completion;
/// Returns a URL to the recipient view UI.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)viewsPostEnvelopeRecipientViewWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIRecipientViewRequest * _Nullable)body completion:(void (^ _Nonnull)(DSAPIViewUrl * _Nullable, NSError * _Nullable))completion;
/// Create the link to the page for manually reviewing IDs.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)viewsPostRecipientManualReviewViewWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId completion:(void (^ _Nonnull)(DSAPIViewUrl * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface EnvelopesAPI (SWIFT_EXTENSION(DocuSignAPI))
/// Updates recipients in a draft envelope or corrects recipient information for an in-process envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param multiParts (multiParts) (optional)
///
/// \param combineSameOrderRecipients (query)  (optional)
///
/// \param offlineSigning (query)  (optional)
///
/// \param resendEnvelope (query) When set to <em>true</em>, resends the   envelope if the new recipient's routing order is before or the same as the envelope's next recipient. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPutRecipientsOfflineWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIRecipients * _Nullable)body multiParts:(NSDictionary<NSString *, NSArray *> * _Nullable)multiParts combineSameOrderRecipients:(NSString * _Nullable)combineSameOrderRecipients offlineSigning:(NSString * _Nullable)offlineSigning resendEnvelope:(NSString * _Nullable)resendEnvelope completion:(void (^ _Nonnull)(DSAPIRecipientsUpdateSummary * _Nullable, NSError * _Nullable))completion;
/// Creates an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param body (body)  (optional)
///
/// \param multiParts (multiParts) (optional)
///
/// \param cdseMode (query)  (optional)
///
/// \param changeRoutingOrder (query)  (optional)
///
/// \param completedDocumentsOnly (query) If set to true then we want to set the sourceEnvelopeId to indicate that this is a&quot;forward&quot; envelope action (optional)
///
/// \param mergeRolesOnDraft (query) When set to <em>true</em>, merges template roles and remove empty recipients when you create an envelope with multiple templates. (optional)
///
/// \param tabLabelExactMatches (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)envelopesPostEnvelopesOfflineWithAccountId:(NSString * _Nonnull)accountId body:(DSAPIEnvelopeDefinition * _Nullable)body multiParts:(NSDictionary<NSString *, NSArray *> * _Nullable)multiParts cdseMode:(NSString * _Nullable)cdseMode changeRoutingOrder:(NSString * _Nullable)changeRoutingOrder completedDocumentsOnly:(NSString * _Nullable)completedDocumentsOnly mergeRolesOnDraft:(NSString * _Nullable)mergeRolesOnDraft tabLabelExactMatches:(NSString * _Nullable)tabLabelExactMatches completion:(void (^ _Nonnull)(DSAPIEnvelopeSummary * _Nullable, NSError * _Nullable))completion;
@end


SWIFT_CLASS("_TtC11DocuSignAPI10FoldersAPI")
@interface FoldersAPI : NSObject
/// Gets a list of the folders for the account.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param include (query)  (optional)
///
/// \param includeItems (query)  (optional)
///
/// \param startPosition (query)  (optional)
///
/// \param template (query) Specifies the items that are returned. Valid values are:   * include - The folder list will return normal folders plus template folders.  * only - Only the list of template folders are returned. (optional)
///
/// \param userFilter (query)  (optional)
///
/// \param subFolderDepth (query) (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)foldersGetFoldersWithAccountId:(NSString * _Nonnull)accountId include:(NSString * _Nullable)include includeItems:(NSString * _Nullable)includeItems startPosition:(NSString * _Nullable)startPosition template:(NSString * _Nullable)template_ userFilter:(NSString * _Nullable)userFilter subFolderDepth:(NSString * _Nullable)subFolderDepth completion:(void (^ _Nonnull)(DSAPIFoldersResponse * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DocuSignAPI12TelemetryAPI")
@interface TelemetryAPI : NSObject
/// Initiate a new chunked upload.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)createWithEvents:(DSAPITelemetryEvents * _Nullable)events baseURL:(NSString * _Nullable)baseURL completion:(void (^ _Nonnull)(DSAPITelemetryEventsResponse * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DocuSignAPI12TemplatesAPI")
@interface TemplatesAPI : NSObject
/// Gets the custom document fields from a template.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)customFieldsGetTemplateCustomFieldsWithAccountId:(NSString * _Nonnull)accountId templateId:(NSString * _Nonnull)templateId completion:(void (^ _Nonnull)(DSAPICustomFields * _Nullable, NSError * _Nullable))completion;
/// Gets PDF documents from a template.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param encrypt (query)  (optional)
///
/// \param showChanges (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsGetTemplateDocumentWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId templateId:(NSString * _Nonnull)templateId encrypt:(NSString * _Nullable)encrypt showChanges:(NSString * _Nullable)showChanges completion:(void (^ _Nonnull)(NSURL * _Nullable, NSError * _Nullable))completion;
/// Updates a template document.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param body (body)  (optional)
///
/// \param isEnvelopeDefinition (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsPutTemplateDocumentWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId templateId:(NSString * _Nonnull)templateId body:(DSAPIEnvelopeDefinition * _Nullable)body isEnvelopeDefinition:(NSString * _Nullable)isEnvelopeDefinition completion:(void (^ _Nonnull)(DSAPIEnvelopeDocument * _Nullable, NSError * _Nullable))completion;
/// Gets template lock information.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)lockGetTemplateLockWithAccountId:(NSString * _Nonnull)accountId templateId:(NSString * _Nonnull)templateId completion:(void (^ _Nonnull)(DSAPILockInformation * _Nullable, NSError * _Nullable))completion;
/// Gets template notification information.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)notificationGetTemplatesTemplateIdNotificationWithAccountId:(NSString * _Nonnull)accountId templateId:(NSString * _Nonnull)templateId completion:(void (^ _Nonnull)(DSAPINotification * _Nullable, NSError * _Nullable))completion;
/// Gets a page image from a template for display.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param pageNumber (path) The page number being accessed.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param dpi (query)  (optional)
///
/// \param maxHeight (query)  (optional)
///
/// \param maxWidth (query)  (optional)
///
/// \param showChanges (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)pagesGetTemplatePageImageWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId pageNumber:(NSString * _Nonnull)pageNumber templateId:(NSString * _Nonnull)templateId dpi:(NSString * _Nullable)dpi maxHeight:(NSString * _Nullable)maxHeight maxWidth:(NSString * _Nullable)maxWidth showChanges:(NSString * _Nullable)showChanges completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Gets the tabs information for a signer or sign-in-person recipient in a template.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param includeAnchorTabLocations (query) When set to <em>true</em>, all tabs with anchor tab properties are included in the response.  (optional)
///
/// \param includeMetadata (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetTemplateRecipientTabsWithAccountId:(NSString * _Nonnull)accountId recipientId:(NSString * _Nonnull)recipientId templateId:(NSString * _Nonnull)templateId includeAnchorTabLocations:(NSString * _Nullable)includeAnchorTabLocations includeMetadata:(NSString * _Nullable)includeMetadata completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Gets recipient information from a template.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param includeAnchorTabLocations (query)  When set to <em>true</em> and `include_tabs` is set to <em>true</em>, all tabs with anchor tab properties are included in the response.  (optional)
///
/// \param includeExtended (query)  When set to <em>true</em>, the extended properties are included in the response.  (optional)
///
/// \param includeTabs (query) When set to <em>true</em>, the tab information associated with the recipient is included in the response. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetTemplateRecipientsWithAccountId:(NSString * _Nonnull)accountId templateId:(NSString * _Nonnull)templateId includeAnchorTabLocations:(NSString * _Nullable)includeAnchorTabLocations includeExtended:(NSString * _Nullable)includeExtended includeTabs:(NSString * _Nullable)includeTabs completion:(void (^ _Nonnull)(DSAPIRecipients * _Nullable, NSError * _Nullable))completion;
/// Returns tabs on a template.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param pageNumbers (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsGetTemplateDocumentTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId templateId:(NSString * _Nonnull)templateId pageNumbers:(NSString * _Nullable)pageNumbers completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Returns tabs on the specified page.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param pageNumber (path) The page number being accessed.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsGetTemplatePageTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId pageNumber:(NSString * _Nonnull)pageNumber templateId:(NSString * _Nonnull)templateId completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Gets a specific template associated with a specified account.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param include (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)templatesGetTemplateWithAccountId:(NSString * _Nonnull)accountId templateId:(NSString * _Nonnull)templateId include:(NSString * _Nullable)include completion:(void (^ _Nonnull)(DSAPIEnvelopeTemplate * _Nullable, NSError * _Nullable))completion;
/// Gets the list of templates.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param count (query) Number of records to return in the cache. (optional)
///
/// \param createdFromDate (query)  (optional)
///
/// \param createdToDate (query)  (optional)
///
/// \param folderIds (query) A comma separated list of folder ID GUIDs. (optional)
///
/// \param folderTypes (query)  (optional)
///
/// \param fromDate (query) Start of the search date range. Only returns templates created on or after this date/time. If no value is specified, there is no limit on the earliest date created. (optional)
///
/// \param include (query) A comma separated list of additional template attributes to include in the response. Valid values are: recipients, folders, documents, custom_fields, and notifications. (optional)
///
/// \param isDeletedTemplateOnly (query)  (optional)
///
/// \param isDownload (query)  (optional)
///
/// \param modifiedFromDate (query)  (optional)
///
/// \param modifiedToDate (query)  (optional)
///
/// \param order (query) Sets the direction order used to sort the list. Valid values are: -asc = ascending sort order (a to z)  -desc = descending sort order (z to a) (optional)
///
/// \param orderBy (query) Sets the file attribute used to sort the list. Valid values are:  -name: template name  -modified: date/time template was last modified.  -used: date/time the template was last used. (optional)
///
/// \param searchFields (query)  (optional)
///
/// \param searchText (query) The search text used to search the names of templates. (optional)
///
/// \param sharedByMe (query) If true, the response only includes templates shared by the user. If false, the response only returns template not shared by the user. If not specified, the response is not affected. (optional)
///
/// \param startPosition (query) The starting index for the first template shown in the response. This must be greater than or equal to 0 (zero). (optional)
///
/// \param templateIds (query)  (optional)
///
/// \param toDate (query) End of the search date range. Only returns templates created up to this date/time. If no value is provided, this defaults to the current date. (optional)
///
/// \param usedFromDate (query) Start of the search date range. Only returns templates used or edited on or after this date/time. If no value is specified, there is no limit on the earliest date used. (optional)
///
/// \param usedToDate (query) End of the search date range. Only returns templates used or edited up to this date/time. If no value is provided, this defaults to the current date. (optional)
///
/// \param userFilter (query) Sets if the templates shown in the response Valid values are:  -owned_by_me: only shows templates the user owns.  -shared_with_me: only shows templates that are shared with the user.  -all: shows all templates owned or shared with the user. (optional)
///
/// \param userId (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)templatesGetTemplatesWithAccountId:(NSString * _Nonnull)accountId count:(NSString * _Nullable)count createdFromDate:(NSString * _Nullable)createdFromDate createdToDate:(NSString * _Nullable)createdToDate folderIds:(NSString * _Nullable)folderIds folderTypes:(NSString * _Nullable)folderTypes fromDate:(NSString * _Nullable)fromDate include:(NSString * _Nullable)include isDeletedTemplateOnly:(NSString * _Nullable)isDeletedTemplateOnly isDownload:(NSString * _Nullable)isDownload modifiedFromDate:(NSString * _Nullable)modifiedFromDate modifiedToDate:(NSString * _Nullable)modifiedToDate order:(NSString * _Nullable)order orderBy:(NSString * _Nullable)orderBy searchFields:(NSString * _Nullable)searchFields searchText:(NSString * _Nullable)searchText sharedByMe:(NSString * _Nullable)sharedByMe startPosition:(NSString * _Nullable)startPosition templateIds:(NSString * _Nullable)templateIds toDate:(NSString * _Nullable)toDate usedFromDate:(NSString * _Nullable)usedFromDate usedToDate:(NSString * _Nullable)usedToDate userFilter:(NSString * _Nullable)userFilter userId:(NSString * _Nullable)userId completion:(void (^ _Nonnull)(DSAPIEnvelopeTemplateResults * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DocuSignAPI8UsersAPI")
@interface UsersAPI : NSObject
/// Retrieves the user profile image for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param encoding (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userProfileImageGetUserProfileImageWithAccountId:(NSString * _Nonnull)accountId userId:(NSString * _Nonnull)userId encoding:(NSString * _Nullable)encoding completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Gets the user account settings for a specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSettingsGetUserSettingsWithAccountId:(NSString * _Nonnull)accountId userId:(NSString * _Nonnull)userId completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Removes removes signature information for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesDeleteUserSignatureWithAccountId:(NSString * _Nonnull)accountId signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
/// Deletes the user initials image or the  user signature image for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param imageType (path) One of <em>signature_image</em> or <em>initials_image</em>.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesDeleteUserSignatureImageWithAccountId:(NSString * _Nonnull)accountId imageType:(NSString * _Nonnull)imageType signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId completion:(void (^ _Nonnull)(DSAPIUserSignature * _Nullable, NSError * _Nullable))completion;
/// Gets the user signature information for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesGetUserSignatureWithAccountId:(NSString * _Nonnull)accountId signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId completion:(void (^ _Nonnull)(DSAPIUserSignature * _Nullable, NSError * _Nullable))completion;
/// Retrieves the user initials image or the  user signature image for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param imageType (path) One of <em>signature_image</em> or <em>initials_image</em>.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param includeChrome (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesGetUserSignatureImageWithAccountId:(NSString * _Nonnull)accountId imageType:(NSString * _Nonnull)imageType signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId includeChrome:(NSString * _Nullable)includeChrome completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Retrieves a list of signature definitions for a user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param stampType (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesGetUserSignaturesWithAccountId:(NSString * _Nonnull)accountId userId:(NSString * _Nonnull)userId stampType:(NSString * _Nullable)stampType completion:(void (^ _Nonnull)(DSAPIUserSignaturesInformation * _Nullable, NSError * _Nullable))completion;
/// Adds user Signature and initials images to a Signature.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesPostUserSignaturesWithAccountId:(NSString * _Nonnull)accountId userId:(NSString * _Nonnull)userId body:(DSAPIUserSignaturesInformation * _Nullable)body completion:(void (^ _Nonnull)(DSAPIUserSignaturesInformation * _Nullable, NSError * _Nullable))completion;
/// Adds/updates a user signature.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesPutUserSignatureWithAccountId:(NSString * _Nonnull)accountId userId:(NSString * _Nonnull)userId body:(DSAPIUserSignaturesInformation * _Nullable)body completion:(void (^ _Nonnull)(DSAPIUserSignaturesInformation * _Nullable, NSError * _Nullable))completion;
/// Updates the user signature for a specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param body (body)  (optional)
///
/// \param closeExistingSignature (query) When set to <em>true</em>, closes the current signature. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesPutUserSignatureByIdWithAccountId:(NSString * _Nonnull)accountId signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId body:(DSAPIUserSignatureDefinition * _Nullable)body closeExistingSignature:(NSString * _Nullable)closeExistingSignature completion:(void (^ _Nonnull)(DSAPIUserSignature * _Nullable, NSError * _Nullable))completion;
/// Updates the user signature image or user initials image for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param imageType (path) One of <em>signature_image</em> or <em>initials_image</em>.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param transparentPng (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesPutUserSignatureImageWithAccountId:(NSString * _Nonnull)accountId imageType:(NSString * _Nonnull)imageType signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId transparentPng:(NSString * _Nullable)transparentPng completion:(void (^ _Nonnull)(DSAPIUserSignature * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface UsersAPI (SWIFT_EXTENSION(DocuSignAPI))
/// Upload the user signature image and/or user initials image for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param body (body)  (optional)
///
/// \param multiParts (path) multipart dictionary containing Images for respective keys representing initials or signature images.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesPostUserSignatureImagesWithAccountId:(NSString * _Nonnull)accountId userId:(NSString * _Nonnull)userId body:(DSAPIUserSignaturesInformation * _Nullable)body multiParts:(NSDictionary<NSString *, NSArray *> * _Nullable)multiParts completion:(void (^ _Nonnull)(DSAPIUserSignaturesInformation * _Nullable, NSError * _Nullable))completion;
/// Updates the user signature image or user initials image for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param imageType (path) One of <em>signature_image</em> or <em>initials_image</em>.
///
/// \param image (path) Image of the signature or initials. .
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param transparentPng (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesPutUserSignatureImageDataWithAccountId:(NSString * _Nonnull)accountId imageType:(NSString * _Nonnull)imageType image:(UIImage * _Nonnull)image signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId transparentPng:(NSString * _Nullable)transparentPng completion:(void (^ _Nonnull)(DSAPIUserSignature * _Nullable, NSError * _Nullable))completion;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef DOCUSIGNAPI_SWIFT_H
#define DOCUSIGNAPI_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DocuSignAPI",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSString;
@class DSAPICustomFields;
@class NSData;
@class DSAPIAccountInformation;
@class DSAPIConsumerDisclosure;

SWIFT_CLASS("_TtC11DocuSignAPI11AccountsAPI")
@interface AccountsAPI : NSObject
/// Gets a list of custom fields.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)accountCustomFieldsGetAccountCustomFieldsWithAccountId:(NSString * _Nonnull)accountId completion:(void (^ _Nonnull)(DSAPICustomFields * _Nullable, NSError * _Nullable))completion;
/// Returns a signature image, initials, or stamp.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param imageType (path) One of <em>signature_image</em> or <em>initials_image</em>.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param includeChrome (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)accountSignaturesGetAccountSignatureImageWithAccountId:(NSString * _Nonnull)accountId imageType:(NSString * _Nonnull)imageType signatureId:(NSString * _Nonnull)signatureId includeChrome:(NSString * _Nullable)includeChrome completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Retrieves the account information for the specified account.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param includeAccountSettings (query) When set to <em>true</em>, includes the account settings for the account in the response. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)accountsGetAccountWithAccountId:(NSString * _Nonnull)accountId includeAccountSettings:(NSString * _Nullable)includeAccountSettings completion:(void (^ _Nonnull)(DSAPIAccountInformation * _Nullable, NSError * _Nullable))completion;
/// Gets a brand logo.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param brandId (path) The unique identifier of a brand.
///
/// \param logoType (path) One of <em>Primary</em>, <em>Secondary</em> or <em>Email</em>.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)brandLogoGetBrandLogoWithAccountId:(NSString * _Nonnull)accountId brandId:(NSString * _Nonnull)brandId logoType:(NSString * _Nonnull)logoType completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Gets the default Electronic Record and Signature Disclosure for an account.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param langCode (query) Specifies the language used in the response. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk), and Vietnamese (vi).  Additionally, the value can be set to `browser` to automatically detect the browser language being used by the viewer and display the disclosure in that language.  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)consumerDisclosureGetConsumerDisclosureWithAccountId:(NSString * _Nonnull)accountId langCode:(NSString * _Nullable)langCode completion:(void (^ _Nonnull)(DSAPIConsumerDisclosure * _Nullable, NSError * _Nullable))completion;
/// Gets the Electronic Record and Signature Disclosure for an account.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param langCode (path) The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to ï¿½browserï¿½ to automatically detect the browser language being used by the viewer and display the disclosure in that language.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)consumerDisclosureGetConsumerDisclosureLangCodeWithAccountId:(NSString * _Nonnull)accountId langCode:(NSString * _Nonnull)langCode completion:(void (^ _Nonnull)(DSAPIConsumerDisclosure * _Nullable, NSError * _Nullable))completion;
/// Updates the Electronic Record and Signature Disclosure for an account.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param langCode (path) The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to ï¿½browserï¿½ to automatically detect the browser language being used by the viewer and display the disclosure in that language.
///
/// \param body (body)  (optional)
///
/// \param includeMetadata (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)consumerDisclosurePutConsumerDisclosureWithAccountId:(NSString * _Nonnull)accountId langCode:(NSString * _Nonnull)langCode body:(DSAPIConsumerDisclosure * _Nullable)body includeMetadata:(NSString * _Nullable)includeMetadata completion:(void (^ _Nonnull)(DSAPIConsumerDisclosure * _Nullable, NSError * _Nullable))completion;
/// Gets account settings information.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)settingsGetSettingsWithAccountId:(NSString * _Nonnull)accountId completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSNumber;

SWIFT_CLASS("_TtC11DocuSignAPI14BoolFromString")
@interface BoolFromString : NSObject
@property (nonatomic) BOOL wrappedValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPIAccountSettingsInformation;
@class NSDate;
@class NSURL;

/// Contains account Information.
SWIFT_CLASS("_TtC11DocuSignAPI23DSAPIAccountInformation")
@interface DSAPIAccountInformation : NSObject
/// The GUID associated with the account ID.
@property (nonatomic, copy) NSString * _Nullable accountIdGuid;
/// The name of the current account.
@property (nonatomic, copy) NSString * _Nullable accountName;
@property (nonatomic, strong) DSAPIAccountSettingsInformation * _Nullable accountSettings;
/// When <em>true,</em> the transaction rooms feature exposed through the Workspaces API is enabled.
@property (nonatomic) BOOL allowTransactionRooms;
/// Number of days remaining in the current billing period.
@property (nonatomic, copy) NSString * _Nullable billingPeriodDaysRemaining;
/// The billing period end date in UTC timedate format.
@property (nonatomic, copy) NSDate * _Nullable billingPeriodEndDate;
/// The number of envelopes that can be sent in the current billing period (can be unlimited).
@property (nonatomic, copy) NSString * _Nullable billingPeriodEnvelopesAllowed;
/// The number of envelopes that have been sent in the current billing period.
@property (nonatomic, copy) NSString * _Nullable billingPeriodEnvelopesSent;
/// The billing period start date in UTC timedate format.
@property (nonatomic, copy) NSDate * _Nullable billingPeriodStartDate;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable billingProfile;
/// When <em>true,</em> specifies that you can upgrade the account through the API. For GET methods, you must set the `include_metadata` query parameter to <em>true</em> for this property to appear in the response.
@property (nonatomic) BOOL canUpgrade;
@property (nonatomic, copy) NSString * _Nullable connectPermission;
/// The creation date of the account in UTC timedate format.
@property (nonatomic, copy) NSDate * _Nullable createdDate;
/// Specifies the ISO currency code for the account.
@property (nonatomic, copy) NSString * _Nullable currencyCode;
/// ID of the plan used to create this account.
@property (nonatomic, copy) NSString * _Nullable currentPlanId;
@property (nonatomic, copy) NSURL * _Nullable displayApplianceStartUrl;
@property (nonatomic, copy) NSURL * _Nullable displayApplianceUrl;
/// The code that identifies the billing plan groups and plans for the new account.
@property (nonatomic, copy) NSString * _Nullable distributorCode;
/// URL of the landing page used to create the account.
@property (nonatomic, copy) NSURL * _Nullable docuSignLandingUrl;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable dssValues;
/// When <em>true,</em> the ability to send envelopes is blocked. When <em>false,</em> envelopes can be sent.
@property (nonatomic) BOOL envelopeSendingBlocked;
/// The price of sending an envelope, represented in the account's local currency.
@property (nonatomic, copy) NSString * _Nullable envelopeUnitPrice;
/// The Account ID displayed on the user's Account page.
@property (nonatomic, copy) NSString * _Nullable externalAccountId;
/// A complex element that contains up to four Question/Answer pairs for forgotten password information for a user.
@property (nonatomic, copy) NSString * _Nullable forgottenPasswordQuestionsCount;
/// When <em>true,</em> the account has been downgraded from a premium account type. Otherwise <em>false.</em>
@property (nonatomic) BOOL isDowngrade;
/// The payment method used for the billing plan. Valid values are:  - `NotSupported` - `CreditCard` - `PurchaseOrder` - `Premium` - `Freemium` - `FreeTrial` - `AppStore` - `DigitalExternal` - `DirectDebit`
@property (nonatomic, copy) NSString * _Nullable paymentMethod;
/// Identifies the type of plan. Examples include:  - `business` - `corporate` - `enterprise`  - `free`
@property (nonatomic, copy) NSString * _Nullable planClassification;
/// The date that the current plan will end.
@property (nonatomic, copy) NSDate * _Nullable planEndDate;
/// The name of the Billing Plan.
@property (nonatomic, copy) NSString * _Nullable planName;
/// The date that the Account started using the current plan.
@property (nonatomic, copy) NSDate * _Nullable planStartDate;
/// The number of active users the account can have at one time.
@property (nonatomic, copy) NSString * _Nullable seatsAllowed;
/// The number of users currently active on the account.
@property (nonatomic, copy) NSString * _Nullable seatsInUse;
/// The status of the account content per (Title 21 CFR Part 11)[https://www.fda.gov/regulatory-information/search-fda-guidance-documents/part-11-electronic-records-electronic-signatures-scope-and-application]. This regulation defines the criteria under which electronic records and electronic signatures are considered trustworthy.
@property (nonatomic, copy) NSString * _Nullable status21CFRPart11;
/// The date on which the account was suspended.
@property (nonatomic, copy) NSDate * _Nullable suspensionDate;
/// Indicates whether the account is currently suspended.
@property (nonatomic, copy) NSString * _Nullable suspensionStatus;
@property (nonatomic) BOOL useDisplayAppliance;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPISettingsMetadata;

/// Contains account settings information. Used in requests to set property values. Used in responses to report property values.
SWIFT_CLASS("_TtC11DocuSignAPI31DSAPIAccountSettingsInformation")
@interface DSAPIAccountSettingsInformation : NSObject
/// UTC date/time format for the account.
@property (nonatomic, copy) NSString * _Nullable accountDateTimeFormat;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable accountDateTimeFormatMetadata;
@property (nonatomic, copy) NSString * _Nullable accountDefaultLanguage;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable accountDefaultLanguageMetadata;
/// The name on the account.
@property (nonatomic, copy) NSString * _Nullable accountName;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable accountNameMetadata;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-admin-guide-signature-adopt-config">Signature Adoption Configuration</a> is enabled.   <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL adoptSigConfig;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable adoptSigConfigMetadata;
/// When <em>true,</em> the Advanced Correction feature is enabled for this account.
@property (nonatomic) BOOL advancedCorrect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable advancedCorrectMetadata;
/// When <em>true,</em> the configured <a href="/docs/esign-rest-api/reference/accounts/accounts/get/#accessCodeFormat">Access Code Format</a> page is enabled for account administrators.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowAccessCodeFormat;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAccessCodeFormatMetadata;
/// When <em>true,</em> the account can be managed on a per-user basis.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowAccountManagementGranular;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAccountManagementGranularMetadata;
/// Boolean that specifies whether member names can be changed in the account.
@property (nonatomic) BOOL allowAccountMemberNameChange;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAccountMemberNameChangeMetadata;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-user-guide-conditional-recipients">Conditional Routing</a> is enabled for the account as part of DocuSign's Advanced Recipient Routing feature.
@property (nonatomic) BOOL allowAdvancedRecipientRoutingConditional;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAdvancedRecipientRoutingConditionalMetadata;
/// When <em>true,</em> an agent recipient can change the email addresses of recipients later in the signing order.
@property (nonatomic) BOOL allowAgentNameEmailEdit;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAgentNameEmailEditMetadata;
@property (nonatomic) BOOL allowAgreementActions;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAgreementActionsMetadata;
/// When <em>true,</em> auto-navigation can be enabled for this account.
@property (nonatomic) BOOL allowAutoNavSettings;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAutoNavSettingsMetadata;
/// When <em>true,</em> auto-tagging is enabled for the account.
@property (nonatomic) BOOL allowAutoTagging;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAutoTaggingMetadata;
/// When <em>true,</em> bulk send functionality is enabled for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowBulkSend;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowBulkSendMetadata;
/// When <em>true,</em> indicates that the customer can withdraw their consent to the consumer disclosure when they decline to sign documents. If these recipients sign documents sent to them from your account in the future, they will be required to agree to the terms in the disclosure. The default value is <em>false.</em> <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowCDWithdraw;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowCDWithdrawMetadata;
/// Boolean that specifies whether a Connect configuration can use HTTP listeners.
@property (nonatomic) BOOL allowConnectHttpListenerConfigs;
/// Reserved for DocuSign.
@property (nonatomic) BOOL allowConnectSendFinishLater;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowConnectSendFinishLaterMetadata;
@property (nonatomic) BOOL allowConnectUnifiedPayloadUI;
/// When <em>true,</em> the account has the ability to change the <a href="https://support.docusign.com/en/guides/ndse-admin-guide-legal-disclosure">Consumer Disclosure</a> setting.
@property (nonatomic) BOOL allowConsumerDisclosureOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowConsumerDisclosureOverrideMetadata;
/// When <em>true,</em> senders can download form data from the envelopes that they send.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowDataDownload;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowDataDownloadMetadata;
/// &quot;true&quot; if the account has permission to use the scheduled sending feature to send envelopes at a specified datetime in the future, &quot;false&quot; otherwise.
@property (nonatomic) BOOL allowDelayedRouting;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowDelayedRoutingMetadata;
@property (nonatomic) BOOL allowDelegatedSigning;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowDelegatedSigningMetadata;
/// Boolean that specifies whether disclosure documents can be included in envelopes.
@property (nonatomic) BOOL allowDocumentDisclosures;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowDocumentDisclosuresMetadata;
/// Boolean that specifies whether notifications can include the envelope's signed document.
@property (nonatomic) BOOL allowDocumentsOnSignedEnvelopes;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowDocumentsOnSignedEnvelopesMetadata;
/// When <em>true,</em> the <a href="https://support.docusign.com/guides/ndse-user-guide-document-visibility">Document Visibility</a> feature is enabled for the account.
@property (nonatomic) BOOL allowDocumentVisibility;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowDocumentVisibilityMetadata;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-user-guide-manage-your-stamps">eHanko stamps</a> are enabled.
@property (nonatomic) BOOL allowEHankoStamps;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEHankoStampsMetadata;
/// Specifies whether eNote eOriginal integration is enabled.
@property (nonatomic) BOOL allowENoteEOriginal;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowENoteEOriginalMetadata;
/// When <em>true,</em> the envelope correction feature is enabled.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowEnvelopeCorrect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEnvelopeCorrectMetadata;
/// Specifies whether the account is able to manage rules that <a href="https://support.docusign.com/en/guides/ndse-admin-guide-custody-transfer">transfer ownership</a> of envelopes within the same account.
@property (nonatomic) BOOL allowEnvelopeCustodyTransfer;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEnvelopeCustodyTransferMetadata;
/// Specifies whether <a href="https://support.docusign.com/en/guides/ndse-user-guide-manage-custom-fields">envelope custom fields</a> are enabled.
@property (nonatomic) BOOL allowEnvelopeCustomFields;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEnvelopeCustomFieldsMetadata;
/// When <em>true,</em> envelope publishing reporting is enabled.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowEnvelopePublishReporting;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEnvelopePublishReportingMetadata;
/// Specifies whether the account has access to reports.
@property (nonatomic) BOOL allowEnvelopeReporting;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEnvelopeReportingMetadata;
/// If the account plan does not include calculated fields, this setting allows an account to use them.
@property (nonatomic) BOOL allowExpression;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowExpressionMetadata;
/// When <em>true,</em> signers are required to use Express Digital Signatures.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowExpressSignerCertificate;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowExpressSignerCertificateMetadata;
/// Boolean that specifies whether resource files can be used for extended sending.
@property (nonatomic) BOOL allowExtendedSendingResourceFile;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowExtendedSendingResourceFileMetadata;
@property (nonatomic) BOOL allowExternalLinkedAccounts;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowExternalLinkedAccountsMetadata;
/// When <em>true,</em> the account can configure and use signature pads for their recipients.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowExternalSignaturePad;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowExternalSignaturePadMetadata;
/// When <em>true,</em> IDV Level 1 is allowed. The default value is <em>false.</em>
@property (nonatomic) BOOL allowIDVLevel1;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowIDVLevel1Metadata;
@property (nonatomic) BOOL allowIDVLevel2;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowIDVLevel2Metadata;
@property (nonatomic) BOOL allowIDVLevel3;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowIDVLevel3Metadata;
@property (nonatomic) BOOL allowIDVPlatform;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowIDVPlatformMetadata;
/// When <em>true,</em> the account administrator can enable in-person signing.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL allowInPerson;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowInPersonMetadata;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-admin-guide-managed-stamps">Managed Stamps</a> are enabled.
@property (nonatomic) BOOL allowManagedStamps;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowManagedStampsMetadata;
/// When <em>true,</em> the Document Markup feature is enabled.  <em>Note:</em>  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.
@property (nonatomic) BOOL allowMarkup;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowMarkupMetadata;
/// When <em>true,</em> account users can set their own <a href="https://support.docusign.com/en/articles/How-do-I-modify-time-zone-settings-for-my-account">time zone settings</a>.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowMemberTimeZone;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowMemberTimeZoneMetadata;
/// When <em>true,</em> the account can use <a href="https://support.docusign.com/en/guides/dfs-user-guide-merge-fields-user">merge fields</a> with DocuSign for Salesforce.
@property (nonatomic) BOOL allowMergeFields;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowMergeFieldsMetadata;
/// Specifies whether the account supports multiple brands.
@property (nonatomic) BOOL allowMultipleBrandProfiles;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowMultipleBrandProfilesMetadata;
/// When <em>true,</em> recipients can upload multiple signer attachments with a single attachment.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowMultipleSignerAttachments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowMultipleSignerAttachmentsMetadata;
/// Specifies whether users can use international numbers for phone authentication.
@property (nonatomic) BOOL allowNonUSPhoneAuth;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowNonUSPhoneAuthMetadata;
@property (nonatomic) BOOL allowOcrOfEnvelopeDocuments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOcrOfEnvelopeDocumentsMetadata;
/// When <em>true,</em> <a href="https://support.docusign.com/articles/Offline-access-with-the-DocuSign-Mobile-App-for-iOS-iPad-iPhone-iPod-Touch">offline signing</a> is enabled for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowOfflineSigning;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOfflineSigningMetadata;
/// When <em>true,</em> senders can use OpenTrust signer certificates.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowOpenTrustSignerCertificate;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOpenTrustSignerCertificateMetadata;
@property (nonatomic) BOOL allowOrganizationDocusignMonitor;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOrganizationDocusignMonitorMetadata;
@property (nonatomic) BOOL allowOrganizationDomainUserManagement;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOrganizationDomainUserManagementMetadata;
/// Boolean that specifies whether <a href="/docs/admin-api/">DocuSign Admin</a> is enabled for the account.
@property (nonatomic) BOOL allowOrganizations;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOrganizationsMetadata;
@property (nonatomic) BOOL allowOrganizationSsoManagement;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOrganizationSsoManagementMetadata;
@property (nonatomic) BOOL allowOrganizationToUseRemoteNotary;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOrganizationToUseRemoteNotaryMetadata;
/// When <em>true,</em> payment processing is enabled for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowPaymentProcessing;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowPaymentProcessingMetadata;
/// When <em>true,</em> signers can use personal signer certificates.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowPersonalSignerCertificate;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowPersonalSignerCertificateMetadata;
/// Boolean that specifies whether phone authentication is enabled for the account.
@property (nonatomic) BOOL allowPhoneAuthentication;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowPhoneAuthenticationMetadata;
/// Boolean that specifies whether users can override phone authentication.
@property (nonatomic) BOOL allowPhoneAuthOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowPhoneAuthOverrideMetadata;
/// Reserved for DocuSign. This property returns the value <em>false</em> when listing account settings. This property is read-only.
@property (nonatomic) BOOL allowPrivateSigningGroups;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowPrivateSigningGroupsMetadata;
@property (nonatomic) BOOL allowRecipientConnect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowRecipientConnectMetadata;
/// When <em>true,</em> an account administrator can to turn on reminders and expiration defaults for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowReminders;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowRemindersMetadata;
@property (nonatomic) BOOL allowRemoteNotary;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowRemoteNotaryMetadata;
/// When <em>true,</em> resource files can be uploaded in branding.
@property (nonatomic) BOOL allowResourceFileBranding;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowResourceFileBrandingMetadata;
/// When <em>true,</em> account administrators can specify that signers are required to use SAFE-BioPharma digital signatures.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowSafeBioPharmaSignerCertificate;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSafeBioPharmaSignerCertificateMetadata;
/// &quot;true&quot; if the account has permission to use the scheduled sending feature to send envelopes at a specified datetime in the future, &quot;false&quot; otherwise.
@property (nonatomic) BOOL allowScheduledSending;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowScheduledSendingMetadata;
/// Boolean that specifies whether a DocuSign Signature Appliance can be used with the account.
@property (nonatomic) BOOL allowSecurityAppliance;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSecurityApplianceMetadata;
/// When <em>true,</em> the account admin can enable the Send to Certified Delivery feature on the account.
@property (nonatomic) BOOL allowSendToCertifiedDelivery;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSendToCertifiedDeliveryMetadata;
/// When <em>true,</em> the account admin can enable the Send to Intermediary feature on the account.
@property (nonatomic) BOOL allowSendToIntermediary;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSendToIntermediaryMetadata;
/// When <em>true,</em> the account can use templates.
@property (nonatomic) BOOL allowServerTemplates;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowServerTemplatesMetadata;
@property (nonatomic) BOOL allowSetEmbeddedRecipientStartURL;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSetEmbeddedRecipientStartURLMetadata;
/// When <em>true,</em> shared tabs are enabled for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowSharedTabs;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSharedTabsMetadata;
/// When <em>true,</em> Signature Stamps are enabled.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowSignatureStamps;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSignatureStampsMetadata;
/// When <em>true,</em> recipients can sign documents from the home page.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowSignDocumentFromHomePage;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSignDocumentFromHomePageMetadata;
/// When <em>true,</em> the recipient of an envelope sent from this account can reassign it to another person.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowSignerReassign;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSignerReassignMetadata;
/// When <em>true,</em> an account administrator can override the ability of an envelope recipient to reassign it to another person.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowSignerReassignOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSignerReassignOverrideMetadata;
/// Boolean that specifies whether Signing and App Extensions are allowed.
@property (nonatomic) BOOL allowSigningExtensions;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSigningExtensionsMetadata;
/// When <em>true,</em> the account allows signing groups. This setting is only shown in responses that list account settings. This property is read-only.
@property (nonatomic) BOOL allowSigningGroups;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSigningGroupsMetadata;
@property (nonatomic) BOOL allowSigningInsights;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSigningInsightsMetadata;
/// Boolean that specifies whether the account supports radio buttons on tabs <a href="/docs/esign-soap-api/reference/sending-group/tab/">Radio CustomTabType</a>.
@property (nonatomic) BOOL allowSigningRadioDeselect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSigningRadioDeselectMetadata;
/// When <em>true,</em> the account administrator can enable the Sign Now feature.
@property (nonatomic) BOOL allowSignNow;
/// Metadata that indicates whether the `allowSignNow` property is editable.
@property (nonatomic, copy) NSString * _Nullable allowSignNowMetadata;
@property (nonatomic) BOOL allowSMSDelivery;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSMSDeliveryMetadata;
/// Deprecated.
@property (nonatomic) BOOL allowSocialIdLogin;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSocialIdLoginMetadata;
/// When <em>true,</em> this user can include supplemental documents.
@property (nonatomic) BOOL allowSupplementalDocuments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSupplementalDocumentsMetadata;
@property (nonatomic) BOOL allowUsersToAccessDirectory;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowUsersToAccessDirectoryMetadata;
@property (nonatomic) BOOL allowValueInsights;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowValueInsightsMetadata;
/// This property determines how template anchor tabs are applied.  Valid values are:  - `document`: Anchor tabs are applied only to the document that you specify.  - `envelope`: Anchor tabs are applied to all of the documents in the envelope associated with the template.  <em>Note:</em> When you are using the `anchorPopulationScope` property with a Composite Template, the value `document` is supported only with a single server template and a single inline template.
@property (nonatomic, copy) NSString * _Nullable anchorPopulationScope;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable anchorPopulationScopeMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL anchorTagVersionedPlacementEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable anchorTagVersionedPlacementMetadataEnabled;
/// When <em>true,</em> envelope documents are included as a PDF file attachment to &quot;signing completed&quot; emails.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL attachCompletedEnvelope;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable attachCompletedEnvelopeMetadata;
/// Sets when authentication checks are applied for recipient envelope access. This setting only applies to the following ID checks:   - Phone Authentication - SMS Authentication - Knowledge-Based ID  This setting takes one of the following options:   - `initial_access`: The authentication check always applies the first time a recipient accesses the documents. Recipients are not asked to authenticate again when they access the documents from the same browser on the same device. If the recipient attempts to access the documents from a different browser or a different device, the recipient must pass authentication again. Once authenticated, that recipient is not challenged again on the new device or browser. The ability for a recipient to skip authentication for documents is limited to documents sent from the same sending account. - `each_access`: Authentication checks apply every time a recipient attempts to access the envelope. However, you can configure the Authentication Expiration setting to allow recipients to skip authentication when they have recently passed authentication by setting a variable time frame.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable authenticationCheck;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable authenticationCheckMetadata;
/// Specifies how auto-navigation works. Valid values are:  - `off` - `required_fields` - `required_and_blank_fields` - `all_fields` - `page_then_required_fields` - `page_then_required_and_blank_fields` - `page_then_all_fields`
@property (nonatomic, copy) NSString * _Nullable autoNavRule;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable autoNavRuleMetadata;
/// Boolean that specifies whether to automatically provision a user membership in the account for accountless recipients. (Also known as Just-in-Time provisioning.)
@property (nonatomic) BOOL autoProvisionSignerAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable autoProvisionSignerAccountMetadata;
/// Boolean that specifies whether BCC for Email Archive is enabled for the account. BCC for Email Archive allows you to set up an archive email address so that a BCC copy of an envelope is sent only to that address.
@property (nonatomic) BOOL bccEmailArchive;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable bccEmailArchiveMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable betaSwitchConfiguration;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable betaSwitchConfigurationMetadata;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable billingAddressMetadata;
/// When <em>true,</em> this user can use the bulk send feature for the account.
@property (nonatomic) BOOL bulkSend;
@property (nonatomic, copy) NSString * _Nullable bulkSendMaxCopiesInBatch;
@property (nonatomic, copy) NSString * _Nullable bulkSendMaxUnprocessedEnvelopesCount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable bulkSendMetadata;
/// When <em>true,</em> account administrators can self-brand their sending console through the DocuSign console.
@property (nonatomic) BOOL canSelfBrandSend;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canSelfBrandSendMetadata;
/// When <em>true,</em> account administrators can self-brand their signing console through the DocuSign console.
@property (nonatomic) BOOL canSelfBrandSign;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canSelfBrandSignMetadata;
@property (nonatomic) BOOL canUseSalesforceOAuth;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canUseSalesforceOAuthMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable captureVoiceRecording;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable captureVoiceRecordingMetadata;
@property (nonatomic) BOOL cfr21SimplifiedSigningEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable cfr21SimplifiedSigningEnabledMetadata;
/// Boolean that specifies whether to use a shorter/wider format when generating the CFR Part 11 signature image.
@property (nonatomic) BOOL cfrUseWideImage;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable cfrUseWideImageMetadata;
@property (nonatomic) BOOL checkForMultipleAdminsOnAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable checkForMultipleAdminsOnAccountMetadata;
/// Boolean that specifies whether the signers of the envelopes from this account use a signature with a DocuSign chrome around it or not.
@property (nonatomic) BOOL chromeSignatureEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable chromeSignatureEnabledMetadata;
/// When <em>true,</em> the text of comments is included in email notifications when a comment is posted.  <em>Note:</em>  If the envelope requires additional recipient authentication, comment text is not included.
@property (nonatomic) BOOL commentEmailShowMessageText;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable commentEmailShowMessageTextMetadata;
/// When <em>true</em> and comments are enabled for the account, senders can disable comments for an envelope through the <em>Advanced Options</em> menu that appears during the sending process.
@property (nonatomic) BOOL commentsAllowEnvelopeOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable commentsAllowEnvelopeOverrideMetadata;
/// When <em>true,</em> conditional fields can be used in documents.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL conditionalFieldsEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable conditionalFieldsEnabledMetadata;
/// Speficies how often to display the consumer disclosure.  Valid values are:  - `once`: Per account, the supplemental document is displayed once only per `userId`.  - `always`: Per envelope, the supplemental document is displayed once only per `userId`.  - `each_access`: Per envelope, the supplemental document is displayed once only per `recipientId`.
@property (nonatomic, copy) NSString * _Nullable consumerDisclosureFrequency;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable consumerDisclosureFrequencyMetadata;
/// Boolean that specifies whether to enable PDF form fields to get converted to DocuSign secure fields when the document is added or uploaded to an envelope.
@property (nonatomic) BOOL convertPdfFields;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable convertPdfFieldsMetadata;
/// Specifies how data is shared for tabs with the same tabLabel. Valid values are:  - `document`: Tabs in a document with the same label populate with the same data. - `envelope`: Tabs in all documents in the envelope with the same label populate with the same data.  This setting applies to the following tab types:   - Check box  - Company - Data field - Drop-down list - Full name  - Formula - Note - Title  <em>Note:</em> Only Admin users can change this setting. Changing this setting affects envelopes that have been sent but not completed.
@property (nonatomic, copy) NSString * _Nullable dataPopulationScope;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable dataPopulationScopeMetadata;
@property (nonatomic) BOOL disableAutoTemplateMatching;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableAutoTemplateMatchingMetadata;
/// When <em>true,</em> the mobile app distributor key is prevented from connecting for account users.
@property (nonatomic) BOOL disableMobileApp;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableMobileAppMetadata;
/// When <em>true,</em> push notifications are disabled for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL disableMobilePushNotifications;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableMobilePushNotificationsMetadata;
/// When <em>true,</em> sending from a mobile application is disabled.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL disableMobileSending;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableMobileSendingMetadata;
/// When <em>true,</em> account users cannot be logged into multiple sessions at the same time.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL disableMultipleSessions;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableMultipleSessionsMetadata;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disablePurgeNotificationsForSenderMetadata;
/// When <em>true,</em> signers cannot view certificates of completion.
@property (nonatomic) BOOL disableSignerCertView;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableSignerCertViewMetadata;
/// When <em>true,</em> signers cannot view envelope history.
@property (nonatomic) BOOL disableSignerHistoryView;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableSignerHistoryViewMetadata;
/// When <em>true,</em> the <em>Select Style</em> option is hidden from signers and they must draw their signature instead.
@property (nonatomic) BOOL disableStyleSignature;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableStyleSignatureMetadata;
/// When <em>true,</em> signers cannot upload custom image files of their signature and initials.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL disableUploadSignature;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableUploadSignatureMetadata;
/// When <em>true,</em> the User Sharing feature is disabled for the account.
@property (nonatomic) BOOL disableUserSharing;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableUserSharingMetadata;
/// Boolean that specifies whether to display a Beta switch for your app.
@property (nonatomic, copy) NSString * _Nullable displayBetaSwitch;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable displayBetaSwitchMetadata;
/// Sets the account document upload restriction for non-account administrators. Valid values are:  - `no_restrictions`: There are no restrictions on the type of documents that can be uploaded. - `allow_pdf_only`: Non-administrators can only upload PDF files. - `no_upload`: Non-administrators cannot upload files.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable documentConversionRestrictions;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable documentConversionRestrictionsMetadata;
/// Sets a document retention period, which controls the number of days that DocuSign retains documents after they have reached a completed,declined, or voided state. When document retention is enabled for the account, the default value is `356` days.
@property (nonatomic, copy) NSString * _Nullable documentRetention;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable documentRetentionMetadata;
/// When <em>true</em> and `documentRetention` is set, document fields and metadata are also purged after the document retention period ends. The default value is <em>false.</em>  <em>Note:</em> Only Admins can change this setting.
@property (nonatomic) BOOL documentRetentionPurgeTabs;
/// Configures the Document Visibility feature for the account. Valid values are:  - `Off`: Document Visibility is not active for the account. - `MustSignToViewUnlessSenderAccount`: Document Visibility is enabled for all envelopes sent from the account. Any member of the sending account can view all of the documents in an envelope. - `MustSignToViewUnlessSender`: Document Visibility is enabled for all envelopes sent from the account. Only the sender can view all of the documents in an envelope. - `SenderCanSetMustSignToViewUnlessSenderAccount`: The sender has the option to enable Document Visibility for an envelope. When enabled for an envelope, all of the documents within it are still visible to any member of the sending account. Vd- `SenderCanSetMustSignToViewUnlessSender`: The sender has the option to enable Document Visibility for an envelope. When enabled for an envelope, all of the documents in the envelope are visible only to the sender.  <em>Note:</em> For this configuration to take effect, `allowDocumentVisibility` must be set to <em>true.</em>
@property (nonatomic, copy) NSString * _Nullable documentVisibility;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable documentVisibilityMetadata;
@property (nonatomic, copy) NSString * _Nullable dssSIGN28411EnableLeavePagePromptRadminOption;
@property (nonatomic, copy) NSString * _Nullable dssSIGN29182SlideUpBarRadminOption;
/// Specifies the version of the email templates used in an account. If new signing is selected in a member's Admin page, the user is updated to the newest version (1.1), the minimum version of email supported for the account.
@property (nonatomic, copy) NSString * _Nullable emailTemplateVersion;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable emailTemplateVersionMetadata;
/// When <em>true,</em> enables Access Code Generator on the account.
@property (nonatomic) BOOL enableAccessCodeGenerator;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableAccessCodeGeneratorMetadata;
/// When <em>true,</em> enables Advanced Payments for the account.
@property (nonatomic) BOOL enableAdvancedPayments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableAdvancedPaymentsMetadata;
/// When <em>true,</em> enables advanced PowerForms for the account.
@property (nonatomic) BOOL enableAdvancedPowerForms;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableAdvancedPowerFormsMetadata;
@property (nonatomic) BOOL enableAgreementActionsForCLM;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableAgreementActionsForCLMMetadata;
@property (nonatomic) BOOL enableAgreementActionsForESign;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableAgreementActionsForESignMetadata;
/// When <em>true,</em> enables the account to set the AutoNav rule setting, which enables a sender to override the auto-navigation setting per envelope.  <em>Note:</em> To change this setting, you must be a SysAdmin user or `EnableAutoNavByDSAdmin must be set.
@property (nonatomic) BOOL enableAutoNav;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableAutoNavMetadata;
@property (nonatomic) BOOL enableBccDummyLink;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableBccDummyLinkMetadata;
/// When <em>true,</em> calculated fields are enabled for the account.   <em>Note:</em> This setting can be changed only by Admin users, and only if the account-level setting `allowExpression` is set to <em>true.</em>
@property (nonatomic) BOOL enableCalculatedFields;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableCalculatedFieldsMetadata;
/// Boolean that specifies whether clickwraps are enabled in your app. A <a href="/docs/click-api/click101/">clickwrap</a> is an iframe that you embed in your own website or app.
@property (nonatomic) BOOL enableClickwraps;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableClickwrapsMetadata;
@property (nonatomic) BOOL enableCommentsHistoryDownloadInSigning;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableCommentsHistoryDownloadInSigningMetadata;
/// When <em>true,</em> enables customer satisfaction metric tracking for the account.
@property (nonatomic) BOOL enableCustomerSatisfactionMetricTracking;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableCustomerSatisfactionMetricTrackingMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL enableDSPro;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableDSProMetadata;
/// When <em>true,</em> enables the account administrator to control envelope stamping for an account (stamping the `envelopeId` in the the document margins).  <em>Note:</em> This setting can be changed only by Admin users, and only if the account-level setting `enableEnvelopeStampingByDSAdmin` is set to <em>true.</em>
@property (nonatomic) BOOL enableEnvelopeStampingByAccountAdmin;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableEnvelopeStampingByAccountAdminMetadata;
/// When <em>true,</em> enables the DocuSign administrator to control envelope stamping for an account (placement of the `envelopeId`).
@property (nonatomic) BOOL enableEnvelopeStampingByDSAdmin;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableEnvelopeStampingByDSAdminMetadata;
@property (nonatomic) BOOL enableEsignCommunities;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableEsignCommunitiesMetadata;
@property (nonatomic) BOOL enableIDFxIntuitKBA;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableIDFxIntuitKBAMetadata;
@property (nonatomic) BOOL enableIDFxPhoneAuthentication;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableIDFxPhoneAuthenticationMetadata;
@property (nonatomic) BOOL enableInBrowserEditor;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableInBrowserEditorMetadata;
/// When <em>true,</em> payment processing is enabled for this account.  <em>Note:</em> This setting can be changed only by Admin users, and only if the account-level setting `allowPaymentProcessing` is set.
@property (nonatomic) BOOL enablePaymentProcessing;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enablePaymentProcessingMetadata;
@property (nonatomic) BOOL enablePDFAConversion;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enablePDFAConversionMetadata;
/// When <em>true,</em> enables PowerForms for the account.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enablePowerForm;
/// When <em>true,</em> enables direct PowerForms for an account. Direct PowerForms are in-session PowerForms.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enablePowerFormDirect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enablePowerFormDirectMetadata;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enablePowerFormMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL enableRecipientDomainValidation;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableRecipientDomainValidationMetadata;
@property (nonatomic) BOOL enableRecipientMayProvidePhoneNumber;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableRecipientMayProvidePhoneNumberMetadata;
/// Enables direct links to envelopes in reports for administrators in the following scopes: - `NoEnvelopes` - `AllEnvelopes` - `OnlyOwnEnvelopes`
@property (nonatomic) BOOL enableReportLinks;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableReportLinksMetadata;
/// When <em>true,</em> the account can use the `requireSignOnPaper` option.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableRequireSignOnPaper;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableRequireSignOnPaperMetadata;
/// When <em>true,</em> account administrators can reserve a web domain and users. Domains are organization-specific reserved internet domains, such as `@exampledomain.com`. You can define policy settings for users of each reserved domain within your organization, export lists of domain users for audit purposes, and manage domain users.  - Domains may be claimed by an organization. - When a domain is claimed by an organization, all users within that domain are added to the organization, even if they have trial or free accounts. - You can set domain controls for all users of the domain. - You can export information about your organization’s users that are associated with your reserved domains.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enableReservedDomain;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableReservedDomainMetadata;
/// When <em>true,</em> enables responsive signing.
@property (nonatomic) BOOL enableResponsiveSigning;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableResponsiveSigningMetadata;
/// When <em>true,</em> scheduled releases are enabled. The default value is <em>false.</em>
@property (nonatomic) BOOL enableScheduledRelease;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableScheduledReleaseMetadata;
@property (nonatomic) BOOL enableSearch;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSearchMetadata;
@property (nonatomic) BOOL enableSearchUI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSearchUIMetadata;
/// When <em>true,</em> enables fonts to be set on tags for the account.
@property (nonatomic) BOOL enableSendingTagsFontSettings;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSendingTagsFontSettingsMetadata;
/// When <em>true,</em> this account can use the Agent recipient type.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enableSendToAgent;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSendToAgentMetadata;
/// When <em>true,</em> this account can use the Intermediary recipient type.  <em>Note:</em> Only Admin users can change this setting, and only if `allowSendToIntermediary` is set.
@property (nonatomic) BOOL enableSendToIntermediary;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSendToIntermediaryMetadata;
/// When <em>true,</em> this account can use the Editor recipient type.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSendToManage;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSendToManageMetadata;
/// When <em>true,</em> the account can define the routing order of recipients for envelopes sent by using the eSignature API.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enableSequentialSigningAPI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSequentialSigningAPIMetadata;
/// When <em>true,</em> the account can define the routing order of recipients for envelopes sent by using the DocuSign application.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enableSequentialSigningUI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSequentialSigningUIMetadata;
/// When <em>true,</em> users can use the signing attachments feature to request attachments from signers.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSignerAttachments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSignerAttachmentsMetadata;
/// When <em>true,</em> enables comments for the account so that signers and recipients can make and respond to comments in documents belonging to the envelopes that they are sent.
@property (nonatomic) BOOL enableSigningExtensionComments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSigningExtensionCommentsMetadata;
/// When <em>true,</em> enables conversation functionality.
@property (nonatomic) BOOL enableSigningExtensionConversations;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSigningExtensionConversationsMetadata;
/// When <em>true,</em> switches Signing Order to On by default for new envelopes.
@property (nonatomic) BOOL enableSigningOrderSettingsForAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSigningOrderSettingsForAccountMetadata;
/// When <em>true,</em> a sender can allow signers to use the sign on paper option.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSignOnPaper;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSignOnPaperMetadata;
/// When <em>true,</em> a user can override the default default account setting for the Sign on Paper option, which specifies whether signers can sign documents on paper as an option to signing electronically.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSignOnPaperOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSignOnPaperOverrideMetadata;
/// When <em>true,</em> Sign with Notary functionality is enabled for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSignWithNotary;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSignWithNotaryMetadata;
/// When <em>true,</em> blockchain-based <a href="https://www.docusign.com/products/blockchain">Smart Contracts</a> are enabled. The default value is <em>false.</em>
@property (nonatomic) BOOL enableSmartContracts;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSmartContractsMetadata;
/// When <em>true,</em> the account can use SMS authentication.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSMSAuthentication;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSMSAuthenticationMetadata;
@property (nonatomic) BOOL enableSMSDeliveryAdditionalNotification;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSMSDeliveryAdditionalNotificationMetadata;
@property (nonatomic) BOOL enableSMSDeliveryPrimary;
/// Deprecated.
@property (nonatomic) BOOL enableSocialIdLogin;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSocialIdLoginMetadata;
/// When <em>true,</em> enables strikethrough formatting in documents.
@property (nonatomic) BOOL enableStrikeThrough;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableStrikeThroughMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL enableTransactionPoint;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableTransactionPointMetadata;
/// When <em>true,</em> Vaulting is enabled for the account.
@property (nonatomic) BOOL enableVaulting;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableVaultingMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL enableWitnessing;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableWitnessingMetadata;
/// When <em>true,</em> the template name must be unique.
@property (nonatomic) BOOL enforceTemplateNameUniqueness;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enforceTemplateNameUniquenessMetadata;
/// Shows the envelope integration rule for the account, which indicates whether custom admins can enable Connect for their accounts. Enumeration values are:   - `not_allowed` - `full`   <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable envelopeIntegrationAllowed;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable envelopeIntegrationAllowedMetadata;
/// When <em>true,</em> enables Connect for an account. Note that Connect integration requires additional configuration that must be set up for it to take effect; this switch is only the on/off control for the account.  <em>Note:</em> Only Admin users can change this setting, and only when `envelopeIntegrationAllowed` is set.
@property (nonatomic) BOOL envelopeIntegrationEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable envelopeIntegrationEnabledMetadata;
/// When <em>true,</em> envelopes sent by this account automatically have the envelope ID stamped in the document margins, unless the sender selects not to have the documents stamped.
@property (nonatomic) BOOL envelopeStampingDefaultValue;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable envelopeStampingDefaultValueMetadata;
@property (nonatomic, copy) NSString * _Nullable exitPrompt;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable exitPromptMetadata;
/// Boolean that specifies whether a member of an account can express send (without tags) or must send with tags on documents.
@property (nonatomic) BOOL expressSend;
/// Boolean that specifies whether a member of an account can send templates without the tags being stripped out, even when the account is configured to let its users express send only (they cannot use the tagger).
@property (nonatomic) BOOL expressSendAllowTabs;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable expressSendAllowTabsMetadata;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable expressSendMetadata;
/// Specifies the signature pad type. Valid values are:  - `none` - `topaz` - `e_padv9` - `e_pad_integrisign` - `topaz_sigplusextlite`  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable externalSignaturePadType;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable externalSignaturePadTypeMetadata;
/// When <em>true,</em> fax delivery to recipients is allowed for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL faxOutEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable faxOutEnabledMetadata;
@property (nonatomic, copy) NSString * _Nullable finishReminder;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable finishReminderMetadata;
/// When <em>true,</em> HTML used to implement <a href="https://www.docusign.com/products/guided-forms">Guided Forms</a> is enabled for the account.
@property (nonatomic) BOOL guidedFormsHtmlAllowed;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable guidedFormsHtmlAllowedMetadata;
@property (nonatomic, copy) NSString * _Nullable hasRecipientConnectClaimedDomain;
/// Boolean that specifies whether to hide the account address in the Certificate of Completion.
@property (nonatomic) BOOL hideAccountAddressInCoC;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable hideAccountAddressInCoCMetadata;
/// Boolean that specifies whether to hide the pricing functionality for an account.
@property (nonatomic) BOOL hidePricing;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable hidePricingMetadata;
/// Determines when a user's authentication with the account expires. Valid values are:  - `always`: Users are required to authenticate each time. - `variable`: If the authentication for a user is valid and falls within the value for the `idCheckExpireDays` property, the user is not required to authenticate again.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable idCheckExpire;
/// The number of days before user authentication credentials expire. A value of `0` specifies that users must re-authenticate for each new session.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable idCheckExpireDays;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable idCheckExpireDaysMetadata;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable idCheckExpireMetadata;
/// The number of minutes before user authentication credentials expire.
@property (nonatomic, copy) NSString * _Nullable idCheckExpireMinutes;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable idCheckExpireMinutesMetadata;
/// Indicates if authentication is configured for the account. Valid values are:  - `always`: Authentication checks are performed on every envelope. - `never`: Authentication checks are not performed on any envelopes. - `optional`: Authentication is configurable per envelope.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable idCheckRequired;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable idCheckRequiredMetadata;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable identityVerificationMetadata;
@property (nonatomic, copy) NSString * _Nullable idfxPhoneAuthenticationOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable idfxPhoneAuthenticationOverrideMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable ignoreErrorIfAnchorTabNotFound;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable ignoreErrorIfAnchorTabNotFoundMetadataEnabled;
/// A text field containing the question that an in-person signing host uses to collect personal information from the recipient. The recipient's response to this question is saved and can be viewed in the certificate associated with the envelope.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable inPersonIDCheckQuestion;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable inPersonIDCheckQuestionMetadata;
/// When <em>true,</em> in-person signing is enabled for the account.
@property (nonatomic) BOOL inPersonSigningEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable inPersonSigningEnabledMetadata;
/// When <em>true,</em> the account can send in-session (embedded) envelopes.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL inSessionEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable inSessionEnabledMetadata;
/// When <em>true,</em> emails are not sent to the in-session (embedded) recipients on an envelope.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL inSessionSuppressEmails;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable inSessionSuppressEmailsMetadata;
/// The maximum number of signing groups allowed on the account. The default value is `50`. This setting is only shown in responses that list account settings.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable maximumSigningGroups;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable maximumSigningGroupsMetadata;
/// The maximum number of users per signing group. The default value is `50`. This setting is only shown in responses that list account settings.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable maximumUsersPerSigningGroup;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable maximumUsersPerSigningGroupMetadata;
/// The maximum number of custom stamps.
@property (nonatomic, copy) NSString * _Nullable maxNumberOfCustomStamps;
/// The number of minutes of inactivity before a mobile user is automatically logged out of the system. Valid values are `1` to `120` minutes. The default value is `20` minutes.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable mobileSessionTimeout;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable mobileSessionTimeoutMetadata;
/// The number of active custom stamps associated with the account. DocuSign calculates this number automatically. This property is only visible to the DocuSign account manager.
@property (nonatomic, copy) NSString * _Nullable numberOfActiveCustomStamps;
/// Boolean that specifies whether to opt in for Signing v02 on Mobile Devices functionality.
@property (nonatomic) BOOL optInMobileSigningV02;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable optInMobileSigningV02Metadata;
/// Boolean that allows envelope senders to opt out of the recipient signing auto-navigation feature and opt out of updating tab font color.
@property (nonatomic) BOOL optOutAutoNavTextAndTabColorUpdates;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable optOutAutoNavTextAndTabColorUpdatesMetadata;
/// Boolean that specifies whether to allow envelope senders to opt out of using the new platform seal.
@property (nonatomic) BOOL optOutNewPlatformSeal;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable optOutNewPlatformSealPlatformMetadata;
/// When <em>true,</em> senders can allow recipients to provide a phone number for the Phone Authentication process.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL phoneAuthRecipientMayProvidePhoneNumber;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable phoneAuthRecipientMayProvidePhoneNumberMetadata;
/// The policy for adding a digital certificate to downloaded, printed, and emailed documents.   Possible values are:   - `no_sign` - `no_sign_allow_user_override` - `yes_sign` (Specifies that PDF files downloaded from the platform are signed.)  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable pkiSignDownloadedPDFDocs;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable pkiSignDownloadedPDFDocsMetadata;
@property (nonatomic, copy) NSString * _Nullable readOnlyMode;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable readOnlyModeMetadata;
/// When <em>true,</em> recipients receiving envelopes from this account can sign offline.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL recipientsCanSignOffline;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable recipientsCanSignOfflineMetadata;
/// When <em>true,</em> recipients receiving envelopes from this account can override auto-navigation functionality.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL recipientSigningAutoNavigationControl;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable recipientSigningAutoNavigationControlMetadata;
/// When <em>true,</em> recipients are required to use a 21 CFR part 11-compliant signing experience.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL require21CFRpt11Compliance;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable require21CFRpt11ComplianceMetadata;
/// When <em>true,</em> signers who decline to sign an envelope sent from this account are required to provide a reason for declining.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL requireDeclineReason;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable requireDeclineReasonMetadata;
/// When <em>true,</em> the account requires external management of users.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL requireExternalUserManagement;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable requireExternalUserManagementMetadata;
/// Sets the Digital Signature certificate requirements for sending envelopes. Valid values are:  - `none`: A Digital Signature certificate is not required. - `docusign_express`: Signers must use a DocuSign Express certificate. - `docusign_personal`: Signers must use a DocuSign personal certificate. - `safe` - `open_trust`: Signers must use an OpenTrust certificate.
@property (nonatomic, copy) NSString * _Nullable requireSignerCertificateType;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable requireSignerCertificateTypeMetadata;
/// The RSA account name.  <em>Note:</em> Only Admin users can change this setting. Modifying this value may disrupt your ID Check capability. Ensure you have the correct value before changing it.
@property (nonatomic, copy) NSString * _Nullable rsaVeridAccountName;
/// The password for the RSA account.   <em>Note:</em> Only Admin users can change this setting. Modifying this value may disrupt your ID Check capability. Ensure you have the correct value before changing it.
@property (nonatomic, copy) NSString * _Nullable rsaVeridPassword;
/// The RSA rule set used with the account.  <em>Note:</em> Only Admin users can change this setting. Modifying this value may disrupt your ID Check capability. Ensure you have the correct value before changing it.
@property (nonatomic, copy) NSString * _Nullable rsaVeridRuleset;
/// The user ID for the RSA account.  <em>Note:</em> Only Admin users can change this setting. Modifying this value may disrupt your ID Check capability. Ensure you have the correct value before changing it.
@property (nonatomic, copy) NSString * _Nullable rsaVeridUserId;
/// Sets how self-signed documents are presented to the email recipients. Valid values are:  - `include_pdf`: A PDF of the completed document is attached to the email. - `include_link`: A secure link to the self-signed documents is included    in the email.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable selfSignedRecipientEmailDocument;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable selfSignedRecipientEmailDocumentMetadata;
/// When <em>true,</em> the `selfSignedRecipientEmailDocument` user setting can be set for an individual user. The user setting overrides the account setting.  <em>Note:</em> Only Admin users can change this account setting.
@property (nonatomic) BOOL selfSignedRecipientEmailDocumentUserOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable selfSignedRecipientEmailDocumentUserOverrideMetadata;
/// When <em>true,</em> a signer can draw their signature in each location where a sign or initial tab exists. This functionality is typically used for mobile signing.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL senderCanSignInEachLocation;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable senderCanSignInEachLocationMetadata;
/// When <em>true,</em> a sender who is also a recipient of an envelope must follow the authentication requirements for the envelope.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL senderMustAuthenticateSigning;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable senderMustAuthenticateSigningMetadata;
/// The account-wide default font color to use for the content of the tab.  Valid values are:  - `Black` - `BrightBlue` - `BrightRed` - `DarkGreen` - `DarkRed` - `Gold` - `Green` - `NavyBlue` - `Purple` - `White`
@property (nonatomic, copy) NSString * _Nullable sendingTagsFontColor;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sendingTagsFontColorMetadata;
/// The account-wide default font to be used for the tab value. Supported fonts include:  - `Default` - `Arial` - `ArialNarrow` - `Calibri` - `CourierNew` - `Garamond` - `Georgia` - `Helvetica` - `LucidaConsole` - `MSGothic` - `MSMincho` - `OCR-A` - `Tahoma` - `TimesNewRoman` - `Trebuchet` - `Verdana`
@property (nonatomic, copy) NSString * _Nullable sendingTagsFontName;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sendingTagsFontNameMetadata;
/// The account-wide default font size used for the information in the tab:  - `Size7` - `Size8` - `Size9` - `Size10` - `Size11` - `Size12` - `Size14` - `Size16` - `Size18` - `Size20` - `Size22` - `Size24` - `Size26` - `Size28` - `Size36` - `Size48` - `Size72`
@property (nonatomic, copy) NSString * _Nullable sendingTagsFontSize;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sendingTagsFontSizeMetadata;
@property (nonatomic, copy) NSString * _Nullable sendLockoutRecipientNotification;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sendLockoutRecipientNotificationMetadata;
/// When true, the account can use the certified deliveries recipient type.
@property (nonatomic) BOOL sendToCertifiedDeliveryEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sendToCertifiedDeliveryEnabledMetadata;
/// The amount of idle activity time, in minutes, before a user is automatically logged out of the system. The minimum setting is 20 minutes and the maximum setting is 120 minutes.
@property (nonatomic, copy) NSString * _Nullable sessionTimeout;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sessionTimeoutMetadata;
/// When <em>true,</em> senders can set the email language to use for each recipient.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL setRecipEmailLang;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable setRecipEmailLangMetadata;
/// When <em>true,</em> setting a unique language for a recipient not only affects the email language, but also the signing language they are presented with. When <em>false,</em> only the email will be affected when the sender specifies a unique language for a recipient.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL setRecipSignLang;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable setRecipSignLangMetadata;
/// Boolean that specifies whether an account can use Shared Template Folders.
@property (nonatomic) BOOL sharedTemplateFolders;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sharedTemplateFoldersMetadata;
/// Boolean that specifies whether complete dialogs are displayed directly within an application in embedded signing sessions.
@property (nonatomic) BOOL showCompleteDialogInEmbeddedSession;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable showCompleteDialogInEmbeddedSessionMetadata;
/// When <em>true,</em> Conditional Routing options display to senders during the sending experience.
@property (nonatomic) BOOL showConditionalRoutingOnSend;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable showConditionalRoutingOnSendMetadata;
/// Boolean that specifies whether conditional field options are initially displayed (before a user makes entries).
@property (nonatomic) BOOL showInitialConditionalFields;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable showInitialConditionalFieldsMetadata;
/// Boolean that specifies whether localized watermarks are displayed.
@property (nonatomic) BOOL showLocalizedWatermarks;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable showLocalizedWatermarksMetadata;
@property (nonatomic) BOOL showMaskedFieldsWhenDownloadingDocumentAsSender;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable showMaskedFieldsWhenDownloadingDocumentAsSenderMetadata;
/// When <em>true,</em> show tutorials.
@property (nonatomic) BOOL showTutorials;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable showTutorialsMetadata;
/// Names of electronic or digital signature providers that can be used.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable signatureProviders;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signatureProvidersMetadata;
/// The format for the signature date. Valid values are:  - `d/M/yyyy` - `dd-MM-yy` - `dd-MMM-yy` - `dd-MM-yyyy` - `dd.MM.yyyy` - `dd-MMM-yyyy` - `dd MMMM yyyy` - `M/d/yyyy` - `MM-dd-yyyy` - `MM/dd/yyyy` - `MM/dd/yy` - `MMM-dd-yyyy` - `MMM d, yyyy` - `MMMM d, yyyy` - `yyyy-MM-dd` - `yyyy-MMM-dd` - `yyyy/MM/dd` - `yyyy MMMM d`  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable signDateFormat;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signDateFormatMetadata;
@property (nonatomic, copy) NSString * _Nullable signDateTimeAccountLanguageOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signDateTimeAccountLanguageOverrideMetadata;
@property (nonatomic, copy) NSString * _Nullable signDateTimeAccountTimezoneOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signDateTimeAccountTimezoneOverrideMetadata;
/// When <em>true,</em> the Certificate of Completion is included in the PDF of the envelope documents when it is downloaded.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerAttachCertificateToEnvelopePDF;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerAttachCertificateToEnvelopePDFMetadata;
/// When <em>true,</em> signer attachments are added to the parent document that contains the attachment. The default behavior creates a new document in the envelope for every signer attachment.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerAttachConcat;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerAttachConcatMetadata;
/// When <em>true,</em> a signer can create a DocuSign account after signing.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerCanCreateAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerCanCreateAccountMetadata;
/// When <em>true,</em> recipients can sign on a mobile device.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerCanSignOnMobile;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerCanSignOnMobileMetadata;
/// When <em>true,</em> an &quot;envelope complete&quot; email is sent to an in-session (embedded) or offline signer after DocuSign processes the envelope if in-session emails are not suppressed.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerInSessionUseEnvelopeCompleteEmail;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerInSessionUseEnvelopeCompleteEmailMetadata;
/// Sets the login requirements for signers. Valid values are:  - `login_not_required`: Signers are not required to log in. - `login_required_if_account_holder`: If the signer has a DocuSign account,   they must log in to sign the document. - `login_required_per_session`: The sender cannot send an envelope to anyone   who does not have a DocuSign account. - `login_required_per_envelope`: The sender cannot send an envelope to anyone   who does not have a DocuSign account, and the signer must also log in for   each envelope they will sign.   <em>Note:</em> Only Admin users can change this setting. If you use Direct PowerForms or captive (embedded signers), the &quot;Account required&quot; settings are bypassed for those signers. If your workflow requires that the signer have an account, you should not use those methods.
@property (nonatomic, copy) NSString * _Nullable signerLoginRequirements;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerLoginRequirementsMetadata;
/// When <em>true,</em> senders can only send an envelope to a recipient that has a DocuSign account.  <em>Note:</em> Only Account Administrators can change this setting.
@property (nonatomic) BOOL signerMustHaveAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerMustHaveAccountMetadata;
/// When <em>true,</em> signers must log in to the DocuSign platform to sign an envelope.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerMustLoginToSign;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerMustLoginToSignMetadata;
/// When <em>true,</em> the initial values of all SecureFields are written to the document when it is sent.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerShowSecureFieldInitialValues;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerShowSecureFieldInitialValuesMetadata;
/// The number of minutes that a signing session stays alive without any activity.
@property (nonatomic, copy) NSString * _Nullable signingSessionTimeout;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signingSessionTimeoutMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable signingUiVersion;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signingUiVersionMetadata;
/// The format for the signature time. Valid values are:  - `none` - `HH:mm` - `h:mm` - `HH:mm:ss` - `h:mm:ss`
@property (nonatomic, copy) NSString * _Nullable signTimeFormat;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signTimeFormatMetadata;
/// When <em>true,</em> the time shows the AM or PM indicator.
@property (nonatomic) BOOL signTimeShowAmPm;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signTimeShowAmPmMetadata;
/// When <em>true,</em> simplified sending is enabled for the account. The default value is <em>false.</em>
@property (nonatomic) BOOL simplifiedSendingEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable simplifiedSendingEnabledMetadata;
/// When <em>true,</em> single sign-on (SSO) is enabled.
@property (nonatomic) BOOL singleSignOnEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable singleSignOnEnabledMetadata;
/// When <em>true,</em> do not require authentication prompt for viewing completed envelopes
@property (nonatomic) BOOL skipAuthCompletedEnvelopes;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable skipAuthCompletedEnvelopesMetadata;
/// When <em>true,</em> recipients can use <a href="https://support.docusign.com/guides/signer-authentication">social ids</a> when signing
@property (nonatomic) BOOL socialIdRecipAuth;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable socialIdRecipAuthMetadata;
/// When <em>true,</em> senders can specify the visibility of the documents in an envelope at the recipient level.
@property (nonatomic) BOOL specifyDocumentVisibility;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable specifyDocumentVisibilityMetadata;
/// When <em>true,</em> when initiating correction of an in-flight envelope the sender starts in advanced correct mode.
@property (nonatomic) BOOL startInAdvancedCorrect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable startInAdvancedCorrectMetadata;
/// When <em>true,</em> account users must accept supplemental documents when signing.
@property (nonatomic) BOOL supplementalDocumentsMustAccept;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable supplementalDocumentsMustAcceptMetadata;
/// When <em>true,</em> account users must both view and accept supplemental documents when signing.
@property (nonatomic) BOOL supplementalDocumentsMustRead;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable supplementalDocumentsMustReadMetadata;
/// When <em>true,</em> account users must view supplemental documents when signing.
@property (nonatomic) BOOL supplementalDocumentsMustView;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable supplementalDocumentsMustViewMetadata;
/// Boolean that specifies whether or not API calls require a x509 cert in the header of the call.
@property (nonatomic) BOOL suppressCertificateEnforcement;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable suppressCertificateEnforcementMetadata;
/// Specifies the time zone to use with the API.  Valid values are:  - `TZ_01_AfghanistanStandardTime` - `TZ_02_AlaskanStandardTime` - `TZ_03_ArabStandardTime` - `TZ_04_ArabianStandardTime` - `TZ_05_ArabicStandardTime` - `TZ_06_ArgentinaStandardTime` - `TZ_07_AtlanticStandardTime` - `TZ_08_AUS_CentralStandardTime` - `TZ_09_AUS_EasternStandardTime` - `TZ_10_AzerbaijanStandardTime` - `TZ_11_AzoresStandardTime` - `TZ_12_BangladeshStandardTime` - `TZ_13_CanadaCentralStandardTime` - `TZ_14_CapeVerdeStandardTime` - `TZ_15_CaucasusStandardTime` - `TZ_16_CentralAustraliaStandardTime` - `TZ_17_CentralAmericaStandardTime` - `TZ_18_CentralAsiaStandardTime` - `TZ_19_CentralBrazilianStandardTime` - `TZ_20_CentralEuropeStandardTime` - `TZ_21_CentralEuropeanStandardTime` - `TZ_22_CentralPacificStandardTime` - `TZ_23_CentralStandardTime` - `TZ_24_CentralStandardTimeMexico` - `TZ_25_ChinaStandardTime` - `TZ_26_DatelineStandardTime` - `TZ_27_E_AfricaStandardTime` - `TZ_28_E_AustraliaStandardTime` - `TZ_29_E_EuropeStandardTime` - `TZ_30_E_SouthAmericaStandardTime` - `TZ_31_EasternStandardTime` - `TZ_32_EgyptStandardTime` - `TZ_33_EkaterinburgStandardTime` - `TZ_34_FijiStandardTime` - `TZ_35_FLE_StandardTime` - `TZ_36_GeorgianStandardTime` - `TZ_37_GMT_StandardTime` - `TZ_38_GreenlandStandardTime` - `TZ_39_GreenwichStandardTime` - `TZ_40_GTB_StandardTime` - `TZ_41_HawaiianStandardTime` - `TZ_42_IndiaStandardTime` - `TZ_43_IranStandardTime` - `TZ_44_IsraelStandardTime` - `TZ_45_JordanStandardTime` - `TZ_46_KaliningradStandardTime` - `TZ_47_KamchatkaStandardTime` - `TZ_48_KoreaStandardTime` - `TZ_49_MagadanStandardTime` - `TZ_50_MauritiusStandardTime` - `TZ_51_MidAtlanticStandardTime` - `TZ_52_MiddleEastStandardTime` - `TZ_53_MontevideoStandardTime` - `TZ_54_MoroccoStandardTime` - `TZ_55_MountainStandardTime` - `TZ_56_MountainStandardTimeMMexico` - `TZ_57_MyanmarStandardTime` - `TZ_58_N_CentralAsiaStandardTime` - `TZ_59_NamibiaStandardTime` - `TZ_60_NepalStandardTime` - `TZ_61_NewZealandStandardTime` - `TZ_62_NewfoundlandStandardTime` - `TZ_63_NorthAsiaEastStandardTime` - `TZ_64_NorthAsiaStandardTime` - `TZ_65_PacificSAStandardTime` - `TZ_66_PacificStandardTime` - `TZ_67_PacificStandardTimeMexico` - `TZ_68_PakistanStandardTime` - `TZ_69_ParaguayStandardTime` - `TZ_70_RomanceStandardTime` - `TZ_71_RussianStandardTime` - `TZ_72_SAEasternStandardTime` - `TZ_73_SAPacificStandardTime` - `TZ_74_SAWesternStandardTime` - `TZ_75_SamoaStandardTime` - `TZ_76_SE_AsiaStandardTime` - `TZ_77_SingaporeStandardTime` - `TZ_78_SouthAfricaStandardTime` - `TZ_79_SriLankaStandardTime` - `TZ_80_SyriaStandardTime` - `TZ_81_TaipeiStandardTime` - `TZ_82_TasmaniaStandardTime` - `TZ_83_TokyoStandardTime` - `TZ_84_TongaStandardTime` - `TZ_85_TurkeyStandardTime` - `TZ_86_UlaanbaatarStandardTime` - `TZ_87_US_EasternStandardTime` - `TZ_88_USMountainStandardTime` - `TZ_89_VenezuelaStandardTime` - `TZ_90_VladivostokStandardTime` - `TZ_91_W_AustraliaStandardTime` - `TZ_92_W_CentralAfricaStandardTime` - `TZ_93_W_EuropeStandardTime` - `TZ_94_WestAsiaStandardTime` - `TZ_95_WestPacificStandardTime` - `TZ_96_YakutskStandardTime`
@property (nonatomic, copy) NSString * _Nullable timezoneOffsetAPI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneOffsetAPIMetadata;
/// Specifies the time zone to use in the UI.  Valid values are:  - `TZ_01_AfghanistanStandardTime` - `TZ_02_AlaskanStandardTime` - `TZ_03_ArabStandardTime` - `TZ_04_ArabianStandardTime` - `TZ_05_ArabicStandardTime` - `TZ_06_ArgentinaStandardTime` - `TZ_07_AtlanticStandardTime` - `TZ_08_AUS_CentralStandardTime` - `TZ_09_AUS_EasternStandardTime` - `TZ_10_AzerbaijanStandardTime` - `TZ_11_AzoresStandardTime` - `TZ_12_BangladeshStandardTime` - `TZ_13_CanadaCentralStandardTime` - `TZ_14_CapeVerdeStandardTime` - `TZ_15_CaucasusStandardTime` - `TZ_16_CentralAustraliaStandardTime` - `TZ_17_CentralAmericaStandardTime` - `TZ_18_CentralAsiaStandardTime` - `TZ_19_CentralBrazilianStandardTime` - `TZ_20_CentralEuropeStandardTime` - `TZ_21_CentralEuropeanStandardTime` - `TZ_22_CentralPacificStandardTime` - `TZ_23_CentralStandardTime` - `TZ_24_CentralStandardTimeMexico` - `TZ_25_ChinaStandardTime` - `TZ_26_DatelineStandardTime` - `TZ_27_E_AfricaStandardTime` - `TZ_28_E_AustraliaStandardTime` - `TZ_29_E_EuropeStandardTime` - `TZ_30_E_SouthAmericaStandardTime` - `TZ_31_EasternStandardTime` - `TZ_32_EgyptStandardTime` - `TZ_33_EkaterinburgStandardTime` - `TZ_34_FijiStandardTime` - `TZ_35_FLE_StandardTime` - `TZ_36_GeorgianStandardTime` - `TZ_37_GMT_StandardTime` - `TZ_38_GreenlandStandardTime` - `TZ_39_GreenwichStandardTime` - `TZ_40_GTB_StandardTime` - `TZ_41_HawaiianStandardTime` - `TZ_42_IndiaStandardTime` - `TZ_43_IranStandardTime` - `TZ_44_IsraelStandardTime` - `TZ_45_JordanStandardTime` - `TZ_46_KaliningradStandardTime` - `TZ_47_KamchatkaStandardTime` - `TZ_48_KoreaStandardTime` - `TZ_49_MagadanStandardTime` - `TZ_50_MauritiusStandardTime` - `TZ_51_MidAtlanticStandardTime` - `TZ_52_MiddleEastStandardTime` - `TZ_53_MontevideoStandardTime` - `TZ_54_MoroccoStandardTime` - `TZ_55_MountainStandardTime` - `TZ_56_MountainStandardTimeMMexico` - `TZ_57_MyanmarStandardTime` - `TZ_58_N_CentralAsiaStandardTime` - `TZ_59_NamibiaStandardTime` - `TZ_60_NepalStandardTime` - `TZ_61_NewZealandStandardTime` - `TZ_62_NewfoundlandStandardTime` - `TZ_63_NorthAsiaEastStandardTime` - `TZ_64_NorthAsiaStandardTime` - `TZ_65_PacificSAStandardTime` - `TZ_66_PacificStandardTime` - `TZ_67_PacificStandardTimeMexico` - `TZ_68_PakistanStandardTime` - `TZ_69_ParaguayStandardTime` - `TZ_70_RomanceStandardTime` - `TZ_71_RussianStandardTime` - `TZ_72_SAEasternStandardTime` - `TZ_73_SAPacificStandardTime` - `TZ_74_SAWesternStandardTime` - `TZ_75_SamoaStandardTime` - `TZ_76_SE_AsiaStandardTime` - `TZ_77_SingaporeStandardTime` - `TZ_78_SouthAfricaStandardTime` - `TZ_79_SriLankaStandardTime` - `TZ_80_SyriaStandardTime` - `TZ_81_TaipeiStandardTime` - `TZ_82_TasmaniaStandardTime` - `TZ_83_TokyoStandardTime` - `TZ_84_TongaStandardTime` - `TZ_85_TurkeyStandardTime` - `TZ_86_UlaanbaatarStandardTime` - `TZ_87_US_EasternStandardTime` - `TZ_88_USMountainStandardTime` - `TZ_89_VenezuelaStandardTime` - `TZ_90_VladivostokStandardTime` - `TZ_91_W_AustraliaStandardTime` - `TZ_92_W_CentralAfricaStandardTime` - `TZ_93_W_EuropeStandardTime` - `TZ_94_WestAsiaStandardTime` - `TZ_95_WestPacificStandardTime` - `TZ_96_YakutskStandardTime`
@property (nonatomic, copy) NSString * _Nullable timezoneOffsetUI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneOffsetUIMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable universalSignatureOptIn;
/// Reserved for DocuSign.
@property (nonatomic) BOOL useAccountLevelEmail;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useAccountLevelEmailMetadata;
/// When <em>true,</em> the account uses an Electronic Record and Signature Disclosure Statement.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL useConsumerDisclosure;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useConsumerDisclosureMetadata;
/// When <em>true,</em> specifies that recipients in the same account as the sender must agree to eSign an Electronic Record and Signature Disclosure Statement.
@property (nonatomic) BOOL useConsumerDisclosureWithinAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useConsumerDisclosureWithinAccountMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL useDerivedKeys;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useDerivedKeysMetadata;
/// When <em>true,</em> signers are required to use Express Digital Signatures.
@property (nonatomic) BOOL useDocuSignExpressSignerCertificate;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useDocuSignExpressSignerCertificateMetadata;
@property (nonatomic) BOOL useMultiAppGroupsData;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useMultiAppGroupsDataMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL useNewBlobForPdf;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useNewBlobForPdfMetadata;
/// When <em>true,</em> signers are required to use SAFE digital signatures.
@property (nonatomic) BOOL useSAFESignerCertificates;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useSAFESignerCertificatesMetadata;
/// When <em>true,</em> the account can use the API.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL usesAPI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable usesAPIMetadata;
/// Boolean that specifies whether the account uses the digital signature provider platform to eSign.
@property (nonatomic) BOOL useSignatureProviderPlatform;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useSignatureProviderPlatformMetadata;
/// Boolean that specifies whether validations on recipient email domains are allowed.
@property (nonatomic) BOOL validationsAllowed;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable validationsAllowedMetadata;
/// Valid values are:  - `docusign` - `account`
@property (nonatomic, copy) NSString * _Nullable validationsBrand;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable validationsBrandMetadata;
/// Valid values are:  - `none` - `monthly`
@property (nonatomic, copy) NSString * _Nullable validationsCadence;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable validationsCadenceMetadata;
/// When <em>true,</em> enables validations.
@property (nonatomic) BOOL validationsEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable validationsEnabledMetadata;
/// Valid values are:  - `none` - `life_sciences_part11`
@property (nonatomic, copy) NSString * _Nullable validationsReport;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable validationsReportMetadata;
/// When <em>true,</em> the <a href="https://support.docusign.com/en/articles/How-do-I-manage-the-watermark-for-In-Process-envelopes-sent-from-my-account">watermark feature</a> is enabled for the account.
@property (nonatomic) BOOL waterMarkEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable waterMarkEnabledMetadata;
/// When <em>true,</em> sent reminders are included in the envelope history.
@property (nonatomic) BOOL writeReminderToEnvelopeHistory;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable writeReminderToEnvelopeHistoryMetadata;
/// The smallest screen allowed.
@property (nonatomic, copy) NSString * _Nullable wurflMinAllowableScreenSize;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable wurflMinAllowableScreenSizeMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIPropertyMetadata;
@class DSAPIRecipientAdditionalNotification;
@class DSAPIDocumentVisibility;
@class DSAPIRecipientEmailNotification;
@class DSAPIErrorDetails;
@class DSAPIRecipientAttachment;
@class DSAPIUserInfo;
@class DSAPIRecipientSMSAuthentication;
@class DSAPISocialAuthentication;

/// Contains information about an agent recipient. An agent is a recipient who can add name and email information for recipients that appear after the agent in routing order.
SWIFT_CLASS("_TtC11DocuSignAPI10DSAPIAgent")
@interface DSAPIAgent : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic) BOOL addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The email ID of the agent. Notification of the document to sign is sent to this email id.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name. Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The total number of tabs in the documents. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPIMergeField;

/// A tab that allows the recipient to approve documents without placing a signature or initials on the document.
SWIFT_CLASS("_TtC11DocuSignAPI12DSAPIApprove")
@interface DSAPIApprove : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// Specifies the approval text that displays in the tab.
@property (nonatomic, copy) NSString * _Nullable buttonText;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable buttonTextMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to be applied. You can only use this when adding new tabs for a recipient. When used, the new tab inherits all of the properties of the custom tab.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// Specifies the page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.  <em>Note:</em> Approve, Date Signed, Decline, Email Address, and Note tabs do not display custom tooltip text in the signing interface. Although you can technically set a value via the API for these tabs, it will not be displayed to the recipient.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Contains information about an attachment.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIAttachment")
@interface DSAPIAttachment : NSObject
/// Valid values are `sender` and `senderAndAllRecipients`.
@property (nonatomic, copy) NSString * _Nullable accessControl;
/// The unique identifier for the attachment.
@property (nonatomic, copy) NSString * _Nullable attachmentId;
/// Specifies the type of the attachment for the recipient.
@property (nonatomic, copy) NSString * _Nullable attachmentType;
/// A Base64-encoded representation of the attachment that is used to upload and download the file. File attachments may be up to 50 MB in size.
@property (nonatomic, copy) NSString * _Nullable data;
/// A label for the attachment. Potential values include:   - `guidedForm`: <a href="https://www.docusign.com/products/guided-forms">Guided forms</a> provide a step-by-step, mobile-ready experience to help signers easily complete long or complex forms. - `eventNotifications`: A list of envelope-level event statuses that trigger Connect to send updates to the endpoint specified in the `url` property.
@property (nonatomic, copy) NSString * _Nullable label;
/// The name of the attachment.
@property (nonatomic, copy) NSString * _Nullable name;
/// The URL of a previously staged chunked upload. Using a chunked upload enables you to stage a large, chunkable temp file. You then use the `remoteUrl` property to reference the chunked upload as the content in attachment and document-related requests. The `remoteUrl` property cannot be used for downloads.
@property (nonatomic, copy) NSURL * _Nullable remoteUrl;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAccessControl:(NSString * _Nullable)accessControl attachmentId:(NSString * _Nullable)attachmentId attachmentType:(NSString * _Nullable)attachmentType data:(NSString * _Nullable)data label:(NSString * _Nullable)label name:(NSString * _Nullable)name remoteUrl:(NSURL * _Nullable)remoteUrl OBJC_DESIGNATED_INITIALIZER;
@end


/// Contains information about the BCC email address.
SWIFT_CLASS("_TtC11DocuSignAPI20DSAPIBccEmailAddress")
@interface DSAPIBccEmailAddress : NSObject
/// Only users with canManageAccount setting can use this option. An array of up to 5 email addresses the envelope is sent to as a BCC email.    Example: If your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.
@property (nonatomic, copy) NSString * _Nullable bccEmailAddressId;
/// Specifies the BCC email address. DocuSign verifies that the email format is correct, but does not verify that the email is active.Using this overrides the BCC for Email Archive information setting for this envelope.  Maximum of length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBccEmailAddressId:(NSString * _Nullable)bccEmailAddressId email:(NSString * _Nullable)email OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPITabs;

/// Contains information about a carbon copy recipient. Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date or add information to any of the documents.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPICarbonCopy")
@interface DSAPICarbonCopy : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditEmail;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditName;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Not applicable for Carbon Copy recipients.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address. Notification of the document to sign is sent to this email address.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name. Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
@property (nonatomic, copy) NSString * _Nullable linkedAccountConfigurationId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The total number of tabs in the documents. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Contains information about a certified delivery recipient. Certified delivery recipients must receive the completed documents for the envelope to be completed. However, they don't need to sign, initial, date or add information to any of the documents.
SWIFT_CLASS("_TtC11DocuSignAPI22DSAPICertifiedDelivery")
@interface DSAPICertifiedDelivery : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditEmail;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditName;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name. Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The status of the recipient. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The total number of tabs in the documents. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to select a yes/no (on/off) option.
SWIFT_CLASS("_TtC11DocuSignAPI13DSAPICheckbox")
@interface DSAPICheckbox : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to apply. This property can only be used when adding new tabs for a recipient. When used, the new tab inherits all custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// This property does not apply to `checkbox` tabs.  To require users to check at least one, or at most some number of checkboxes, associate the checkbox tabs with a [`tabGroup`][tabGroup]. Then set the following `tabGroup` properties:  - [`maximumAllowed`][maximumAllowed] - [`minimumRequired`][minimumRequired] - [`groupRule`][groupRule] specifies how the other two properties are interpreted.  You can find an example at [Stack Overflow][so].  [so]:               https://stackoverflow.com/questions/58209376/checkbox-validation-using-docusign-rest-api/58210277#58210277 [tabGroup]:         /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups [groupRule]:        /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_grouprule [maximumAllowed]:   /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_maximumallowed [minimumRequired]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_minimumrequired
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the checkbox is selected.
@property (nonatomic) BOOL selected;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable selectedMetadata;
@property (nonatomic, copy) NSString * _Nullable selectedOriginal;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable selectedOriginalMetadata;
/// When <em>true,</em> this tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-7, -6)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-7, -6)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// This client specific details for the telemetry events.
SWIFT_CLASS("_TtC11DocuSignAPI18DSAPIClientContext")
@interface DSAPIClientContext : NSObject
/// The name of application.
@property (nonatomic, copy) NSString * _Nullable application;
/// The name of environment.
@property (nonatomic, copy) NSString * _Nullable environment;
/// The name of site.
@property (nonatomic, copy) NSString * _Nullable site;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithApplication:(NSString * _Nullable)application environment:(NSString * _Nullable)environment site:(NSString * _Nullable)site OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that displays the recipient's company name.
SWIFT_CLASS("_TtC11DocuSignAPI12DSAPICompany")
@interface DSAPICompany : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Details about consumer disclosures.
SWIFT_CLASS("_TtC11DocuSignAPI23DSAPIConsumerDisclosure")
@interface DSAPIConsumerDisclosure : NSObject
/// The GUID of the account associated with the consumer disclosure.
@property (nonatomic, copy) NSString * _Nullable accountEsignId;
/// When <em>true,</em> indicates that the customer can withdraw their consent to the consumer disclosure when they decline to sign documents. If these recipients sign documents sent to them from your account in the future, they will be required to agree to the terms in the disclosure. The default value is <em>false.</em> <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowCDWithdraw;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowCDWithdrawMetadata;
/// If the customer needs to change their email address, this is the email address to which they should the change request.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable changeEmail;
/// Other information about the requirements for the user to change their email address.  Maximum length: 255 characters.  Example:   `We do not require any other information from you to change your email address.`
@property (nonatomic, copy) NSString * _Nullable changeEmailOther;
/// Specifies the company name used in the disclosure. The default value is the account name.  However, if your account uses signing brands that specify a company name, you can substitute the brand's company name by setting the `useBrand` property to <em>true.</em> Whenever an envelope is sent from the account that uses a signing brand with a specified `companyName`, that value is used in email notifications and in the signing experience.  <em>Note:</em> This substitution only works if you use the default legal disclosure or if you apply the `companyName` to the merge fields in a custom ERSD. You must also set the value of the `useBrand` property to <em>true.</em>
@property (nonatomic, copy) NSString * _Nullable companyName;
/// The phone number of the company associated with the consumer disclosure, as a free-formatted string.
@property (nonatomic, copy) NSString * _Nullable companyPhone;
/// The cost per page if the customer requests paper copies.  Example:   `0.0000`
@property (nonatomic, copy) NSString * _Nullable copyCostPerPage;
/// Specifies the fee collection method for cases in which the customer requires paper copies of the document.  Maximum length: 255 characters.  Example:   `We will bill you for any fees at that time, if any.`
@property (nonatomic, copy) NSString * _Nullable copyFeeCollectionMethod;
/// The email address to which the customer should send a request for copies of a document.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable copyRequestEmail;
/// When <em>true,</em> indicates that the consumer disclosure is a custom disclosure. The default is <em>false.</em>
@property (nonatomic) BOOL custom;
/// When <em>true</em> (default), indicates that eSign is enabled.
@property (nonatomic, copy) NSString * _Nullable enableEsign;
/// The final, assembled text of the Electronic Record and Signature Disclosure that includes the appropriate `companyName` and other specifics. It also includes the HTML tags used for formatting.
@property (nonatomic, copy) NSString * _Nullable esignAgreement;
/// The template for the Electronic Record and Signature Disclosure, which contains placeholders for information such as the `companyName`. It also includes the HTML tags used for formatting.  <em>Note:</em> If you are switching to or updating a custom disclosure, you can edit both the text and the HTML formatting.
@property (nonatomic, copy) NSString * _Nullable esignText;
/// The code for the language version of the disclosure. The following languages are supported:  - Arabic (`ar`) - Bulgarian (`bg`) - Czech (`cs`) - Chinese Simplified (`zh_CN`) - Chinese Traditional (`zh_TW`) - Croatian (`hr`) - Danish (`da`) - Dutch (`nl`) - English US (`en`) - English UK (`en_GB`) - Estonian (`et`) - Farsi (`fa`) - Finnish (`fi`) - French (`fr`) - French Canadian (`fr_CA`) - German (`de`) - Greek (`el`) - Hebrew (`he`) - Hindi (`hi`) - Hungarian (`hu`) - Bahasa Indonesian (`id`) - Italian (`it`) - Japanese (`ja`) - Korean (`ko`) - Latvian (`lv`) - Lithuanian (`lt`) - Bahasa Melayu (`ms`) - Norwegian (`no`) - Polish (`pl`) - Portuguese (`pt`) - Portuguese Brazil (`pt_BR`) - Romanian (`ro`) - Russian (`ru`) - Serbian (`sr`) - Slovak (`sk`) - Slovenian (`sl`) - Spanish (`es`) - Spanish Latin America (`es_MX`) - Swedish (`sv`) - Thai (`th`) - Turkish (`tr`) - Ukrainian (`uk`)  - Vietnamese (`vi`)  Additionally, you can automatically detect the browser language being used by the viewer and display the disclosure in that language by setting the value to `browser`.
@property (nonatomic, copy) NSString * _Nullable languageCode;
/// When <em>true,</em> the  recipient must agree to the consumer disclosure. The value of this property is read-only. It is calculated based on the account setting `consumerDisclosureFrequency` and the user's actions.
@property (nonatomic) BOOL mustAgreeToEsign;
/// <em>Deprecated.</em>   The `pdfId` property in the consumer_disclosure PUT request is deprecated. For security reasons going forward, any value provided in the request packet must be ignored.
@property (nonatomic, copy) NSString * _Nullable pdfId;
/// When <em>true,</em> specifies that the company name in the signing brand is used for the disclosure. Whenever an envelope is sent from the account that uses a signing brand with a specified company name, that value is used in email notifications and in the signing experience.    When <em>false</em> (default), or if the signing brand does not specify a company name, the account name is used instead.  <em>Note:</em> This substitution only works if you use the default legal disclosure or if you apply the `companyName` to the merge fields in a custom ERSD.
@property (nonatomic) BOOL useBrand;
/// When <em>true,</em> specifies that recipients in the same account as the sender must agree to eSign an Electronic Record and Signature Disclosure Statement.
@property (nonatomic) BOOL useConsumerDisclosureWithinAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useConsumerDisclosureWithinAccountMetadata;
/// Contains the first address line of the postal address to which a customer can send a consent withdrawal notification.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawAddressLine1;
/// Contains the second address line of the postal address to which a customer can send a consent withdrawal notification.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawAddressLine2;
/// When <em>true</em> (default), indicates that the customer can withdraw consent by email.
@property (nonatomic, copy) NSString * _Nullable withdrawByEmail;
/// When <em>true,</em> indicates that the customer can withdraw consent by postal mail. The default is <em>false.</em>
@property (nonatomic) BOOL withdrawByMail;
/// When <em>true,</em> indicates that the customer can withdraw consent by phone. The default is <em>false.</em>
@property (nonatomic) BOOL withdrawByPhone;
/// Contains the city of the postal address to which a customer can send a consent withdrawal notification.  Maximum length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawCity;
/// Text indicating the consequences of withdrawing consent.  Maximum length: 255 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawConsequences;
/// Contains the email address to which a customer can send a consent withdrawal notification.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawEmail;
/// Contains any other information needed to withdraw consent.  Maximum length: 255 characters.  Example:  `We do not need any other information from you to withdraw consent.`
@property (nonatomic, copy) NSString * _Nullable withdrawOther;
/// Contains the phone number that a customer can call to register consent withdrawal notification as a free-formatted string.  Maximum length: 20 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawPhone;
/// Contains the postal code of the postal address to which a customer can send a consent withdrawal notification.  Maximum length: 20 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawPostalCode;
/// Contains the state of the postal address to which a customer can send a consent withdrawal notification.  Example: `PA`
@property (nonatomic, copy) NSString * _Nullable withdrawState;
- (nonnull instancetype)initWithAccountEsignId:(NSString * _Nullable)accountEsignId allowCDWithdraw:(BOOL)allowCDWithdraw allowCDWithdrawMetadata:(DSAPISettingsMetadata * _Nullable)allowCDWithdrawMetadata changeEmail:(NSString * _Nullable)changeEmail changeEmailOther:(NSString * _Nullable)changeEmailOther companyName:(NSString * _Nullable)companyName companyPhone:(NSString * _Nullable)companyPhone copyCostPerPage:(NSString * _Nullable)copyCostPerPage copyFeeCollectionMethod:(NSString * _Nullable)copyFeeCollectionMethod copyRequestEmail:(NSString * _Nullable)copyRequestEmail custom:(BOOL)custom enableEsign:(NSString * _Nullable)enableEsign esignAgreement:(NSString * _Nullable)esignAgreement esignText:(NSString * _Nullable)esignText languageCode:(NSString * _Nullable)languageCode mustAgreeToEsign:(BOOL)mustAgreeToEsign pdfId:(NSString * _Nullable)pdfId useBrand:(BOOL)useBrand useConsumerDisclosureWithinAccount:(BOOL)useConsumerDisclosureWithinAccount useConsumerDisclosureWithinAccountMetadata:(DSAPISettingsMetadata * _Nullable)useConsumerDisclosureWithinAccountMetadata withdrawAddressLine1:(NSString * _Nullable)withdrawAddressLine1 withdrawAddressLine2:(NSString * _Nullable)withdrawAddressLine2 withdrawByEmail:(NSString * _Nullable)withdrawByEmail withdrawByMail:(BOOL)withdrawByMail withdrawByPhone:(BOOL)withdrawByPhone withdrawCity:(NSString * _Nullable)withdrawCity withdrawConsequences:(NSString * _Nullable)withdrawConsequences withdrawEmail:(NSString * _Nullable)withdrawEmail withdrawOther:(NSString * _Nullable)withdrawOther withdrawPhone:(NSString * _Nullable)withdrawPhone withdrawPostalCode:(NSString * _Nullable)withdrawPostalCode withdrawState:(NSString * _Nullable)withdrawState OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIListCustomField;
@class DSAPITextCustomField;

/// Contains information about custom fields.
SWIFT_CLASS("_TtC11DocuSignAPI17DSAPICustomFields")
@interface DSAPICustomFields : NSObject
/// An array of list custom fields.
@property (nonatomic, copy) NSArray<DSAPIListCustomField *> * _Nullable listCustomFields;
/// An array of text custom fields.
@property (nonatomic, copy) NSArray<DSAPITextCustomField *> * _Nullable textCustomFields;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithListCustomFields:(NSArray<DSAPIListCustomField *> * _Nullable)listCustomFields textCustomFields:(NSArray<DSAPITextCustomField *> * _Nullable)textCustomFields OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to enter a date. Date tabs are one-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. If you need a particular date format enforced, DocuSign recommends using a Text tab with a validation pattern and a validation message to enforce the format.
SWIFT_CLASS("_TtC11DocuSignAPI9DSAPIDate")
@interface DSAPIDate : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A tab that displays the date that the recipient signed the document.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIDateSigned")
@interface DSAPIDateSigned : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.  <em>Note:</em> Approve, Date Signed, Decline, Email Address, and Note tabs do not display custom tooltip text in the signing interface. Although you can technically set a value via the API for these tabs, it will not be displayed to the recipient.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.  This property contains the following information about the central rectangle:  - `DateAreaX`: The X axis position of the top-left corner. - `DateAreaY`: The Y axis position of the top-left corner. - `DateAreaWidth`: The width of the rectangle. - `DateAreaHeight`: The height of the rectangle.
SWIFT_CLASS("_TtC11DocuSignAPI24DSAPIDateStampProperties")
@interface DSAPIDateStampProperties : NSObject
/// The height of the rectangle.
@property (nonatomic, copy) NSString * _Nullable dateAreaHeight;
/// The width of the rectangle.
@property (nonatomic, copy) NSString * _Nullable dateAreaWidth;
/// The X axis position of the top-left corner.
@property (nonatomic, copy) NSString * _Nullable dateAreaX;
/// The Y axis position of the top-left corner.
@property (nonatomic, copy) NSString * _Nullable dateAreaY;
- (nonnull instancetype)initWithDateAreaHeight:(NSString * _Nullable)dateAreaHeight dateAreaWidth:(NSString * _Nullable)dateAreaWidth dateAreaX:(NSString * _Nullable)dateAreaX dateAreaY:(NSString * _Nullable)dateAreaY OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A tab that allows the recipient the option of declining an envelope. If the recipient clicks the tab during the signing process, the envelope is voided.
SWIFT_CLASS("_TtC11DocuSignAPI12DSAPIDecline")
@interface DSAPIDecline : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// Specifies the decline text displayed in the tab.
@property (nonatomic, copy) NSString * _Nullable buttonText;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable buttonTextMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// The reason the recipient declined the document.
@property (nonatomic, copy) NSString * _Nullable declineReason;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable declineReasonMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.  <em>Note:</em> Approve, Date Signed, Decline, Email Address, and Note tabs do not display custom tooltip text in the signing interface. Although you can technically set a value via the API for these tabs, it will not be displayed to the recipient.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPINameValue;

/// A document object.
SWIFT_CLASS("_TtC11DocuSignAPI13DSAPIDocument")
@interface DSAPIDocument : NSObject
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable applyAnchorTabs;
@property (nonatomic, copy) NSString * _Nullable assignTabsToRecipientId;
/// This string sets the display and behavior properties of the document during signing. Valid values:  * `modal`<br>   The document is shown as a supplement action strip   and can be viewed, downloaded, or printed in a modal window.   This is the recommended value for supplemental documents.   * `inline`<br>   The document is shown in the normal signing window.   This value is not used with supplemental documents,   but is the default value for all other documents.
@property (nonatomic, copy) NSString * _Nullable display;
/// The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.
@property (nonatomic, copy) NSString * _Nullable documentBase64;
/// The array of name/value custom data strings to be added to a document. Custom document field information is returned in the status, but otherwise is not used by DocuSign. The array contains the elements:   * `name`: A string that can be a maximum of 50 characters.  * `value`: A string that can be a maximum of 200 characters.  If you are using XML, the name/value pair is contained in a `nameValue` element.
@property (nonatomic, copy) NSArray<DSAPINameValue *> * _Nullable documentFields;
/// Specifies the document ID of this document. This value is used by tabs to determine which document they appear in.
@property (nonatomic, copy) NSString * _Nullable documentId;
/// When <em>true,</em> the document is been already encrypted by the sender for use with the DocuSign Key Manager Security Appliance.
@property (nonatomic) BOOL encryptedWithKeyManager;
/// The file extension type of the document. Non-PDF documents are converted to PDF.  If the document is not a PDF, `fileExtension` is required.  If you try to upload a non-PDF document without a `fileExtension`, you will receive an &quot;unable to load document&quot; error message.
@property (nonatomic, copy) NSString * _Nullable fileExtension;
@property (nonatomic, copy) NSString * _Nullable fileFormatHint;
/// When <em>true,</em> the document is included in the combined document download (`documentsCombinedUri`).  The default value is <em>true.</em>
@property (nonatomic) BOOL includeInDownload;
/// The name of the document.
@property (nonatomic, copy) NSString * _Nullable name;
/// The order in which to sort the results.  Valid values are:    * `asc`: Ascending order. * `desc`: Descending order.
@property (nonatomic, copy) NSString * _Nullable order;
/// The number of pages in the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable pages;
/// The user's encrypted password hash.
@property (nonatomic, copy) NSString * _Nullable password;
@property (nonatomic, copy) NSString * _Nullable pdfFormFieldOption;
/// The file ID from the cloud storage service where the document is located. This information is returned using <a href="/docs/esign-rest-api/reference/cloudstorage/cloudstorage/listfolders/">CloudStorage: listFolders</a> or <a href="/docs/esign-rest-api/reference/cloudstorage/cloudstorage/list/">CloudStorage: list</a>.
@property (nonatomic, copy) NSURL * _Nullable remoteUrl;
/// Sets how the signer interacts with the supplemental document. Valid values:   * `no_interaction`<br>   No recipient action is required.   * `view`<br>   The recipient is required to view the document.   * `accept`<br>   The recipient is required to accept the document by selecting accept during signing, but is not required to view the document.   * `view_accept`<br>   The recipient is required to view and accept the document.
@property (nonatomic, copy) NSString * _Nullable signerMustAcknowledge;
/// When <em>true,</em> the account default setting for the required recipient option is used. If this property is set, `signerMustAcknowledge` cannot be set (and vice versa).
@property (nonatomic) BOOL signerMustAcknowledgeUseAccountDefault;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// When <em>true,</em> PDF form field data is transformed into document tab values when the PDF form field name matches the DocuSign custom tab tabLabel. The resulting PDF form data is also returned in the PDF meta data when requesting the document PDF.
@property (nonatomic) BOOL transformPdfFields;
/// A URI containing the user ID.
@property (nonatomic, copy) NSURL * _Nullable uri;
@property (nonatomic, copy) NSURL * _Nullable fileSandboxURL;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// This object configures a recipient's read/write access to a document.
SWIFT_CLASS("_TtC11DocuSignAPI23DSAPIDocumentVisibility")
@interface DSAPIDocumentVisibility : NSObject
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// Indicates whether the document is editable:  - `editable` - `read_only`
@property (nonatomic, copy) NSString * _Nullable rights;
/// When <em>true,</em> the document is visible to the recipient.
@property (nonatomic) BOOL visible;
- (nonnull instancetype)initWithDocumentId:(NSString * _Nullable)documentId errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails recipientId:(NSString * _Nullable)recipientId rights:(NSString * _Nullable)rights visible:(BOOL)visible OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A complex type defining the management and access rights of a recipient assigned as an editor on the envelope. Editors have the same management and access rights for the envelope as the sender. They can make changes to the envelope as if they were using the Correct feature. This recipient can add name and email information, add or change the routing order and set authentication options for the remaining recipients. Additionally, this recipient can edit signature/initial tabs and text tabs for the remaining recipients.
SWIFT_CLASS("_TtC11DocuSignAPI11DSAPIEditor")
@interface DSAPIEditor : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address. Notification of the document to sign is sent to this email address.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name.   Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The total number of tabs in the documents. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to enter an email address. This is a one-line field that checks that a valid email address is entered. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.  When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
SWIFT_CLASS("_TtC11DocuSignAPI10DSAPIEmail")
@interface DSAPIEmail : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A tab that displays the recipient's email as entered in the recipient information.
SWIFT_CLASS("_TtC11DocuSignAPI17DSAPIEmailAddress")
@interface DSAPIEmailAddress : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to be applied. This property can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.  <em>Note:</em> Approve, Date Signed, Decline, Email Address, and Note tabs do not display custom tooltip text in the signing interface. Although you can technically set a value via the API for these tabs, it will not be displayed to the recipient.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A complex element that allows  the sender to override some envelope email setting information. This can be used to override the Reply To email address and name associated with the envelope and to override the BCC email addresses to which an envelope is sent.   When the emailSettings information is used for an envelope, it only applies to that envelope.   <em>IMPORTANT:</em> The emailSettings information is not returned in the GET for envelope status. Use GET /email_settings to return information about the emailSettings.   EmailSettings consists of:   * replyEmailAddressOverride - The Reply To email used for the envelope. DocuSign will verify that a correct email format is used, but does not verify that the email is active. Maximum Length: 100 characters. * replyEmailNameOverride - The name associated with the Reply To email address. Maximum Length: 100 characters. * bccEmailAddresses - An array of up to five email addresses to which the envelope is sent to as a BCC email. Only users with canManageAccount setting set to true can use this option.  DocuSign verifies that the email format is correct, but does not verify that the email is active. Using this overrides the BCC for Email Archive information setting for this envelope. Maximum Length: 100 characters. <em>Example</em>: if your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.
SWIFT_CLASS("_TtC11DocuSignAPI18DSAPIEmailSettings")
@interface DSAPIEmailSettings : NSObject
/// An array containing the email address that should receive a copy of all email communications related to an envelope for archiving purposes. Maximum Length: 100 characters.  While this property is an array, note that it takes only a single email address.  <em>Note:</em> Only users with the `canManageAccount` setting set to <em>true</em> can use this option.   DocuSign verifies that the email format is correct, but does not verify that the email address is active. You can use this for archiving purposes. However, using this property overrides the BCC for Email Archive information setting for this envelope.   <em>Example:</em> if your account has BCC for Email Archive set up for the email address archive@mycompany.com and you send an envelope using the BCC Email Override to send a BCC email to salesarchive@mycompany.com, then a copy of the envelope is only sent to the salesarchive@mycompany.com email address.
@property (nonatomic, copy) NSArray<DSAPIBccEmailAddress *> * _Nullable bccEmailAddresses;
/// The Reply To email address to use for email replies, instead of the one that is configured at the account level. DocuSign verifies that the email address is in a correct format, but does not verify that it is active. Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable replyEmailAddressOverride;
/// The name to associate with the Reply To email address, instead of the name that is configured at the account level. Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable replyEmailNameOverride;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBccEmailAddresses:(NSArray<DSAPIBccEmailAddress *> * _Nullable)bccEmailAddresses replyEmailAddressOverride:(NSString * _Nullable)replyEmailAddressOverride replyEmailNameOverride:(NSString * _Nullable)replyEmailNameOverride OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPIEnvelopeDocument;
@class DSAPIFolder;
@class DSAPILockInformation;
@class DSAPINotification;
@class DSAPIRecipients;

SWIFT_CLASS("_TtC11DocuSignAPI13DSAPIEnvelope")
@interface DSAPIEnvelope : NSObject
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable accessControlListBase64;
/// When <em>true,</em> users can add comments to the documents in the envelope. For example, if a signer has a question about the text in the document, they can add a comment to the document.
@property (nonatomic) BOOL allowComments;
/// When <em>true,</em> the Document Markup feature is enabled.  <em>Note:</em>  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.
@property (nonatomic) BOOL allowMarkup;
/// When <em>true,</em> the recipient can redirect an envelope to a more appropriate recipient.
@property (nonatomic) BOOL allowReassign;
/// When <em>true,</em> recipients can view the history of the envelope.
@property (nonatomic) BOOL allowViewHistory;
/// Deprecated. This feature has been replaced by signing groups.
@property (nonatomic, copy) NSString * _Nullable anySigner;
/// When <em>true,</em> the envelope is queued for processing and the value of the `status` property is set to `Processing`. Additionally, GET status calls return `Processing` until completed.   <em>Note:</em> A `transactionId` is required for this call to work correctly. When the envelope is created, the status is `Processing` and an `envelopeId` is not returned in the response. To get the `envelopeId`, use a GET envelope query by using the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/">transactionId</a> or by checking the Connect notification.
@property (nonatomic) BOOL asynchronous;
/// Contains a URL for retrieving the attachments that are associated with the envelope.
@property (nonatomic, copy) NSURL * _Nullable attachmentsUri;
/// When <em>true,</em> marks all of the documents in the envelope as authoritative copies.  <em>Note:</em> You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to <em>true</em> at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to <em>false.</em>
@property (nonatomic) BOOL authoritativeCopy;
/// The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set. If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
@property (nonatomic, copy) NSString * _Nullable authoritativeCopyDefault;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// The ID of the brand.
@property (nonatomic, copy) NSString * _Nullable brandId;
/// When <em>true,</em> the `brandId` for the envelope is locked and senders cannot change the brand used for the envelope.
@property (nonatomic) BOOL brandLock;
/// The URI for retrieving certificate information.
@property (nonatomic, copy) NSURL * _Nullable certificateUri;
/// Specifies the date and time this item was completed.
@property (nonatomic, copy) NSDate * _Nullable completedDateTime;
@property (nonatomic, copy) NSString * _Nullable copyRecipientData;
/// The UTC DateTime when the item was created.
@property (nonatomic, copy) NSDate * _Nullable createdDateTime;
@property (nonatomic, strong) DSAPICustomFields * _Nullable customFields;
/// The URI for retrieving custom fields.
@property (nonatomic, copy) NSURL * _Nullable customFieldsUri;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable deletedDateTime;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// When <em>true,</em> responsive documents are disabled for the envelope.
@property (nonatomic) BOOL disableResponsiveDocument;
/// The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.
@property (nonatomic, copy) NSString * _Nullable documentBase64;
/// The URI for retrieving all of the documents associated with the envelope as a single PDF file.
@property (nonatomic, copy) NSURL * _Nullable documentsCombinedUri;
/// The URI for retrieving all of the documents associated with the envelope as separate files.
@property (nonatomic, copy) NSURL * _Nullable documentsUri;
/// This is the same as the email body. If specified it is included in email body for all envelope recipients.
@property (nonatomic, copy) NSString * _Nullable emailBlurb;
@property (nonatomic, strong) DSAPIEmailSettings * _Nullable emailSettings;
/// The subject line of the email message that is sent to all recipients.  For information about adding merge field information to the email subject, see <a href="/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields">Template Email Subject Merge Fields</a>.  <em>Note:</em> The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.
@property (nonatomic, copy) NSString * _Nullable emailSubject;
/// When <em>true,</em> the signer is allowed to print the document and sign it on paper.
@property (nonatomic) BOOL enableWetSign;
/// When <em>true,</em> signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.  <em>Note:</em> To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` <em>true.</em>  [docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/
@property (nonatomic) BOOL enforceSignerVisibility;
/// An array of attachment objects that provide information about the attachments that are associated with the envelope.
@property (nonatomic, copy) NSArray<DSAPIAttachment *> * _Nullable envelopeAttachments;
/// An array containing information about the documents that are included in the envelope.
@property (nonatomic, copy) NSArray<DSAPIEnvelopeDocument *> * _Nullable envelopeDocuments;
/// The envelope ID of the envelope status that failed to post.
@property (nonatomic, copy) NSString * _Nullable envelopeId;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-user-guide-set-advanced-document-options">Envelope ID Stamping</a> is enabled. After a document or attachment is stamped with an Envelope ID, the ID is seen by all recipients and becomes a permanent part of the document and cannot be removed.
@property (nonatomic) BOOL envelopeIdStamping;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable envelopeLocation;
/// The URI for retrieving the envelope or envelopes.
@property (nonatomic, copy) NSURL * _Nullable envelopeUri;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSString * _Nullable expireAfter;
/// The date and time that the envelope is set to expire. This value is determined by the `InitialSentDateTime` of the envelope and the `expireAfter` property of the `notification` object. (Note that the `expireAfter` property of the envelope itself is not used.)
@property (nonatomic, copy) NSDate * _Nullable expireDateTime;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSString * _Nullable expireEnabled;
/// May contain an external identifier for the envelope.
@property (nonatomic, copy) NSString * _Nullable externalEnvelopeId;
/// A list of folder objects.
@property (nonatomic, copy) NSArray<DSAPIFolder *> * _Nullable folders;
/// When <em>true,</em> indicates that users have added comments to the envelope.
@property (nonatomic) BOOL hasComments;
/// When <em>true,</em> indicates that the data collected through form fields on a document has changed.
@property (nonatomic) BOOL hasFormDataChanged;
/// When <em>true,</em> indicates that a .wav file used for voice authentication is included in the envelope.
@property (nonatomic) BOOL hasWavFile;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable holder;
/// The date and time the envelope was initially sent.
@property (nonatomic, copy) NSDate * _Nullable initialSentDateTime;
/// When <em>true,</em> indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).
@property (nonatomic) BOOL is21CFRPart11;
/// When <em>true,</em> indicates that the envelope is a dynamic envelope.
@property (nonatomic) BOOL isDynamicEnvelope;
/// When <em>true,</em> indicates that the envelope is a signature-provided envelope.
@property (nonatomic) BOOL isSignatureProviderEnvelope;
/// The date and time that the item was last modified.
@property (nonatomic, copy) NSDate * _Nullable lastModifiedDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable location;
@property (nonatomic, strong) DSAPILockInformation * _Nullable lockInformation;
/// When <em>true,</em> prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope.   Additionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes.   However, if the `messageLock` node is set to <em>true</em> and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.
@property (nonatomic) BOOL messageLock;
@property (nonatomic, strong) DSAPINotification * _Nullable notification;
/// The URI for retrieving notifications.
@property (nonatomic, copy) NSURL * _Nullable notificationUri;
/// The date that a purge was completed.
@property (nonatomic, copy) NSDate * _Nullable purgeCompletedDate;
/// The date that a purge was requested.
@property (nonatomic, copy) NSDate * _Nullable purgeRequestDate;
/// Shows the current purge state for the envelope. Valid values:  - `unpurged`: There has been no successful request to purge documents. - `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged. - `documents_dequeued`: The envelope documents have been taken out of the purge queue. - `documents_purged`: The envelope documents have been successfully purged. - `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged. - `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged. - `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted. - `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.  <em>Related topics</em>  - <a href="/docs/esign-rest-api/esign101/concepts/documents/purging/">Purging documents (eSingature Concepts)</a> - <a href="https://www.docusign.com/blog/developers/purging-documents-envelope">Purging documents in an envelope (blog post)</a>
@property (nonatomic, copy) NSString * _Nullable purgeState;
@property (nonatomic, strong) DSAPIRecipients * _Nullable recipients;
/// When <em>true,</em> prevents senders from changing, correcting, or deleting the recipient information for the envelope.
@property (nonatomic) BOOL recipientsLock;
/// Contains a URI for an endpoint that you can use to retrieve the recipients.
@property (nonatomic, copy) NSURL * _Nullable recipientsUri;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable sender;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// When <em>true,</em> recipients can sign on a mobile device.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerCanSignOnMobile;
/// Specifies the physical location where the signing takes place. It can have two enumeration values; `inPerson` and `online`. The default value is `online`.
@property (nonatomic, copy) NSString * _Nullable signingLocation;
/// Indicates the envelope status. Valid values are:  * `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in. * `created`: The envelope is created as a draft. It can be modified and sent later. * `declined`: The envelope has been declined by the recipients. * `delivered`: The envelope has been delivered to the recipients. * `sent`: The envelope will be sent to the recipients after the envelope is created. * `signed`: The envelope has been signed by the recipients. * `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.
@property (nonatomic, copy) NSString * _Nullable status;
/// The data and time that the status changed.
@property (nonatomic, copy) NSDate * _Nullable statusChangedDateTime;
/// The DateTime that the envelope changed status (i.e. was created or sent.)
@property (nonatomic, copy) NSDate * _Nullable statusDateTime;
/// The URI for retrieving the templates.
@property (nonatomic, copy) NSURL * _Nullable templatesUri;
/// Used to identify an envelope.   The ID is a sender-generated value and is valid in the DocuSign system for 7 days.  It is recommended that a transaction ID is used for offline  signing to ensure that an envelope is not sent multiple times.  The `transactionId` property can be used determine an envelope's  status (i.e. was it created or not) in cases where the internet c  onnection was lost before the envelope status was returned.
@property (nonatomic, copy) NSString * _Nullable transactionId;
/// When <em>true,</em> the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When <em>false,</em> the Electronic Record and Signature Disclosure is not shown to any envelope recipients.   If the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.
@property (nonatomic, copy) NSString * _Nullable useDisclosure;
/// The date and time the envelope or template was voided.
@property (nonatomic, copy) NSDate * _Nullable voidedDateTime;
/// The reason the envelope or template was voided.
@property (nonatomic, copy) NSString * _Nullable voidedReason;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIRecipientViewRequest;
@class DSAPITemplateRole;

/// Envelope object definition.
SWIFT_CLASS("_TtC11DocuSignAPI23DSAPIEnvelopeDefinition")
@interface DSAPIEnvelopeDefinition : NSObject
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable accessControlListBase64;
/// Sets the document reading zones for screen reader applications.  This element can only be used if Document Accessibility is enabled for the account.  <em>Note:</em> This information is currently generated from the DocuSign web console by setting the reading zones when creating a template, exporting the reading zone string information, and adding it here.
@property (nonatomic, copy) NSString * _Nullable accessibility;
/// When <em>true,</em> comments are allowed on the envelope.
@property (nonatomic) BOOL allowComments;
/// When <em>true,</em> the Document Markup feature is enabled.  <em>Note:</em>  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.
@property (nonatomic) BOOL allowMarkup;
/// When <em>true,</em> the recipient can redirect an envelope to a more appropriate recipient.
@property (nonatomic) BOOL allowReassign;
/// When <em>true,</em> this enables the Recursive Recipients feature and allows a recipient to appear more than once in the routing order.
@property (nonatomic) BOOL allowRecipientRecursion;
/// When <em>true,</em> users can view the history of the envelope.
@property (nonatomic) BOOL allowViewHistory;
/// Deprecated. This feature has been replaced by signing groups.
@property (nonatomic, copy) NSString * _Nullable anySigner;
/// When <em>true,</em> the envelope is queued for processing and the value of the `status` property is set to `Processing`. Additionally, GET status calls return `Processing` until completed.   <em>Note:</em> A `transactionId` is required for this call to work correctly. When the envelope is created, the status is `Processing` and an `envelopeId` is not returned in the response. To get the `envelopeId`, use a GET envelope query by using the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/">transactionId</a> or by checking the Connect notification.
@property (nonatomic) BOOL asynchronous;
/// An array of attachment objects containing details about any envelope attachments.
@property (nonatomic, copy) NSArray<DSAPIAttachment *> * _Nullable attachments;
/// The URI for retrieving the envelope attachments.
@property (nonatomic, copy) NSURL * _Nullable attachmentsUri;
/// When <em>true,</em> marks all of the documents in the envelope as authoritative copies.  <em>Note:</em> You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to <em>true</em> at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to <em>false.</em>
@property (nonatomic) BOOL authoritativeCopy;
/// The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set. If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
@property (nonatomic, copy) NSString * _Nullable authoritativeCopyDefault;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// The ID of the brand, or text and formatting, to use for the envelope. To use brands, account branding must be enabled for the account.  <em>Note:</em> When creating an envelope using a branded template, include this value to ensure that the brand is applied.
@property (nonatomic, copy) NSString * _Nullable brandId;
/// When <em>true,</em> the `brandId` for the envelope is locked and senders cannot change the brand used for the envelope.
@property (nonatomic) BOOL brandLock;
/// The URI for retrieving certificate information.
@property (nonatomic, copy) NSURL * _Nullable certificateUri;
/// The date and time that the envelope was completed.
@property (nonatomic, copy) NSDate * _Nullable completedDateTime;
/// This value is only applicable when copying an existing envelope. Provide the ID of the envelope to clone in `envelopeId`.  When <em>true,</em> the recipient field values of the existing envelope are included. Only values from data entry fields, like checkboxes and radio buttons, will be copied. Fields that require an action, like signatures and initials, will not be included.
@property (nonatomic, copy) NSString * _Nullable copyRecipientData;
/// The date and time that the envelope was created.
@property (nonatomic, copy) NSDate * _Nullable createdDateTime;
@property (nonatomic, strong) DSAPICustomFields * _Nullable customFields;
/// The URI for retrieving custom fields.
@property (nonatomic, copy) NSURL * _Nullable customFieldsUri;
/// The date and time that the recipient declined the envelope.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The date and time that the envelope was deleted.
@property (nonatomic, copy) NSDate * _Nullable deletedDateTime;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// When <em>true,</em> the responsive document feature is turned off for the envelope.
@property (nonatomic) BOOL disableResponsiveDocument;
/// The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.
@property (nonatomic, copy) NSString * _Nullable documentBase64;
/// A complex element that contains details about the documents associated with the envelope.
@property (nonatomic, copy) NSArray<DSAPIDocument *> * _Nullable documents;
/// The URI for retrieving all of the documents associated with the envelope as a single PDF file.
@property (nonatomic, copy) NSURL * _Nullable documentsCombinedUri;
/// The URI for retrieving all of the documents associated with the envelope as separate files.
@property (nonatomic, copy) NSURL * _Nullable documentsUri;
/// This optional element holds the body of the email message that is sent to all envelope recipients.   Maximum Length: 10000 characters.
@property (nonatomic, copy) NSString * _Nullable emailBlurb;
@property (nonatomic, strong) DSAPIEmailSettings * _Nullable emailSettings;
/// The subject line of the email message that is sent to all recipients.  For information about adding merge field information to the email subject, see <a href="/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields">Template Email Subject Merge Fields</a>.  <em>Note:</em> The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.
@property (nonatomic, copy) NSString * _Nullable emailSubject;
/// When <em>true,</em> the signer is allowed to print the document and sign it on paper.
@property (nonatomic) BOOL enableWetSign;
/// When <em>true,</em> signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.  <em>Note:</em> To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` <em>true.</em>  [docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/
@property (nonatomic) BOOL enforceSignerVisibility;
/// An array of attachment objects that provide information about the attachments that are associated with the envelope.
@property (nonatomic, copy) NSArray<DSAPIAttachment *> * _Nullable envelopeAttachments;
/// An array containing information about the documents that are included in the envelope.
@property (nonatomic, copy) NSArray<DSAPIEnvelopeDocument *> * _Nullable envelopeDocuments;
/// The envelope ID.  When used as a request body in <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/">Envelopes: create</a>, this is the ID of the envelope to clone.
@property (nonatomic, copy) NSString * _Nullable envelopeId;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-user-guide-set-advanced-document-options">Envelope ID Stamping</a> is enabled. After a document or attachment is stamped with an Envelope ID, the ID is seen by all recipients and becomes a permanent part of the document and cannot be removed.
@property (nonatomic) BOOL envelopeIdStamping;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable envelopeLocation;
/// The URI for retrieving the envelope or envelopes.
@property (nonatomic, copy) NSURL * _Nullable envelopeUri;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSString * _Nullable expireAfter;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSDate * _Nullable expireDateTime;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSString * _Nullable expireEnabled;
/// May contain an external identifier for the envelope.
@property (nonatomic, copy) NSString * _Nullable externalEnvelopeId;
/// An array of folders that the envelope belongs to.
@property (nonatomic, copy) NSArray<DSAPIFolder *> * _Nullable folders;
/// When <em>true,</em> indicates that users have added comments to the envelope.
@property (nonatomic) BOOL hasComments;
/// When <em>true,</em> indicates that the form data associated with the envelope has changed since it was sent. When <em>false,</em> this property does not appear in the response.
@property (nonatomic) BOOL hasFormDataChanged;
/// When <em>true,</em> indicates that a wave file (voice recording) is part of the envelope.
@property (nonatomic) BOOL hasWavFile;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable holder;
/// The date and time that the envelope was first sent.
@property (nonatomic, copy) NSDate * _Nullable initialSentDateTime;
/// When <em>true,</em> indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).
@property (nonatomic) BOOL is21CFRPart11;
/// When <em>true,</em> indicates that the envelope is a dynamic envelope.
@property (nonatomic) BOOL isDynamicEnvelope;
/// When <em>true,</em> indicates that the envelope is a signature-provided envelope.
@property (nonatomic) BOOL isSignatureProviderEnvelope;
/// The date and time that the item was last modified.
@property (nonatomic, copy) NSDate * _Nullable lastModifiedDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable location;
@property (nonatomic, strong) DSAPILockInformation * _Nullable lockInformation;
/// When <em>true,</em> prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope.   Additionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes.   However, if the `messageLock` node is set to <em>true</em> and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.
@property (nonatomic) BOOL messageLock;
@property (nonatomic, strong) DSAPINotification * _Nullable notification;
/// The URI for retrieving notifications.
@property (nonatomic, copy) NSURL * _Nullable notificationUri;
/// The user's encrypted password hash.
@property (nonatomic, copy) NSString * _Nullable password;
/// The date that a purge was completed.
@property (nonatomic, copy) NSDate * _Nullable purgeCompletedDate;
/// The date that a purge was requested.
@property (nonatomic, copy) NSDate * _Nullable purgeRequestDate;
/// Initiates a purge request. Valid values are:  - `documents_queued`: Places envelope documents in the purge queue. - `documents_and_metadata_queued`: Places envelope documents    and metadata in the purge queue. - `documents_and_metadata_and_redact_queued`: Places envelope documents    and metadata in the purge queue and redacts personal information.  <em>Related topics</em>  - <a href="/docs/esign-rest-api/esign101/concepts/documents/purging/">Purging documents (eSingature Concepts)</a> - <a href="https://www.docusign.com/blog/developers/purging-documents-envelope">Purging documents in an envelope (blog post)</a>
@property (nonatomic, copy) NSString * _Nullable purgeState;
@property (nonatomic, strong) DSAPIRecipients * _Nullable recipients;
/// When <em>true,</em> prevents senders from changing, correcting, or deleting the recipient information for the envelope.
@property (nonatomic) BOOL recipientsLock;
/// Contains a URI for an endpoint that you can use to retrieve the recipients.
@property (nonatomic, copy) NSURL * _Nullable recipientsUri;
@property (nonatomic, strong) DSAPIRecipientViewRequest * _Nullable recipientViewRequest;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable sender;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// When <em>true,</em> recipients can sign on a mobile device.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerCanSignOnMobile;
/// Specifies the physical location where the signing takes place. It can have two enumeration values; `inPerson` and `online`. The default value is `online`.
@property (nonatomic, copy) NSString * _Nullable signingLocation;
/// Indicates the envelope status. Valid values when creating an envelope are:   * `created`: The envelope is created as a draft. It can be modified and sent later. * `sent`: The envelope will be sent to the recipients after the envelope is created.  You can query these additional statuses once the recipients have interacted with the envelope.  * `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in. * `declined`: The envelope has been declined by the recipients. * `delivered`: The envelope has been delivered to the recipients. * `signed`: The envelope has been signed by the recipients. * `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.
@property (nonatomic, copy) NSString * _Nullable status;
/// The data and time that the status changed.
@property (nonatomic, copy) NSDate * _Nullable statusChangedDateTime;
/// The DateTime that the envelope changed status (i.e. was created or sent.)
@property (nonatomic, copy) NSDate * _Nullable statusDateTime;
/// The ID of the template. If a value is not provided, DocuSign generates a value.
@property (nonatomic, copy) NSString * _Nullable templateId;
/// This object specifies the template recipients. Each `roleName` in the template must have a recipient assigned to it. This object is comprised of the following elements:  * `email`: The recipient's email address. * `name`: The recipient's name. * `roleName`: The template roleName associated with the recipient. * `clientUserId`: An optional property that specifies whether the recipient is embedded or remote. If the `clientUserId` is not null, then the recipient is embedded. Note that if a `clientUserId` is used and the account settings `signerMustHaveAccount` or `signerMustLoginToSign` are <em>true,</em> an error is generated on sending. * `defaultRecipient`: Optional, When <em>true,</em> this recipient is the default recipient and any tabs generated by the `transformPdfFields` option are mapped to this recipient. * `routingOrder`: This specifies the routing order of the recipient in the envelope. * `accessCode`: This optional element specifies the access code a recipient has to enter to validate the identity. Maximum Length: 50 characters. * `inPersonSignerName`: Optional. If the template role is an in-person signer, this is the full legal name of the signer. Maximum Length: 100 characters. * `emailNotification`: This is an optional complex element that has a role-specific `emailSubject`, `emailBody`, and `language`. It follows the same format as the `emailNotification` property for recipients. * `tabs`: This property enables the tab values to be specified for matching to tabs in the template.
@property (nonatomic, copy) NSArray<DSAPITemplateRole *> * _Nullable templateRoles;
/// The URI for retrieving any templates associated with the envelope.
@property (nonatomic, copy) NSURL * _Nullable templatesUri;
/// Used to identify an envelope. The ID is a sender-generated value and is valid in the DocuSign system for 7 days. DocuSign recommends that you use a transaction ID for offline signing to ensure that an envelope is not sent multiple times. You can use the `transactionId` property to determine an envelope's status (i.e. was it created or not) in cases where the Internet connection was lost before the envelope status was returned.
@property (nonatomic, copy) NSString * _Nullable transactionId;
/// When <em>true,</em> the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When <em>false,</em> the Electronic Record and Signature Disclosure is not shown to any envelope recipients.   If the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.
@property (nonatomic, copy) NSString * _Nullable useDisclosure;
/// The date and time the envelope or template was voided.
@property (nonatomic, copy) NSDate * _Nullable voidedDateTime;
/// The reason the envelope or template was voided.
@property (nonatomic, copy) NSString * _Nullable voidedReason;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface DSAPIEnvelopeDefinition (SWIFT_EXTENSION(DocuSignAPI))
- (DSAPIEnvelopeDefinition * _Nullable)convertToObjectWithJsonString:(NSString * _Nonnull)jsonString SWIFT_WARN_UNUSED_RESULT;
@end

@class DSAPIPage;

/// This object contains details about the envelope document.
SWIFT_CLASS("_TtC11DocuSignAPI21DSAPIEnvelopeDocument")
@interface DSAPIEnvelopeDocument : NSObject
/// If recipients were added by converting form fields into tabs, their IDs appear here. This property is read-only.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable addedRecipientIds;
/// If this document is an attachment to another document in the envelope, this is the ID of the attachment tab it is associated with on the other document.
@property (nonatomic, copy) NSString * _Nullable attachmentTabId;
/// When <em>true,</em> marks all of the documents in the envelope as authoritative copies.  <em>Note:</em> You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to <em>true</em> at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to <em>false.</em>
@property (nonatomic) BOOL authoritativeCopy;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable authoritativeCopyMetadata;
/// When <em>true,</em> the document has editable form fields that are made available through a PDF format.
@property (nonatomic) BOOL containsPdfFormFields;
/// This string sets the display and behavior properties of the document during signing. Valid values:  * `modal`<br>   The document is shown as a supplement action strip   and can be viewed, downloaded, or printed in a modal window.   This is the recommended value for supplemental documents.   * `inline`<br>   The document is shown in the normal signing window.   This value is not used with supplemental documents,   but is the default value for all other documents.
@property (nonatomic, copy) NSString * _Nullable display;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable displayMetadata;
/// The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.
@property (nonatomic, copy) NSString * _Nullable documentBase64;
/// An object containing information about the custom fields on the document.
@property (nonatomic, copy) NSArray<DSAPINameValue *> * _Nullable documentFields;
/// The ID of the document that the tab is placed on. This value must refer to the ID of an existing document.
@property (nonatomic, copy) NSString * _Nullable documentId;
/// The GUID of the document.
@property (nonatomic, copy) NSString * _Nullable documentIdGuid;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// When <em>true,</em> the document is included in the combined document download (`documentsCombinedUri`).  The default value is <em>true.</em>
@property (nonatomic) BOOL includeInDownload;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable includeInDownloadMetadata;
/// The document's file name.   Example: `Q1-Report.docx`
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The order in which to sort the results.  Valid values are:    * `asc`: Ascending order. * `desc`: Descending order.
@property (nonatomic, copy) NSString * _Nullable order;
/// An array of page objects that contain information about the pages in the document.
@property (nonatomic, copy) NSArray<DSAPIPage *> * _Nullable pages;
/// Sets how the signer interacts with the supplemental document. Valid values:   * `no_interaction`<br>   No recipient action is required.   * `view`<br>   The recipient is required to view the document.   * `accept`<br>   The recipient is required to accept the document by selecting accept during signing, but is not required to view the document.   * `view_accept`<br>   The recipient is required to view and accept the document.
@property (nonatomic, copy) NSString * _Nullable signerMustAcknowledge;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signerMustAcknowledgeMetadata;
@property (nonatomic, copy) NSString * _Nullable sizeBytes;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The type of this tab. Values are:  - Approve - CheckBox - Company - Date - DateSigned, Decline - Email, EmailAddress - EnvelopeId - FirstName - Formula - FullName, InitialHere - InitialHereOptional - LastName - List - Note - Number - Radio - SignerAttachment - SignHere - SignHereOptional - Ssn - Text - Title - Zip5 - Zip5Dash4
@property (nonatomic, copy) NSString * _Nullable type;
/// The URI for retrieving the document.
@property (nonatomic, copy) NSURL * _Nullable uri;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI28DSAPIEnvelopeDocumentsResult")
@interface DSAPIEnvelopeDocumentsResult : NSObject
/// An array containing information about the documents that are included in the envelope.
@property (nonatomic, copy) NSArray<DSAPIEnvelopeDocument *> * _Nullable envelopeDocuments;
/// The envelope ID.
@property (nonatomic, copy) NSString * _Nullable envelopeId;
- (nonnull instancetype)initWithEnvelopeDocuments:(NSArray<DSAPIEnvelopeDocument *> * _Nullable)envelopeDocuments envelopeId:(NSString * _Nullable)envelopeId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A tab that displays the envelope ID. Recipients cannot enter or change the information in this tab.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIEnvelopeId")
@interface DSAPIEnvelopeId : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This object describes an envelope.
SWIFT_CLASS("_TtC11DocuSignAPI20DSAPIEnvelopeSummary")
@interface DSAPIEnvelopeSummary : NSObject
/// The envelope ID of the envelope status that failed to post.
@property (nonatomic, copy) NSString * _Nullable envelopeId;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
@property (nonatomic, copy) NSURL * _Nullable recipientSigningUri;
@property (nonatomic, copy) NSString * _Nullable recipientSigningUriError;
/// Indicates the envelope status. Valid values are:   * `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in. * `created`: The envelope is created as a draft. It can be modified and sent later. * `declined`: The envelope has been declined by the recipients. * `delivered`: The envelope has been delivered to the recipients. * `sent`: The envelope will be sent to the recipients after the envelope is created. * `signed`: The envelope has been signed by the recipients. * `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.
@property (nonatomic, copy) NSString * _Nullable status;
/// The DateTime that the envelope changed status (i.e. was created or sent.)
@property (nonatomic, copy) NSDate * _Nullable statusDateTime;
/// A URI containing the user ID.
@property (nonatomic, copy) NSURL * _Nullable uri;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI21DSAPIEnvelopeTemplate")
@interface DSAPIEnvelopeTemplate : NSObject
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable accessControlListBase64;
/// When <em>true,</em> users can add comments to the documents in the envelope. For example, if a signer has a question about the text in the document, they can add a comment to the document.
@property (nonatomic) BOOL allowComments;
/// When <em>true,</em> the Document Markup feature is enabled.  <em>Note:</em>  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.
@property (nonatomic) BOOL allowMarkup;
/// When <em>true,</em> the recipient can redirect an envelope to a more appropriate recipient.
@property (nonatomic) BOOL allowReassign;
/// When <em>true,</em> recipients can view the history of the envelope.
@property (nonatomic) BOOL allowViewHistory;
/// Deprecated. This feature has been replaced by signing groups.
@property (nonatomic, copy) NSString * _Nullable anySigner;
/// When <em>true,</em> the envelope is queued for processing and the value of the `status` property is set to `Processing`. Additionally, GET status calls return `Processing` until completed.   <em>Note:</em> A `transactionId` is required for this call to work correctly. When the envelope is created, the status is `Processing` and an `envelopeId` is not returned in the response. To get the `envelopeId`, use a GET envelope query by using the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/">transactionId</a> or by checking the Connect notification.
@property (nonatomic) BOOL asynchronous;
/// Contains a URL for retrieving the attachments that are associated with the envelope.
@property (nonatomic, copy) NSURL * _Nullable attachmentsUri;
/// When <em>true,</em> marks all of the documents in the envelope as authoritative copies.  <em>Note:</em> You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to <em>true</em> at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to <em>false.</em>
@property (nonatomic) BOOL authoritativeCopy;
/// The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set. If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
@property (nonatomic, copy) NSString * _Nullable authoritativeCopyDefault;
/// By default, templates that have been used within the last 60 days are included in auto-matching.  By explicitly setting `autoMatch`, you can permanently include or exclude the template in auto matching.  When <em>true</em> the template is included in auto-matching regardless of when it was last used.  When <em>false</em> the template is never included in auto-matching.
@property (nonatomic) BOOL autoMatch;
/// When <em>true,</em> the template has been explicitly included in or excluded from auto-matching. The default is false. This is a read-only property.
@property (nonatomic) BOOL autoMatchSpecifiedByUser;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// The ID of the brand.
@property (nonatomic, copy) NSString * _Nullable brandId;
/// When <em>true,</em> the `brandId` for the envelope is locked and senders cannot change the brand used for the envelope.
@property (nonatomic) BOOL brandLock;
/// The URI for retrieving certificate information.
@property (nonatomic, copy) NSURL * _Nullable certificateUri;
/// Specifies the date and time this item was completed.
@property (nonatomic, copy) NSDate * _Nullable completedDateTime;
@property (nonatomic, copy) NSString * _Nullable copyRecipientData;
/// The UTC DateTime when the workspace user authorization was created.
@property (nonatomic, copy) NSString * _Nullable created;
/// The UTC DateTime when the item was created.
@property (nonatomic, copy) NSDate * _Nullable createdDateTime;
@property (nonatomic, strong) DSAPICustomFields * _Nullable customFields;
/// The URI for retrieving custom fields.
@property (nonatomic, copy) NSURL * _Nullable customFieldsUri;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable deletedDateTime;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// A sender-defined description of the line item.
@property (nonatomic, copy) NSString * _Nullable templatedescription;
/// When <em>true,</em> responsive documents are disabled for the envelope.
@property (nonatomic) BOOL disableResponsiveDocument;
/// The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.
@property (nonatomic, copy) NSString * _Nullable documentBase64;
/// A complex element that contains details about the documents associated with the envelope.
@property (nonatomic, copy) NSArray<DSAPIDocument *> * _Nullable documents;
/// The URI for retrieving all of the documents associated with the envelope as a single PDF file.
@property (nonatomic, copy) NSURL * _Nullable documentsCombinedUri;
/// The URI for retrieving all of the documents associated with the envelope as separate files.
@property (nonatomic, copy) NSURL * _Nullable documentsUri;
/// This is the same as the email body. If the sender enters an email blurb, it is included in the email body for all envelope recipients.
@property (nonatomic, copy) NSString * _Nullable emailBlurb;
@property (nonatomic, strong) DSAPIEmailSettings * _Nullable emailSettings;
/// The subject line of the email message that is sent to all recipients.  For information about adding merge field information to the email subject, see <a href="/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields">Template Email Subject Merge Fields</a>.  <em>Note:</em> The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.
@property (nonatomic, copy) NSString * _Nullable emailSubject;
/// When <em>true,</em> the signer is allowed to print the document and sign it on paper.
@property (nonatomic) BOOL enableWetSign;
/// When <em>true,</em> signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.  <em>Note:</em> To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` <em>true.</em>  [docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/
@property (nonatomic) BOOL enforceSignerVisibility;
/// An array of attachment objects that provide information about the attachments that are associated with the envelope.
@property (nonatomic, copy) NSArray<DSAPIAttachment *> * _Nullable envelopeAttachments;
/// An array containing information about the documents that are included in the envelope.
@property (nonatomic, copy) NSArray<DSAPIEnvelopeDocument *> * _Nullable envelopeDocuments;
/// The envelope ID of the envelope status that failed to post.
@property (nonatomic, copy) NSString * _Nullable envelopeId;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-user-guide-set-advanced-document-options">Envelope ID Stamping</a> is enabled. After a document or attachment is stamped with an Envelope ID, the ID is seen by all recipients and becomes a permanent part of the document and cannot be removed.
@property (nonatomic) BOOL envelopeIdStamping;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable envelopeLocation;
/// The URI for retrieving the envelope or envelopes.
@property (nonatomic, copy) NSURL * _Nullable envelopeUri;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSString * _Nullable expireAfter;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSDate * _Nullable expireDateTime;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic) BOOL expireEnabled;
/// May contain an external identifier for the envelope.
@property (nonatomic, copy) NSString * _Nullable externalEnvelopeId;
@property (nonatomic, copy) NSString * _Nullable favoritedByMe;
/// The ID of the folder.
@property (nonatomic, copy) NSString * _Nullable folderId;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable folderIds;
@property (nonatomic, copy) NSString * _Nullable folderName;
/// A list of folder objects.
@property (nonatomic, copy) NSArray<DSAPIFolder *> * _Nullable folders;
/// When <em>true,</em> indicates that users have added comments to the envelope.
@property (nonatomic) BOOL hasComments;
/// When <em>true,</em> indicates that the data collected through form fields on a document has changed.
@property (nonatomic) BOOL hasFormDataChanged;
/// When <em>true,</em> indicates that a .wav file used for voice authentication is included in the envelope.
@property (nonatomic) BOOL hasWavFile;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable holder;
/// The date and time the envelope was initially sent.
@property (nonatomic, copy) NSDate * _Nullable initialSentDateTime;
/// When <em>true,</em> indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).
@property (nonatomic) BOOL is21CFRPart11;
/// When <em>true,</em> indicates that the envelope is a dynamic envelope.
@property (nonatomic) BOOL isDynamicEnvelope;
/// When <em>true,</em> indicates that the envelope is a signature-provided envelope.
@property (nonatomic) BOOL isSignatureProviderEnvelope;
/// The UTC date and time that the comment was last updated.  <em>Note:</em> This can only be done by the creator.
@property (nonatomic, copy) NSDate * _Nullable lastModified;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable lastModifiedBy;
/// The date and time that the item was last modified.
@property (nonatomic, copy) NSDate * _Nullable lastModifiedDateTime;
@property (nonatomic, copy) NSString * _Nullable lastUsed;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable location;
@property (nonatomic, strong) DSAPILockInformation * _Nullable lockInformation;
/// When <em>true,</em> prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope.   Additionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes.   However, if the `messageLock` node is set to <em>true</em> and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.
@property (nonatomic) BOOL messageLock;
@property (nonatomic, copy) NSString * _Nullable name;
/// The user's new password.
@property (nonatomic, copy) NSString * _Nullable newPassword;
@property (nonatomic, strong) DSAPINotification * _Nullable notification;
/// The URI for retrieving notifications.
@property (nonatomic, copy) NSURL * _Nullable notificationUri;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable owner;
/// An integer value specifying the number of document pages in the template.
@property (nonatomic, copy) NSString * _Nullable pageCount;
/// The user's encrypted password hash.
@property (nonatomic, copy) NSString * _Nullable password;
@property (nonatomic, copy) NSString * _Nullable passwordProtected;
/// The date that a purge was completed.
@property (nonatomic, copy) NSDate * _Nullable purgeCompletedDate;
/// The date that a purge was requested.
@property (nonatomic, copy) NSDate * _Nullable purgeRequestDate;
/// Shows the current purge state for the envelope. Valid values:  - `unpurged`: There has been no successful request to purge documents. - `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged. - `documents_dequeued`: The envelope documents have been taken out of the purge queue. - `documents_purged`: The envelope documents have been successfully purged. - `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged. - `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged. - `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted. - `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.  <em>Related topics</em>  - <a href="/docs/esign-rest-api/esign101/concepts/documents/purging/">Purging documents (eSingature Concepts)</a> - <a href="https://www.docusign.com/blog/developers/purging-documents-envelope">Purging documents in an envelope (blog post)</a>
@property (nonatomic, copy) NSString * _Nullable purgeState;
@property (nonatomic, strong) DSAPIRecipients * _Nullable recipients;
/// When <em>true,</em> prevents senders from changing, correcting, or deleting the recipient information for the envelope.
@property (nonatomic) BOOL recipientsLock;
/// Contains a URI for an endpoint that you can use to retrieve the recipients.
@property (nonatomic, copy) NSURL * _Nullable recipientsUri;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable sender;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
/// When <em>true,</em> recipients can sign on a mobile device.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerCanSignOnMobile;
/// Specifies the physical location where the signing takes place. It can have two enumeration values; `inPerson` and `online`. The default value is `online`.
@property (nonatomic, copy) NSString * _Nullable signingLocation;
/// Indicates the envelope status. Valid values are:  * `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in. * `created`: The envelope is created as a draft. It can be modified and sent later. * `declined`: The envelope has been declined by the recipients. * `delivered`: The envelope has been delivered to the recipients. * `sent`: The envelope will be sent to the recipients after the envelope is created. * `signed`: The envelope has been signed by the recipients. * `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.
@property (nonatomic, copy) NSString * _Nullable status;
/// The data and time that the status changed.
@property (nonatomic, copy) NSDate * _Nullable statusChangedDateTime;
/// The DateTime that the envelope changed status (i.e. was created or sent.)
@property (nonatomic, copy) NSDate * _Nullable statusDateTime;
/// The unique identifier of the template. If this is not provided, DocuSign will generate a value.
@property (nonatomic, copy) NSString * _Nullable templateId;
/// The URI for retrieving the templates.
@property (nonatomic, copy) NSURL * _Nullable templatesUri;
/// Used to identify an envelope.   The ID is a sender-generated value and is valid in the DocuSign system for 7 days.  It is recommended that a transaction ID is used for offline  signing to ensure that an envelope is not sent multiple times.  The `transactionId` property can be used determine an envelope's  status (i.e. was it created or not) in cases where the internet c  onnection was lost before the envelope status was returned.
@property (nonatomic, copy) NSString * _Nullable transactionId;
/// A URI containing the user ID.
@property (nonatomic, copy) NSURL * _Nullable uri;
/// When <em>true,</em> the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When <em>false,</em> the Electronic Record and Signature Disclosure is not shown to any envelope recipients.   If the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.
@property (nonatomic, copy) NSString * _Nullable useDisclosure;
/// The date and time the envelope or template was voided.
@property (nonatomic, copy) NSDate * _Nullable voidedDateTime;
/// The reason the envelope or template was voided.
@property (nonatomic, copy) NSString * _Nullable voidedReason;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface DSAPIEnvelopeTemplate (SWIFT_EXTENSION(DocuSignAPI))
- (id _Nullable)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end


/// Information about templates.
SWIFT_CLASS("_TtC11DocuSignAPI28DSAPIEnvelopeTemplateResults")
@interface DSAPIEnvelopeTemplateResults : NSObject
/// The last index position in the result set.
@property (nonatomic, copy) NSString * _Nullable endPosition;
/// The list of requested templates.
@property (nonatomic, copy) NSArray<DSAPIEnvelopeTemplate *> * _Nullable envelopeTemplates;
/// A list of folder objects.
@property (nonatomic, copy) NSArray<DSAPIFolder *> * _Nullable folders;
/// The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search.
@property (nonatomic, copy) NSURL * _Nullable nextUri;
/// The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search.
@property (nonatomic, copy) NSURL * _Nullable previousUri;
/// The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.
@property (nonatomic, copy) NSString * _Nullable resultSetSize;
/// The starting index position of the current result set.
@property (nonatomic, copy) NSString * _Nullable startPosition;
/// The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.
@property (nonatomic, copy) NSString * _Nullable totalSetSize;
- (nonnull instancetype)initWithEndPosition:(NSString * _Nullable)endPosition envelopeTemplates:(NSArray<DSAPIEnvelopeTemplate *> * _Nullable)envelopeTemplates folders:(NSArray<DSAPIFolder *> * _Nullable)folders nextUri:(NSURL * _Nullable)nextUri previousUri:(NSURL * _Nullable)previousUri resultSetSize:(NSString * _Nullable)resultSetSize startPosition:(NSString * _Nullable)startPosition totalSetSize:(NSString * _Nullable)totalSetSize OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This object describes errors that occur. It is only valid for responses and ignored in requests.
SWIFT_CLASS("_TtC11DocuSignAPI17DSAPIErrorDetails")
@interface DSAPIErrorDetails : NSObject
/// The code associated with the error condition.
@property (nonatomic, copy) NSString * _Nullable errorCode;
/// A brief message describing the error condition.
@property (nonatomic, copy) NSString * _Nullable message;
- (nonnull instancetype)initWithErrorCode:(NSString * _Nullable)errorCode message:(NSString * _Nullable)message OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// A complex element that specifies the expiration settings for the envelope. When an envelope expires, it is voided and no longer available for signing. <em>Note:</em> there is a short delay between when the envelope expires and when it is voided.
SWIFT_CLASS("_TtC11DocuSignAPI16DSAPIExpirations")
@interface DSAPIExpirations : NSObject
/// An integer that sets the number of days the envelope is active. For this value to be used, `expireEnabled` must be explicitly set to <em>true.</em>
@property (nonatomic, copy) NSString * _Nullable expireAfter;
/// When <em>true,</em> the envelope expires in the number of days set by `expireAfter`. When <em>false</em> or not set, the envelope expires in the number of days specified by the <a href="https://support.docusign.com/en/guides/ndse-admin-guide-reminders-and-expirations">default expiration account setting</a>.
@property (nonatomic) BOOL expireEnabled;
/// An integer that specifying the number of days before the envelope expires that an expiration warning email is sent to the recipient. When 0 (zero), no warning email is sent.
@property (nonatomic, copy) NSString * _Nullable expireWarn;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithExpireAfter:(NSString * _Nullable)expireAfter expireEnabled:(BOOL)expireEnabled expireWarn:(NSString * _Nullable)expireWarn OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPITelemetryEvent;

/// This response object is returned after you post a telemetry event.
SWIFT_CLASS("_TtC11DocuSignAPI25DSAPIFailedTelemetryEvent")
@interface DSAPIFailedTelemetryEvent : NSObject
/// The event resulting in the failure.
@property (nonatomic, strong) DSAPITelemetryEvent * _Nullable event;
/// The failure reason.
@property (nonatomic, copy) NSString * _Nullable failureReason;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithEvent:(DSAPITelemetryEvent * _Nullable)event failureReason:(NSString * _Nullable)failureReason OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that displays the recipient's first name. This tab takes the recipient's name as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.
SWIFT_CLASS("_TtC11DocuSignAPI14DSAPIFirstName")
@interface DSAPIFirstName : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This object contains details about a folder.
SWIFT_CLASS("_TtC11DocuSignAPI11DSAPIFolder")
@interface DSAPIFolder : NSObject
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The ID of the folder.
@property (nonatomic, copy) NSString * _Nullable folderId;
/// A collection of folder objects returned in a response.
@property (nonatomic, copy) NSArray<DSAPIFolder *> * _Nullable folders;
/// When <em>true,</em> the current user has access to the folder.
@property (nonatomic) BOOL hasAccess;
/// When <em>true,</em> the folder has subfolders.
@property (nonatomic) BOOL hasSubFolders;
/// The number of items in the folder.
@property (nonatomic, copy) NSString * _Nullable itemCount;
/// The name of the folder.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable owner;
/// The ID of the parent folder, or the special value `root` for the root folder.
@property (nonatomic, copy) NSString * _Nullable parentFolderId;
/// The URI of the parent folder.
@property (nonatomic, copy) NSURL * _Nullable parentFolderUri;
/// The number of subfolders.
@property (nonatomic, copy) NSString * _Nullable subFolderCount;
/// The type of folder. Possible values include:  - `draft` - `inbox` - `normal` (a system-generated folder) - `recyclebin` - `sentitems` - `custom` (a custom folder created by a user)
@property (nonatomic, copy) NSString * _Nullable type;
/// The URI for the folder.
@property (nonatomic, copy) NSURL * _Nullable uri;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI20DSAPIFoldersResponse")
@interface DSAPIFoldersResponse : NSObject
/// The last index position in the result set.
@property (nonatomic, copy) NSString * _Nullable endPosition;
/// An array containing PowerForm data.
@property (nonatomic, copy) NSArray<DSAPIEnvelopeSummary *> * _Nullable envelopes;
/// A list of folder objects.
@property (nonatomic, copy) NSArray<DSAPIFolder *> * _Nullable folders;
/// The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search.
@property (nonatomic, copy) NSURL * _Nullable nextUri;
/// The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search.
@property (nonatomic, copy) NSURL * _Nullable previousUri;
/// The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.
@property (nonatomic, copy) NSString * _Nullable resultSetSize;
/// The starting index position of the current result set.
@property (nonatomic, copy) NSString * _Nullable startPosition;
/// The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.
@property (nonatomic, copy) NSString * _Nullable totalSetSize;
- (nonnull instancetype)initWithEndPosition:(NSString * _Nullable)endPosition envelopes:(NSArray<DSAPIEnvelopeSummary *> * _Nullable)envelopes folders:(NSArray<DSAPIFolder *> * _Nullable)folders nextUri:(NSURL * _Nullable)nextUri previousUri:(NSURL * _Nullable)previousUri resultSetSize:(NSString * _Nullable)resultSetSize startPosition:(NSString * _Nullable)startPosition totalSetSize:(NSString * _Nullable)totalSetSize OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The value of a formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the formula tab calculates and displays the result.  The `formula` property of the tab contains the references to the underlying tabs. See [Calculated Fields][calculatedfields] in the DocuSign Support Center to learn more about formulas.  If a formula tab contains a `paymentDetails` property, the tab is considered a payment item. See [Requesting Payments Along with Signatures][paymentguide] in the DocuSign Support Center to learn more about payments.  [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIFormulaTab")
@interface DSAPIFormulaTab : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// Contains the formula for calculating the value of this tab.  Use a tab's `tabLabel`, enclosed in brackets, to refer to it.  For example, you want to present the total cost of two items, tax included.  The cost of each item is stored in number tabs labeled Item1 and Item2. The tax rate is in a number tab labeled TaxRate.  The formula string for this property would be: `([Item1] + [Item2]) * (1 + [TaxRate])`  See [Calculated Fields][calculatedfields] in the DocuSign Support Center to learn more about formulas.  Maximum Length: 2000 characters  [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
@property (nonatomic, copy) NSString * _Nullable formula;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formulaMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// If this is a regular formula (no `paymentDetails` property is present):  * <em>true:</em> The tab is hidden. * <em>false:</em> The tab is shown.  If the formula is payment item (a `paymentDetails` property is present):  * <em>true:</em> The tab is displayed as a payment. * <em>false:</em> The tab is displayed as a regular formula.
@property (nonatomic, copy) NSString * _Nullable hidden;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable hiddenMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL isPaymentAmount;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable isPaymentAmountMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// The number of decimal places to round to.
@property (nonatomic, copy) NSString * _Nullable roundDecimalPlaces;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable roundDecimalPlacesMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+35, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+35, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that displays the recipient's full name.
SWIFT_CLASS("_TtC11DocuSignAPI13DSAPIFullName")
@interface DSAPIFullName : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPIOfflineAttributes;
@class DSAPIRecipientSignatureInformation;

/// Contains information about an in-person recipient. This is a DocuSign user, acting as a Signing Host, who is in the same physical location as the signer. To learn about the fields used for the eNotary feature, see the [recipients resource][resource].  [resource]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/#in-person-signer-recipient
SWIFT_CLASS("_TtC11DocuSignAPI19DSAPIInPersonSigner")
@interface DSAPIInPersonSigner : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// When <em>true,</em> specifies that the signer can perform the signing ceremony offline.
@property (nonatomic) BOOL canSignOffline;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion.   If this number is greater than `0` for a signing group, only the user who previously completed may sign again.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// The reason why the recipient was created (for example, `sender`). This property is read-only.
@property (nonatomic, copy) NSString * _Nullable creationReason;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// When <em>true,</em> this is the default recipient for the envelope. This option is used when creating an envelope from a template.
@property (nonatomic) BOOL defaultRecipient;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The signer's email address in an eNotary flow.  Use only when `inPersonSigningType` is `notary`. For regular in-person-signer flow, use `signerEmail` instead.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The email address of the signing host. This is the DocuSign user that is hosting the in-person signing session.  Required when `inPersonSigningType` is `inPersonSigner`. For eNotary flow, use `email` instead.  Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable hostEmail;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable hostEmailMetadata;
/// The name of the signing host. This is the DocuSign user that is hosting the in-person signing session.  Required when `inPersonSigningType` is `inPersonSigner`. For eNotary flow, use `name` instead.  Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable hostName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable hostNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// Specifies whether the envelope uses the eNotary feature. Valid values:  * `inPersonSigner`: The envelope uses the normal in-person signing flow. * `notary`: The envelope uses the eNotary in-person signing flow.
@property (nonatomic, copy) NSString * _Nullable inPersonSigningType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable inPersonSigningTypeMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The signer's full legal name in an eNotary flow.  Required when `inPersonSigningType` is `notary`. For a regular in-person-signer flow, use `signerName` instead.  Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
@property (nonatomic, copy) NSString * _Nullable notaryId;
/// A note sent to the in-person signer in the signing email. This note is visible only to this recipient.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
@property (nonatomic, strong) DSAPIOfflineAttributes * _Nullable offlineAttributes;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// When <em>true,</em> specifies that the recipient creates the tabs.
@property (nonatomic) BOOL recipientSuppliesTabs;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.  This parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates.   Set this parameter to `safe` to use a SAFE-BioPharma certificate.  The signer must be enrolled in the SAFE program to sign with a SAFE certificate.
@property (nonatomic, copy) NSString * _Nullable requireSignerCertificate;
/// When <em>true,</em> the signer must print, sign, and upload or fax the signed documents to DocuSign.
@property (nonatomic) BOOL requireSignOnPaper;
/// When <em>true,</em> the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.
@property (nonatomic) BOOL requireUploadSignature;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
@property (nonatomic, strong) DSAPIRecipientSignatureInformation * _Nullable signatureInfo;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// The in-person signer's email address.  Required when `inPersonSigningType` is `inPersonSigner`. For eNotary flow, use `email` instead.  Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signerEmail;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signerEmailMetadata;
/// The signer's first name.
@property (nonatomic, copy) NSString * _Nullable signerFirstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signerFirstNameMetadata;
/// The signer's last name.
@property (nonatomic, copy) NSString * _Nullable signerLastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signerLastNameMetadata;
/// Required. The full legal name of a signer for the envelope.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signerName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signerNameMetadata;
/// When <em>true</em> and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).
@property (nonatomic, copy) NSString * _Nullable signInEachLocation;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signInEachLocationMetadata;
/// Not applicable. You cannot use a signing group for an in-person signer.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// Not applicable.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The total number of tabs in the documents. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to initial the document. May be optional.
SWIFT_CLASS("_TtC11DocuSignAPI16DSAPIInitialHere")
@interface DSAPIInitialHere : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable handDrawRequired;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// When <em>true,</em> the recipient does not need to complete this tab to complete the signing process.
@property (nonatomic) BOOL optional;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable optionalMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Sets the size for the InitialHere tab. It can be value from 0.5 to 1.0, where 1.0 represents full size and 0.5 is 50% size.
@property (nonatomic, copy) NSString * _Nullable scaleValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable scaleValueMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+2, -7)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+2, -7)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
@property (nonatomic, copy) NSString * _Nullable imageDataBase64;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Contains information about an intermediary recipient. An intermediary is a recipient who can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order, unless subsequent agents, editors or intermediaries are added.
SWIFT_CLASS("_TtC11DocuSignAPI17DSAPIIntermediary")
@interface DSAPIIntermediary : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address. Notification of the document to sign is sent to this email address.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name. Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipientÃ¢ÂÂs email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that displays the recipient's last name. This tab takes the recipient's name as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.
SWIFT_CLASS("_TtC11DocuSignAPI13DSAPILastName")
@interface DSAPILastName : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This tab offers a list of options to choose from. The `listItems` property contains a list of <a href="/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/">`listItem`</a> objects to specify the selectable options.
SWIFT_CLASS("_TtC11DocuSignAPI9DSAPIList")
@interface DSAPIList : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// The value in the list that is selected by default.
@property (nonatomic, copy) NSString * _Nullable listSelectedValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable listSelectedValueMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic, copy) NSString * _Nullable requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The value to use when the item is selected.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This object represents a list custom field from which envelope creators and senders can select custom data.
SWIFT_CLASS("_TtC11DocuSignAPI20DSAPIListCustomField")
@interface DSAPIListCustomField : NSObject
/// If you are using merge fields, this property specifies the type of the merge field. The only supported value is `salesforce`.
@property (nonatomic, copy) NSString * _Nullable configurationType;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The ID of the custom field.
@property (nonatomic, copy) NSString * _Nullable fieldId;
/// An array of strings that represents the options in a list.  Maximum length: 2048 characters, but each individual option string can only be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable listItems;
/// The name of the custom field.
@property (nonatomic, copy) NSString * _Nullable name;
/// When <em>true,</em> senders are required to select an option from the list before they can send the envelope.
@property (nonatomic) BOOL required;
/// When <em>true,</em> the field displays in the <em>Envelope Custom Fields</em> section when a user creates or sends an envelope.
@property (nonatomic) BOOL show;
/// The value of the custom field. This is the value that the user who creates or sends the envelope selects from the list.
@property (nonatomic, copy) NSString * _Nullable value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConfigurationType:(NSString * _Nullable)configurationType errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails fieldId:(NSString * _Nullable)fieldId listItems:(NSArray<NSString *> * _Nullable)listItems name:(NSString * _Nullable)name required:(BOOL)required show:(BOOL)show value:(NSString * _Nullable)value OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DocuSignAPI20DSAPILockInformation")
@interface DSAPILockInformation : NSObject
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The number of seconds to lock the envelope for editing.  This value must be greater than `0` seconds.
@property (nonatomic, copy) NSString * _Nullable lockDurationInSeconds;
/// The human-readable name of the application that is locking the envelope or template. This value displays to the user in error messages when lock conflicts occur.
@property (nonatomic, copy) NSString * _Nullable lockedByApp;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable lockedByUser;
/// The date and time that the lock expires.
@property (nonatomic, copy) NSDate * _Nullable lockedUntilDateTime;
/// A unique identifier provided to the owner of the lock. You must use this token with subsequent calls to prove ownership of the lock.
@property (nonatomic, copy) NSString * _Nullable lockToken;
/// The type of lock.  Currently `edit` is the only supported type.
@property (nonatomic, copy) NSString * _Nullable lockType;
/// When <em>true,</em> a scratchpad is used to edit information.
@property (nonatomic) BOOL useScratchPad;
- (nonnull instancetype)initWithErrorDetails:(DSAPIErrorDetails * _Nullable)errorDetails lockDurationInSeconds:(NSString * _Nullable)lockDurationInSeconds lockedByApp:(NSString * _Nullable)lockedByApp lockedByUser:(DSAPIUserInfo * _Nullable)lockedByUser lockedUntilDateTime:(NSDate * _Nullable)lockedUntilDateTime lockToken:(NSString * _Nullable)lockToken lockType:(NSString * _Nullable)lockType useScratchPad:(BOOL)useScratchPad OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIPathExtendedElement;

/// Contains information for transfering values between Salesforce data fields and DocuSign Tabs.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIMergeField")
@interface DSAPIMergeField : NSObject
/// When <em>true,</em> the sender can modify the value of the `mergeField` tab during the sending process.
@property (nonatomic) BOOL allowSenderToEdit;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable allowSenderToEditMetadata;
/// If you are using merge fields, this property specifies the type of the merge field. The only supported value is `salesforce`.
@property (nonatomic, copy) NSString * _Nullable configurationType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable configurationTypeMetadata;
/// Sets the object associated with the custom tab. Currently this is the Salesforce Object.
@property (nonatomic, copy) NSString * _Nullable path;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIPathExtendedElement *> * _Nullable pathExtended;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pathExtendedMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pathMetadata;
/// Specifies the row number in a Salesforce table that the merge field value corresponds to.
@property (nonatomic, copy) NSString * _Nullable row;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable rowMetadata;
/// When <em>true,</em> data entered into the merge field during Signing will update the mapped Salesforce field.
@property (nonatomic) BOOL writeBack;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable writeBackMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAllowSenderToEdit:(BOOL)allowSenderToEdit allowSenderToEditMetadata:(DSAPIPropertyMetadata * _Nullable)allowSenderToEditMetadata configurationType:(NSString * _Nullable)configurationType configurationTypeMetadata:(DSAPIPropertyMetadata * _Nullable)configurationTypeMetadata path:(NSString * _Nullable)path pathExtended:(NSArray<DSAPIPathExtendedElement *> * _Nullable)pathExtended pathExtendedMetadata:(DSAPIPropertyMetadata * _Nullable)pathExtendedMetadata pathMetadata:(DSAPIPropertyMetadata * _Nullable)pathMetadata row:(NSString * _Nullable)row rowMetadata:(DSAPIPropertyMetadata * _Nullable)rowMetadata writeBack:(BOOL)writeBack writeBackMetadata:(DSAPIPropertyMetadata * _Nullable)writeBackMetadata OBJC_DESIGNATED_INITIALIZER;
@end


/// A name-value pair that describes an item and provides a value for the item.
SWIFT_CLASS("_TtC11DocuSignAPI14DSAPINameValue")
@interface DSAPINameValue : NSObject
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The name of the item.
@property (nonatomic, copy) NSString * _Nullable name;
/// The initial value of the item.
@property (nonatomic, copy) NSString * _Nullable originalValue;
/// The current value of the item.
@property (nonatomic, copy) NSString * _Nullable value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithErrorDetails:(DSAPIErrorDetails * _Nullable)errorDetails name:(NSString * _Nullable)name originalValue:(NSString * _Nullable)originalValue value:(NSString * _Nullable)value OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DocuSignAPI20DSAPINotaryRecipient")
@interface DSAPINotaryRecipient : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditEmail;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditName;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSURL * _Nullable bulkRecipientsUri;
/// When <em>true,</em> specifies that the signer can perform the signing ceremony offline.
@property (nonatomic) BOOL canSignOffline;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// The reason why the item was created.
@property (nonatomic, copy) NSString * _Nullable creationReason;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// When <em>true,</em> this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.
@property (nonatomic) BOOL defaultRecipient;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address. Notification of the document to sign is sent to this email address.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The user's first name.  Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable isBulkRecipient;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable isBulkRecipientMetadata;
/// The user's last name.  Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// URL that directs the recipient to LiveOak to complete the remote online notarization process. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable liveOakStartURL;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum length: 100 characters.  Note: You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// Not applicable to Notary tab.
@property (nonatomic, copy) NSString * _Nullable notaryId;
@property (nonatomic, copy) NSString * _Nullable notarySignerEmailSent;
/// An array of strings that correspond to the `recipientId` of each signer in the notary group. This property is read-only.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable notarySigners;
/// The notary type. This property is read-only. Valid values:  - `inperson` - `remote`
@property (nonatomic, copy) NSString * _Nullable notaryType;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
@property (nonatomic, strong) DSAPIOfflineAttributes * _Nullable offlineAttributes;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// When <em>true,</em> specifies that the recipient creates the tabs.
@property (nonatomic) BOOL recipientSuppliesTabs;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.  This parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates.   Set this parameter to `safe` to use a SAFE-BioPharma certificate.  The signer must be enrolled in the SAFE program to sign with a SAFE certificate.
@property (nonatomic, copy) NSString * _Nullable requireSignerCertificate;
/// When <em>true,</em> the signer must print, sign, and upload or fax the signed documents to DocuSign.
@property (nonatomic) BOOL requireSignOnPaper;
/// When <em>true,</em> the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.
@property (nonatomic) BOOL requireUploadSignature;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
@property (nonatomic, strong) DSAPIRecipientSignatureInformation * _Nullable signatureInfo;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// When <em>true</em> and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).
@property (nonatomic) BOOL signInEachLocation;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signInEachLocationMetadata;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.
@property (nonatomic, copy) NSString * _Nullable status;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A tab that displays additional information, in the form of a note, for the recipient.
SWIFT_CLASS("_TtC11DocuSignAPI9DSAPINote")
@interface DSAPINote : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.  <em>Note:</em> Approve, Date Signed, Decline, Email Address, and Note tabs do not display custom tooltip text in the signing interface. Although you can technically set a value via the API for these tabs, it will not be displayed to the recipient.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIReminders;

/// A complex element that specifies the notification settings for the envelope.
SWIFT_CLASS("_TtC11DocuSignAPI17DSAPINotification")
@interface DSAPINotification : NSObject
@property (nonatomic, strong) DSAPIExpirations * _Nullable expirations;
@property (nonatomic, strong) DSAPIReminders * _Nullable reminders;
/// When <em>true,</em> the account default notification settings are used for the envelope, overriding the reminders and expirations settings. When <em>false,</em> the reminders and expirations settings specified in this request are used. The default value is <em>false.</em>
@property (nonatomic) BOOL useAccountDefaults;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithExpirations:(DSAPIExpirations * _Nullable)expirations reminders:(DSAPIReminders * _Nullable)reminders useAccountDefaults:(BOOL)useAccountDefaults OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to enter numbers and decimal (.) points.
SWIFT_CLASS("_TtC11DocuSignAPI11DSAPINumber")
@interface DSAPINumber : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// Contains the formula for calculating the value of this tab.  Use a tab's `tabLabel`, enclosed in brackets, to refer to it.  For example, you want to present the total cost of two items, tax included.  The cost of each item is stored in number tabs labeled Item1 and Item2. The tax rate is in a number tab labeled TaxRate.  The formula string for this property would be: `([Item1] + [Item2]) * (1 + [TaxRate])`  See [Calculated Fields][calculatedfields] in the DocuSign Support Center to learn more about formulas.  Maximum Length: 2000 characters  [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
@property (nonatomic, copy) NSString * _Nullable formula;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formulaMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL isPaymentAmount;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable isPaymentAmountMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Reserved for DocuSign use.
SWIFT_CLASS("_TtC11DocuSignAPI22DSAPIOfflineAttributes")
@interface DSAPIOfflineAttributes : NSObject
/// The GUID of the account associated with the consumer disclosure.
@property (nonatomic, copy) NSString * _Nullable accountEsignId;
/// A string containing information about the model of the device used for offline signing.
@property (nonatomic, copy) NSString * _Nullable deviceModel;
/// A string containing information about the type of device used for offline signing.
@property (nonatomic, copy) NSString * _Nullable deviceName;
/// A string containing the latitude of the device location at the time of signing.
@property (nonatomic, copy) NSString * _Nullable gpsLatitude;
/// A string containing the longitude of the device location at the time of signing.
@property (nonatomic, copy) NSString * _Nullable gpsLongitude;
/// A signing hash used for offline signing.
@property (nonatomic, copy) NSString * _Nullable offlineSigningHash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAccountEsignId:(NSString * _Nullable)accountEsignId deviceModel:(NSString * _Nullable)deviceModel deviceName:(NSString * _Nullable)deviceName gpsLatitude:(NSString * _Nullable)gpsLatitude gpsLongitude:(NSString * _Nullable)gpsLongitude offlineSigningHash:(NSString * _Nullable)offlineSigningHash OBJC_DESIGNATED_INITIALIZER;
@end


/// Description of a page of a document.
SWIFT_CLASS("_TtC11DocuSignAPI9DSAPIPage")
@interface DSAPIPage : NSObject
/// The number of dots per inch used for the page image.
@property (nonatomic, copy) NSString * _Nullable dpi;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The height of the page in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
/// The number of image bytes.
@property (nonatomic, copy) NSString * _Nullable imageBytes;
/// The MIME type.
@property (nonatomic, copy) NSString * _Nullable mimeType;
/// The ID of the page.
@property (nonatomic, copy) NSString * _Nullable pageId;
/// The sequence of the page in the document, or page number.
@property (nonatomic, copy) NSString * _Nullable sequence;
/// The width of the page in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
- (nonnull instancetype)initWithDpi:(NSString * _Nullable)dpi errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails height:(NSString * _Nullable)height imageBytes:(NSString * _Nullable)imageBytes mimeType:(NSString * _Nullable)mimeType pageId:(NSString * _Nullable)pageId sequence:(NSString * _Nullable)sequence width:(NSString * _Nullable)width OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI24DSAPIPathExtendedElement")
@interface DSAPIPathExtendedElement : NSObject
@property (nonatomic, copy) NSString * _Nullable name;
/// The type of this tab. Values are:  - Approve - CheckBox - Company - Date - DateSigned, Decline - Email, EmailAddress - EnvelopeId - FirstName - Formula - FullName, InitialHere - InitialHereOptional - LastName - List - Note - Number - Radio - SignerAttachment - SignHere - SignHereOptional - Ssn - Text - Title - Zip5 - Zip5Dash4
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable typeName;
- (nonnull instancetype)initWithName:(NSString * _Nullable)name type:(NSString * _Nullable)type typeName:(NSString * _Nullable)typeName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Metadata about a property.
SWIFT_CLASS("_TtC11DocuSignAPI21DSAPIPropertyMetadata")
@interface DSAPIPropertyMetadata : NSObject
/// An array of option strings supported by this setting.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable options;
/// Indicates whether the property is editable. Valid values are:  - `editable` - `read_only`
@property (nonatomic, copy) NSString * _Nullable rights;
- (nonnull instancetype)initWithOptions:(NSArray<NSString *> * _Nullable)options rights:(NSString * _Nullable)rights OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// One of the selectable radio buttons in the `radios` property of a <a href="/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/">`radioGroup`</a> tab.
SWIFT_CLASS("_TtC11DocuSignAPI10DSAPIRadio")
@interface DSAPIRadio : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// Specifies the page number on which the tab is located. Must be 1 for supplemental documents.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// When <em>true,</em> the radio button is selected.
@property (nonatomic) BOOL selected;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable selectedMetadata;
/// Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAnchorAllowWhiteSpaceInCharacters:(BOOL)anchorAllowWhiteSpaceInCharacters anchorAllowWhiteSpaceInCharactersMetadata:(DSAPIPropertyMetadata * _Nullable)anchorAllowWhiteSpaceInCharactersMetadata anchorCaseSensitive:(BOOL)anchorCaseSensitive anchorCaseSensitiveMetadata:(DSAPIPropertyMetadata * _Nullable)anchorCaseSensitiveMetadata anchorHorizontalAlignment:(NSString * _Nullable)anchorHorizontalAlignment anchorHorizontalAlignmentMetadata:(DSAPIPropertyMetadata * _Nullable)anchorHorizontalAlignmentMetadata anchorIgnoreIfNotPresent:(BOOL)anchorIgnoreIfNotPresent anchorIgnoreIfNotPresentMetadata:(DSAPIPropertyMetadata * _Nullable)anchorIgnoreIfNotPresentMetadata anchorMatchWholeWord:(BOOL)anchorMatchWholeWord anchorMatchWholeWordMetadata:(DSAPIPropertyMetadata * _Nullable)anchorMatchWholeWordMetadata anchorString:(NSString * _Nullable)anchorString anchorStringMetadata:(DSAPIPropertyMetadata * _Nullable)anchorStringMetadata anchorTabProcessorVersion:(NSString * _Nullable)anchorTabProcessorVersion anchorTabProcessorVersionMetadata:(DSAPIPropertyMetadata * _Nullable)anchorTabProcessorVersionMetadata anchorUnits:(NSString * _Nullable)anchorUnits anchorUnitsMetadata:(DSAPIPropertyMetadata * _Nullable)anchorUnitsMetadata anchorXOffset:(NSString * _Nullable)anchorXOffset anchorXOffsetMetadata:(DSAPIPropertyMetadata * _Nullable)anchorXOffsetMetadata anchorYOffset:(NSString * _Nullable)anchorYOffset anchorYOffsetMetadata:(DSAPIPropertyMetadata * _Nullable)anchorYOffsetMetadata bold:(BOOL)bold boldMetadata:(DSAPIPropertyMetadata * _Nullable)boldMetadata errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails font:(NSString * _Nullable)font fontColor:(NSString * _Nullable)fontColor fontColorMetadata:(DSAPIPropertyMetadata * _Nullable)fontColorMetadata fontMetadata:(DSAPIPropertyMetadata * _Nullable)fontMetadata fontSize:(NSString * _Nullable)fontSize fontSizeMetadata:(DSAPIPropertyMetadata * _Nullable)fontSizeMetadata italic:(BOOL)italic italicMetadata:(DSAPIPropertyMetadata * _Nullable)italicMetadata locked:(BOOL)locked lockedMetadata:(DSAPIPropertyMetadata * _Nullable)lockedMetadata pageNumber:(NSString * _Nullable)pageNumber pageNumberMetadata:(DSAPIPropertyMetadata * _Nullable)pageNumberMetadata required:(BOOL)required requiredMetadata:(DSAPIPropertyMetadata * _Nullable)requiredMetadata selected:(BOOL)selected selectedMetadata:(DSAPIPropertyMetadata * _Nullable)selectedMetadata status:(NSString * _Nullable)status statusMetadata:(DSAPIPropertyMetadata * _Nullable)statusMetadata tabId:(NSString * _Nullable)tabId tabIdMetadata:(DSAPIPropertyMetadata * _Nullable)tabIdMetadata tabOrder:(NSString * _Nullable)tabOrder tabOrderMetadata:(DSAPIPropertyMetadata * _Nullable)tabOrderMetadata underline:(BOOL)underline underlineMetadata:(DSAPIPropertyMetadata * _Nullable)underlineMetadata value:(NSString * _Nullable)value valueMetadata:(DSAPIPropertyMetadata * _Nullable)valueMetadata xPosition:(NSString * _Nullable)xPosition xPositionMetadata:(DSAPIPropertyMetadata * _Nullable)xPositionMetadata yPosition:(NSString * _Nullable)yPosition yPositionMetadata:(DSAPIPropertyMetadata * _Nullable)yPositionMetadata OBJC_DESIGNATED_INITIALIZER;
@end


/// This group tab is used to place radio buttons on a document. The `radios` property contains a list of <a href="/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/">`radio`</a> objects  associated with the group. Only one radio button can be selected in a group.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIRadioGroup")
@interface DSAPIRadioGroup : NSObject
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
/// The name of the group. The search_text provided in the call automatically performs a wild card search on group_name.
@property (nonatomic, copy) NSString * _Nullable groupName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable groupNameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// Specifies the locations and status for radio buttons that are grouped together.
@property (nonatomic, copy) NSArray<DSAPIRadio *> * _Nullable radios;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tooltipMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConditionalParentLabel:(NSString * _Nullable)conditionalParentLabel conditionalParentLabelMetadata:(DSAPIPropertyMetadata * _Nullable)conditionalParentLabelMetadata conditionalParentValue:(NSString * _Nullable)conditionalParentValue conditionalParentValueMetadata:(DSAPIPropertyMetadata * _Nullable)conditionalParentValueMetadata documentId:(NSString * _Nullable)documentId documentIdMetadata:(DSAPIPropertyMetadata * _Nullable)documentIdMetadata groupName:(NSString * _Nullable)groupName groupNameMetadata:(DSAPIPropertyMetadata * _Nullable)groupNameMetadata originalValue:(NSString * _Nullable)originalValue originalValueMetadata:(DSAPIPropertyMetadata * _Nullable)originalValueMetadata radios:(NSArray<DSAPIRadio *> * _Nullable)radios recipientId:(NSString * _Nullable)recipientId recipientIdGuid:(NSString * _Nullable)recipientIdGuid recipientIdGuidMetadata:(DSAPIPropertyMetadata * _Nullable)recipientIdGuidMetadata recipientIdMetadata:(DSAPIPropertyMetadata * _Nullable)recipientIdMetadata requireAll:(BOOL)requireAll requireAllMetadata:(DSAPIPropertyMetadata * _Nullable)requireAllMetadata requireInitialOnSharedChange:(BOOL)requireInitialOnSharedChange requireInitialOnSharedChangeMetadata:(DSAPIPropertyMetadata * _Nullable)requireInitialOnSharedChangeMetadata shared:(BOOL)shared sharedMetadata:(DSAPIPropertyMetadata * _Nullable)sharedMetadata shareToRecipients:(NSString * _Nullable)shareToRecipients shareToRecipientsMetadata:(DSAPIPropertyMetadata * _Nullable)shareToRecipientsMetadata tabType:(NSString * _Nullable)tabType tabTypeMetadata:(DSAPIPropertyMetadata * _Nullable)tabTypeMetadata templateLocked:(BOOL)templateLocked templateLockedMetadata:(DSAPIPropertyMetadata * _Nullable)templateLockedMetadata templateRequired:(BOOL)templateRequired templateRequiredMetadata:(DSAPIPropertyMetadata * _Nullable)templateRequiredMetadata tooltip:(NSString * _Nullable)tooltip tooltipMetadata:(DSAPIPropertyMetadata * _Nullable)tooltipMetadata value:(NSString * _Nullable)value valueMetadata:(DSAPIPropertyMetadata * _Nullable)valueMetadata OBJC_DESIGNATED_INITIALIZER;
@end


/// Describes an additional notification method.
SWIFT_CLASS("_TtC11DocuSignAPI36DSAPIRecipientAdditionalNotification")
@interface DSAPIRecipientAdditionalNotification : NSObject
/// The secondary delivery method. One of:  - `email` - `fax` - `SMS` - `offline`
@property (nonatomic, copy) NSString * _Nullable secondaryDeliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable secondaryDeliveryMethodMetadata;
/// The status of the delivery. This property is read-only.  One of:  - `autoresponded` - `optedout` - `limitreached`
@property (nonatomic, copy) NSString * _Nullable secondaryDeliveryStatus;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI24DSAPIRecipientAttachment")
@interface DSAPIRecipientAttachment : NSObject
/// The unique identifier for the attachment.
@property (nonatomic, copy) NSString * _Nullable attachmentId;
/// Specifies the type of the attachment for the recipient. Possible values are:  - `.htm` - `.xml`
@property (nonatomic, copy) NSString * _Nullable attachmentType;
/// A Base64-encoded representation of the attachment that is used to upload and download the file. File attachments may be up to 50 MB in size.
@property (nonatomic, copy) NSString * _Nullable data;
/// An optional label for the attachment.
@property (nonatomic, copy) NSString * _Nullable label;
/// The name of the attachment.
@property (nonatomic, copy) NSString * _Nullable name;
/// The URL of a previously staged chunked upload. Using a chunked upload enables you to stage a large, chunkable temp file. You then use the `remoteUrl` property to reference the chunked upload as the content in attachment and document-related requests. The `remoteUrl` property cannot be used for downloads.
@property (nonatomic, copy) NSURL * _Nullable remoteUrl;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAttachmentId:(NSString * _Nullable)attachmentId attachmentType:(NSString * _Nullable)attachmentType data:(NSString * _Nullable)data label:(NSString * _Nullable)label name:(NSString * _Nullable)name remoteUrl:(NSURL * _Nullable)remoteUrl OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DocuSignAPI31DSAPIRecipientEmailNotification")
@interface DSAPIRecipientEmailNotification : NSObject
/// The body of the email message.
@property (nonatomic, copy) NSString * _Nullable emailBody;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailBodyMetadata;
/// The subject line for the email notification.
@property (nonatomic, copy) NSString * _Nullable emailSubject;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailSubjectMetadata;
/// The language to use for the standard email format and signing view for a recipient.  For example, in the recipient's email notification, this setting affects elements such as the standard introductory text describing the request to sign. It also determines the language used for buttons and tabs in both the email notification and the signing experience.  <em>Note:</em> This setting affects only DocuSign standard text. Any custom text that you enter for the `emailBody` and `emailSubject` of the notification is not translated, and appears exactly as you enter it.   To retrieve the possible values, use the [Accounts::listSupportedLanguages][ListLang] method.  [ListLang]: /docs/esign-rest-api/reference/accounts/accounts/listsupportedlanguages/
@property (nonatomic, copy) NSString * _Nullable supportedLanguage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable supportedLanguageMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithEmailBody:(NSString * _Nullable)emailBody emailBodyMetadata:(DSAPIPropertyMetadata * _Nullable)emailBodyMetadata emailSubject:(NSString * _Nullable)emailSubject emailSubjectMetadata:(DSAPIPropertyMetadata * _Nullable)emailSubjectMetadata supportedLanguage:(NSString * _Nullable)supportedLanguage supportedLanguageMetadata:(DSAPIPropertyMetadata * _Nullable)supportedLanguageMetadata OBJC_DESIGNATED_INITIALIZER;
@end


/// Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication.
SWIFT_CLASS("_TtC11DocuSignAPI31DSAPIRecipientSMSAuthentication")
@interface DSAPIRecipientSMSAuthentication : NSObject
/// An array containing a list of phone numbers that the recipient can use for SMS text authentication.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable senderProvidedNumbers;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderProvidedNumbersMetadata;
- (nonnull instancetype)initWithSenderProvidedNumbers:(NSArray<NSString *> * _Nullable)senderProvidedNumbers senderProvidedNumbersMetadata:(DSAPIPropertyMetadata * _Nullable)senderProvidedNumbersMetadata OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.  Used only with recipient types In Person Signers and Signers.
SWIFT_CLASS("_TtC11DocuSignAPI34DSAPIRecipientSignatureInformation")
@interface DSAPIRecipientSignatureInformation : NSObject
/// The font type to use for the signature if the signature is not drawn. The following font styles  are supported. The quotes are to indicate that these values are strings, not `enums`.  - `&quot;1_DocuSign&quot;` - `&quot;2_DocuSign&quot;` - `&quot;3_DocuSign&quot;` - `&quot;4_DocuSign&quot;` - `&quot;5_DocuSign&quot;` - `&quot;6_DocuSign&quot;` - `&quot;7_DocuSign&quot;` - `&quot;8_DocuSign&quot;` - `&quot;Mistral&quot;` - `&quot;Rage Italic&quot;`
@property (nonatomic, copy) NSString * _Nullable fontStyle;
/// Specifies the user's signature in initials format.
@property (nonatomic, copy) NSString * _Nullable signatureInitials;
/// Specifies the user's signature name.
@property (nonatomic, copy) NSString * _Nullable signatureName;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFontStyle:(NSString * _Nullable)fontStyle signatureInitials:(NSString * _Nullable)signatureInitials signatureName:(NSString * _Nullable)signatureName OBJC_DESIGNATED_INITIALIZER;
@end


/// The recipient details that are returned after you update the recipient.
SWIFT_CLASS("_TtC11DocuSignAPI28DSAPIRecipientUpdateResponse")
@interface DSAPIRecipientUpdateResponse : NSObject
/// When you use the query parameter `combine_same_order_recipients` on the PUT Recipients call, the `recipientUpdateResponse` returns this property. When <em>true,</em> it indicates that the recipient has been combined or merged with a matching recipient. Recipient matching occurs as part of template matching, and is based on Recipient Role and Routing Order.
@property (nonatomic, copy) NSString * _Nullable combined;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
- (nonnull instancetype)initWithCombined:(NSString * _Nullable)combined errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails recipientId:(NSString * _Nullable)recipientId recipientIdGuid:(NSString * _Nullable)recipientIdGuid tabs:(DSAPITabs * _Nullable)tabs OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The request body for the <a href="/docs/esign-rest-api/reference/envelopes/envelopeviews/createrecipient/">EnvelopeViews: createRecipient</a> and <a href="/docs/esign-rest-api/reference/envelopes/envelopeviews/createsharedrecipient/">EnvelopeViews: createSharedRecipient</a> methods.
SWIFT_CLASS("_TtC11DocuSignAPI25DSAPIRecipientViewRequest")
@interface DSAPIRecipientViewRequest : NSObject
/// A unique identifier of the authentication event executed by the client application.
@property (nonatomic, copy) NSString * _Nullable assertionId;
/// A sender-generated value that indicates the date and time that the signer was authenticated.
@property (nonatomic, copy) NSString * _Nullable authenticationInstant;
/// Required. Choose a value that most closely matches the technique your application used to authenticate the recipient / signer.   Choose a value from this list:  * Biometric  * Email * HTTPBasicAuth * Kerberos * KnowledgeBasedAuth * None * PaperDocuments * Password * RSASecureID * SingleSignOn_CASiteminder * SingleSignOn_InfoCard * SingleSignOn_MicrosoftActiveDirectory * SingleSignOn_Other * SingleSignOn_Passport * SingleSignOn_SAML * Smartcard * SSLMutualAuth * X509Certificate  This information is included in the Certificate of Completion.
@property (nonatomic, copy) NSString * _Nullable authenticationMethod;
/// A sender-created value. If provided, the recipient is treated as an embedded (captive) recipient or signer.  Use your application's client ID (user ID) for the recipient. Doing so enables the details of your application's authentication of the recipient to be connected to the recipient's signature if the signature is disputed or repudiated.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// (Required) Specifies the email of the recipient. You can use either `email` and `userName` or `userId` to identify the recipient.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable frameAncestors;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable messageOrigins;
/// Only used if `pingUrl` is specified. This is the interval, in seconds, between pings on the `pingUrl`.  The default is `300` seconds. Valid values are 60-1200 seconds.
@property (nonatomic, copy) NSString * _Nullable pingFrequency;
/// The client URL that the DocuSign Signing experience should ping to indicate to the client that Signing is active. An HTTP GET call is executed against the client. The response from the client is ignored. The intent is for the client to reset its session timer when the request is received.
@property (nonatomic, copy) NSURL * _Nullable pingUrl;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// (Required) The URL to which the user should be redirected after the signing session has ended.  Maximum Length: 470 characters. If the `returnUrl` exceeds this limit, the user is redirected to a truncated URL Be sure to include `https://` in the URL or redirecting might fail on some browsers.   When DocuSign redirects to this URL, it will include an `event` query parameter that your app can use:  * `access_code_failed`: Recipient used incorrect access code. * `cancel`: Recipient canceled the signing operation,   possibly by using the <em>Finish Later</em> option. * `decline`: Recipient declined to sign. * `exception`: A system error occurred during the signing process. * `fax_pending`: Recipient has a fax pending. * `id_check_failed`: Recipient failed an ID check. * `session_timeout`: The session timed out. An account can control this timeout by using the <em>Signer Session Timeout</em> option. * `signing_complete`: The recipient completed the signing ceremony. * `ttl_expired`: The Time To Live token for the envelope has expired.   After being successfully invoked, these tokens expire   after 5 minutes or if the envelope is voided. * `viewing_complete`: The recipient completed viewing an envelope   that is in a read-only/terminal state,   such as completed, declined, or voided.
@property (nonatomic, copy) NSURL * _Nullable returnUrl;
/// The domain in which the user authenticated.
@property (nonatomic, copy) NSString * _Nullable securityDomain;
/// The user ID of the recipient. You can use either the user ID or email and user name to identify the recipient.   If `userId` is used and a `clientUserId` is provided, the value in the `userId` property must match a `recipientId` (which you can retrieve with a GET recipients call) for the envelope.   If a `userId` is used and a `clientUserId` is not provided, the `userId` must match the user ID of the authenticating user.
@property (nonatomic, copy) NSString * _Nullable userId;
/// The username of the recipient. You can use either `email` and `userName` or `userId` to identify the recipient.
@property (nonatomic, copy) NSString * _Nullable userName;
/// Specifies whether a browser should be allowed to render a page in a frame or IFrame. Setting this property ensures that your content is not embedded into unauthorized pages or frames.  Valid values are:  - `deny`: The page cannot be displayed in a frame. - `same_origin`: The page can only be displayed in a frame on the same origin as the page itself. - `allow_from`: The page can only be displayed in a frame on the origin specified by the `xFrameOptionsAllowFromUrl` property.
@property (nonatomic, copy) NSString * _Nullable xFrameOptions;
/// When the value of `xFrameOptions` is `allow_from`, this property specifies the origin on which the page is allowed to display in a frame. If the value of `xFrameOptions` is `allow_from`, you must include a value for this property.
@property (nonatomic, copy) NSURL * _Nullable xFrameOptionsAllowFromUrl;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPISealSign;
@class DSAPISigner;
@class DSAPIWitness;

/// Specifies the envelope recipients.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIRecipients")
@interface DSAPIRecipients : NSObject
/// A list of agent recipients assigned to the documents.
@property (nonatomic, copy) NSArray<DSAPIAgent *> * _Nullable agents;
/// A list of carbon copy recipients assigned to the documents.
@property (nonatomic, copy) NSArray<DSAPICarbonCopy *> * _Nullable carbonCopies;
/// A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.
@property (nonatomic, copy) NSArray<DSAPICertifiedDelivery *> * _Nullable certifiedDeliveries;
/// The routing order of the current recipient. If this value equals a particular signer's routing order, it indicates that the envelope has been sent to that recipient, but he or she has not completed the required actions.
@property (nonatomic, copy) NSString * _Nullable currentRoutingOrder;
/// A list of users who can edit the envelope.
@property (nonatomic, copy) NSArray<DSAPIEditor *> * _Nullable editors;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.
@property (nonatomic, copy) NSArray<DSAPIInPersonSigner *> * _Nullable inPersonSigners;
/// Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).
@property (nonatomic, copy) NSArray<DSAPIIntermediary *> * _Nullable intermediaries;
/// A list of notary recipients on the envelope.
@property (nonatomic, copy) NSArray<DSAPINotaryRecipient *> * _Nullable notaries;
/// The number of recipients in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientCount;
/// A list of electronic seals to apply to documents.
@property (nonatomic, copy) NSArray<DSAPISealSign *> * _Nullable seals;
/// A list of signers on the envelope.
@property (nonatomic, copy) NSArray<DSAPISigner *> * _Nullable signers;
/// A list of signers who act as witnesses on the envelope.
@property (nonatomic, copy) NSArray<DSAPIWitness *> * _Nullable witnesses;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAgents:(NSArray<DSAPIAgent *> * _Nullable)agents carbonCopies:(NSArray<DSAPICarbonCopy *> * _Nullable)carbonCopies certifiedDeliveries:(NSArray<DSAPICertifiedDelivery *> * _Nullable)certifiedDeliveries currentRoutingOrder:(NSString * _Nullable)currentRoutingOrder editors:(NSArray<DSAPIEditor *> * _Nullable)editors errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails inPersonSigners:(NSArray<DSAPIInPersonSigner *> * _Nullable)inPersonSigners intermediaries:(NSArray<DSAPIIntermediary *> * _Nullable)intermediaries notaries:(NSArray<DSAPINotaryRecipient *> * _Nullable)notaries recipientCount:(NSString * _Nullable)recipientCount seals:(NSArray<DSAPISealSign *> * _Nullable)seals signers:(NSArray<DSAPISigner *> * _Nullable)signers witnesses:(NSArray<DSAPIWitness *> * _Nullable)witnesses OBJC_DESIGNATED_INITIALIZER;
@end


@interface DSAPIRecipients (SWIFT_EXTENSION(DocuSignAPI))
- (id _Nullable)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end


/// This is the response that the API returns after you update recipients.
SWIFT_CLASS("_TtC11DocuSignAPI28DSAPIRecipientsUpdateSummary")
@interface DSAPIRecipientsUpdateSummary : NSObject
/// An array of `recipientUpdateResults` objects that contain details about the recipients.
@property (nonatomic, copy) NSArray<DSAPIRecipientUpdateResponse *> * _Nullable recipientUpdateResults;
- (nonnull instancetype)initWithRecipientUpdateResults:(NSArray<DSAPIRecipientUpdateResponse *> * _Nullable)recipientUpdateResults OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A complex element that specifies reminder settings for the envelope.
SWIFT_CLASS("_TtC11DocuSignAPI14DSAPIReminders")
@interface DSAPIReminders : NSObject
/// An integer specifying the number of days after the recipient receives the envelope that reminder emails are sent to the recipient. The default value is 0.
@property (nonatomic, copy) NSString * _Nullable reminderDelay;
/// When <em>true,</em> reminders are enabled. The default value is <em>false.</em>
@property (nonatomic) BOOL reminderEnabled;
/// An integer specifying the interval in days between reminder emails. The default value is 0.
@property (nonatomic, copy) NSString * _Nullable reminderFrequency;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithReminderDelay:(NSString * _Nullable)reminderDelay reminderEnabled:(BOOL)reminderEnabled reminderFrequency:(NSString * _Nullable)reminderFrequency OBJC_DESIGNATED_INITIALIZER;
@end


/// Specifies one or more electronic seals to apply on documents. An electronic seal recipient is a legal entity rather than an actual person. Electronic Seals can be used by organizations and governments to show evidence of origin and integrity of documents. Even though electronic seals can be represented by a tab in a document, they do not require user interaction and apply automatically in the order specified by the sender. The sender is therefore the person authorizing usage of the electronic seal in the flow.  Example:   ```json &quot;recipients&quot;: {       &quot;seals&quot;: [         {           &quot;recipientId&quot;: &quot;1&quot;,           &quot;routingOrder&quot; : 1,           &quot;recipientSignatureProviders&quot;: [             {               &quot;sealName&quot;: &quot;52e9d968-xxxx-xxxx-xxxx-4682bc45c106&quot;             }        ]      }    ]  },     .     .     . ``` For more information about Electronic Seals, see <a href="https://support.docusign.com/en/guides/ndse-user-guide-apply-electronic-seals">Apply Electronic Seals to Your Documents</a>.
SWIFT_CLASS("_TtC11DocuSignAPI13DSAPISealSign")
@interface DSAPISealSign : NSObject
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// Not applicable.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// Not applicable.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// Not applicable.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// Not applicable.
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// Not applicable.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable name;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
/// Not applicable.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// (Required) The `recipientId` used when the envelope or template was created.   This is a local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// Not applicable.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// (Optional, default: 1)  Specifies the routing order of the electronic seal in the envelope. The routing order assigned to your electronic seal cannot be shared with another recipient. It is recommended that you set a routing order for your electronic seals.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// Not applicable.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// Not applicable.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable suppressEmails;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Metadata that indicates whether a property is editable and describes setting-specific options.
SWIFT_CLASS("_TtC11DocuSignAPI21DSAPISettingsMetadata")
@interface DSAPISettingsMetadata : NSObject
/// When <em>true,</em> indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).
@property (nonatomic) BOOL is21CFRPart11;
/// An array of option strings supported by this setting.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable options;
/// Indicates whether the property is editable. Valid values are:  - `editable` - `read_only`
@property (nonatomic, copy) NSString * _Nullable rights;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable uiHint;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable uiOrder;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable uiType;
- (nonnull instancetype)initWithIs21CFRPart11:(BOOL)is21CFRPart11 options:(NSArray<NSString *> * _Nullable)options rights:(NSString * _Nullable)rights uiHint:(NSString * _Nullable)uiHint uiOrder:(NSString * _Nullable)uiOrder uiType:(NSString * _Nullable)uiType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIStamp;

/// A tab that allows the recipient to sign a document. May be optional.
SWIFT_CLASS("_TtC11DocuSignAPI13DSAPISignHere")
@interface DSAPISignHere : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable handDrawRequired;
/// Not applicable to Sign Here tab.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em>  the tab contains a visual representation for an electronic seal in a document.
@property (nonatomic) BOOL isSealSignTab;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// When <em>true,</em> the recipient does not need to complete this tab to complete the signing process.
@property (nonatomic) BOOL optional;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable optionalMetadata;
/// Specifies the page number on which the tab is located. Must be 1 for supplemental documents.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Scales the size of the tab. This field accepts values from 0.5 to 2.0, where  0.5 is half the normal size, 1.0 is normal size, and 2.0 is twice the normal size.
@property (nonatomic, copy) NSString * _Nullable scaleValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable scaleValueMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, strong) DSAPIStamp * _Nullable stamp;
/// The type of stamp. Valid values are:  - `signature`: A signature image. This is the default value. - `stamp`: A stamp image. - null
@property (nonatomic, copy) NSString * _Nullable stampType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable stampTypeMetadata;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// Not applicable to Sign Here tab.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+1, -7)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+1, -7)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
@property (nonatomic, copy) NSString * _Nullable imageDataBase64;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A complex type containing information about a signer recipient. A signer is a recipient who must take action on a document, such as sign, initial, date, or add data to form fields on a document.
SWIFT_CLASS("_TtC11DocuSignAPI11DSAPISigner")
@interface DSAPISigner : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// Optional element. When <em>true,</em> the agent recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditEmail;
/// Optional. When <em>true,</em> the agent recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditName;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSURL * _Nullable bulkRecipientsUri;
/// When <em>true,</em> specifies that the signer can perform the signing ceremony offline.
@property (nonatomic) BOOL canSignOffline;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// The reason why the item was created.
@property (nonatomic, copy) NSString * _Nullable creationReason;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// When <em>true,</em> this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.
@property (nonatomic) BOOL defaultRecipient;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address. The system sends notifications about the documents to sign to this address. Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name. Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// When <em>true,</em> this signer is a bulk recipient and the recipient information is contained in a bulk recipient file.   Note that when this is true the email and name for the recipient becomes bulk@recipient.com and &quot;Bulk Recipient&quot;. These fields can not be changed for the bulk recipient.
@property (nonatomic) BOOL isBulkRecipient;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable isBulkRecipientMetadata;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The `recipientId` of the notary for this signer.
@property (nonatomic, copy) NSString * _Nullable notaryId;
@property (nonatomic, copy) NSString * _Nullable notarySignerEmailSent;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
@property (nonatomic, strong) DSAPIOfflineAttributes * _Nullable offlineAttributes;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// When <em>true,</em> specifies that the recipient creates the tabs.
@property (nonatomic) BOOL recipientSuppliesTabs;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Sets the type of signer certificate required for signing. If left blank, no certificate is required. Only one type of certificate can be set for a signer. Valid values:  * `docusign_express`: Requires a DocuSign Express certificate. * `safe`: Requires a SAFE-BioPharma certificate. * `open_trust`: Requires an OpenTrust certificate.   <em>Important:</em> There are certain rules and restrictions that must be followed when requiring OpenTrust digital signatures. See [ML:OpenTrust Rules and Restrictions] for more information.
@property (nonatomic, copy) NSString * _Nullable requireSignerCertificate;
/// When <em>true,</em> the signer must print, sign, and upload or fax the signed documents to DocuSign.
@property (nonatomic) BOOL requireSignOnPaper;
/// When <em>true,</em> the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.
@property (nonatomic) BOOL requireUploadSignature;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
@property (nonatomic, strong) DSAPIRecipientSignatureInformation * _Nullable signatureInfo;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// When <em>true</em> and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).
@property (nonatomic) BOOL signInEachLocation;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signInEachLocationMetadata;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// Specifies the status of the recipient at the time of the request. This property is read-only. Possible values are:  - `created`: The recipient is in a draft state. This is only associated with draft envelopes (envelopes with a created status). - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing web site. This is not an email delivery of the documents in an envelope. - `signed`; The recipient has completed (performed all required interactions, such as signing or entering data) all required tags in an envelope. This is a temporary state during processing, after which the recipient is automatically moved to completed. - `declined`: The recipient declined to sign the documents in the envelope. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `faxpending`: The recipient has finished signing and the system is waiting a fax attachment by the recipient before completing their signing step. - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used by the DocuSign webapp (also known as the DocuSign console) to inform senders about the auto-responded email.
@property (nonatomic, copy) NSString * _Nullable status;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The total number of tabs in the documents. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to attach supporting documents to an envelope.
SWIFT_CLASS("_TtC11DocuSignAPI21DSAPISignerAttachment")
@interface DSAPISignerAttachment : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable handDrawRequired;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// When <em>true,</em> the recipient does not need to complete this tab to complete the signing process.
@property (nonatomic) BOOL optional;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable optionalMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Sets the size of the tab. This field accepts values from `0.5` to `1.0`, where `1.0` represents full size and `0.5` is 50% of full size.
@property (nonatomic, copy) NSString * _Nullable scaleValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable scaleValueMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+0, -24)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+0, -24)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI25DSAPISocialAuthentication")
@interface DSAPISocialAuthentication : NSObject
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable authentication;
- (nonnull instancetype)initWithAuthentication:(NSString * _Nullable)authentication OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A one-line field that allows the recipient to enter a Social Security Number. The SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.
SWIFT_CLASS("_TtC11DocuSignAPI8DSAPISsn")
@interface DSAPISsn : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic, copy) NSString * _Nullable requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI10DSAPIStamp")
@interface DSAPIStamp : NSObject
/// The UTC date and time when the user adopted the signature.
@property (nonatomic, copy) NSDate * _Nullable adoptedDateTime;
/// The UTC DateTime when the item was created.
@property (nonatomic, copy) NSDate * _Nullable createdDateTime;
@property (nonatomic, copy) NSString * _Nullable customField;
@property (nonatomic, strong) DSAPIDateStampProperties * _Nullable dateStampProperties;
/// When <em>true,</em> users may not resize the stamp.
@property (nonatomic) BOOL disallowUserResizeStamp;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Optionally specify an external identifier for the user's signature.
@property (nonatomic, copy) NSString * _Nullable externalID;
@property (nonatomic, copy) NSString * _Nullable imageBase64;
/// Specificies the type of image. Valid values are:  - `signature_image` - `initials_image`
@property (nonatomic, copy) NSString * _Nullable imageType;
/// The date and time that the item was last modified.
@property (nonatomic, copy) NSDate * _Nullable lastModifiedDateTime;
/// The phonetic spelling of the `signatureName`.
@property (nonatomic, copy) NSString * _Nullable phoneticName;
/// Specifies the user's signature name.
@property (nonatomic, copy) NSString * _Nullable signatureName;
/// The format of a stamp. Valid values are:  - `NameHanko`: The stamp represents only the signer's name. - `NameDateHanko`: The stamp represents the signer's name and the date.
@property (nonatomic, copy) NSString * _Nullable stampFormat;
/// The URI for retrieving the image of the user's stamp.
@property (nonatomic, copy) NSURL * _Nullable stampImageUri;
/// The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.
@property (nonatomic, copy) NSString * _Nullable stampSizeMM;
/// Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.
@property (nonatomic, copy) NSString * _Nullable status;
- (nonnull instancetype)initWithAdoptedDateTime:(NSDate * _Nullable)adoptedDateTime createdDateTime:(NSDate * _Nullable)createdDateTime customField:(NSString * _Nullable)customField dateStampProperties:(DSAPIDateStampProperties * _Nullable)dateStampProperties disallowUserResizeStamp:(BOOL)disallowUserResizeStamp errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails externalID:(NSString * _Nullable)externalID imageBase64:(NSString * _Nullable)imageBase64 imageType:(NSString * _Nullable)imageType lastModifiedDateTime:(NSDate * _Nullable)lastModifiedDateTime phoneticName:(NSString * _Nullable)phoneticName signatureName:(NSString * _Nullable)signatureName stampFormat:(NSString * _Nullable)stampFormat stampImageUri:(NSURL * _Nullable)stampImageUri stampSizeMM:(NSString * _Nullable)stampSizeMM status:(NSString * _Nullable)status OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI13DSAPITabGroup")
@interface DSAPITabGroup : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// A unique identifier for a tab group. To assign a tab to the `tabGroup`, you assign the `TabGroupLabel` to the `tab.TabGroupLabels` array.
@property (nonatomic, copy) NSString * _Nullable groupLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable groupLabelMetadata;
/// Specifies how `maximumAllowed` and `minimumRequired` are interpreted when selecting tabs in a `tabGroup`.  Possible values are:  - `SelectAtLeast` - `SelectAtMost` - `SelectExactly` - `SelectARange`
@property (nonatomic, copy) NSString * _Nullable groupRule;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable groupRuleMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// The maximum number of tabs within the `tabGroup` that should be checked, populated, or signed. This property is used for validation.
@property (nonatomic, copy) NSString * _Nullable maximumAllowed;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maximumAllowedMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The minimum number of of tabs within the `tabGroup` that should be checked, populated, or signed. This property is used for validation.
@property (nonatomic, copy) NSString * _Nullable minimumRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable minimumRequiredMetadata;
/// Specifies the page number on which the tab is located.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// The scope of the tab group. Possible values are:  - `document` - `envelope` (default)
@property (nonatomic, copy) NSString * _Nullable tabScope;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabScopeMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIText;
@class DSAPITitle;
@class DSAPIZip;

/// Tabs indicate to recipients where they should sign, initial, or enter data on a document. They are represented graphically as symbols on documents at the time of signing. Tabs can also display data to the recipients.
SWIFT_CLASS("_TtC11DocuSignAPI9DSAPITabs")
@interface DSAPITabs : NSObject
/// A list of [Approve tabs][approve].  An Approve tab enables the recipient to approve documents without placing a signature or initials on the document. If the recipient clicks the tab during the signing process, the recipient is considered to have signed the document. No information is shown on the document of the approval, but it is recorded as a signature in the envelope history. The value of an approve tab can't be set.  [approve]:        /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIApprove *> * _Nullable approveTabs;
/// A list of [Checkbox tabs][checkbox].   A Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.   [checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPICheckbox *> * _Nullable checkboxTabs;
/// A list of [Company tabs][company].  A Company tab displays a field for the name of the recipient's company. This value can't be set.  [company]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_company
@property (nonatomic, copy) NSArray<DSAPICompany *> * _Nullable companyTabs;
/// A list of [Date Signed tabs][dateSigned].   A Date Signed tab displays the date that the recipient signed the document. This value can't be set.  [dateSigned]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIDateSigned *> * _Nullable dateSignedTabs;
/// A list of [Date tabs][date].  A Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.  <em>Note:</em> If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.   [date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIDate *> * _Nullable dateTabs;
/// A list of [Decline tabs][decline].  A Decline tab enables the recipient to decline the envelope. If the recipient clicks the tab during the signing process, the envelope is voided. The value of this tab can't be set.   [decline]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIDecline *> * _Nullable declineTabs;
/// A list of [Email Address tabs][emailAddress].  An Email Address tab displays the recipient's email as entered in the recipient information. This value can't be set.   [emailAddress]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIEmailAddress *> * _Nullable emailAddressTabs;
/// A list of [Email tabs][email].  An Email tab enables the recipient to enter an email address. This is a one-line field that checks that a valid email address is entered. It uses the same parameters as a Text tab, with the validation message and pattern set for email information. This value can be set.  When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.  [email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIEmail *> * _Nullable emailTabs;
/// A list of [Envelope ID tabs][envelopeId].  An Envelope ID tab  displays the envelope ID. Recipients cannot enter or change the information in this tab. This value can't be set.   [envelopeId]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#response201_envelopeid
@property (nonatomic, copy) NSArray<DSAPIEnvelopeId *> * _Nullable envelopeIdTabs;
/// A list of [First Name tabs][firstName].  A First Name tab displays the recipient's first name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.   [firstName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_firstname
@property (nonatomic, copy) NSArray<DSAPIFirstName *> * _Nullable firstNameTabs;
/// A list of [Formula tabs][formulaTab].  The value of a Formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the Formula tab calculates and displays the result. This value can be set.  The `formula` property of the tab contains the references to the underlying tabs. To learn more about formulas, see [Calculated Fields][calculatedfields].  If a Formula tab contains a `paymentDetails` property, the tab is considered a payment item. To learn more about payments, see [Requesting Payments Along with Signatures][paymentguide].  [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures [formulaTab]:      /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIFormulaTab *> * _Nullable formulaTabs;
/// A list of [Full Name tabs][fullName].  A Full Name tab displays the recipient's full name. This value can't be set.   [fullName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIFullName *> * _Nullable fullNameTabs;
/// A list of [Initial Here tabs][initialHere].  This type of tab enables the recipient to initial the document. May be optional. This value can't be set.  [initialHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIInitialHere *> * _Nullable initialHereTabs;
/// A list of [Last Name tabs][lastName].  A Last Name tab displays the recipient's last name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.   [lastName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPILastName *> * _Nullable lastNameTabs;
/// An array of List tabs.  A List tab enables the recipient to choose from a list of options. You specify the options in the `listItems` property. This value can't be set.  Find descriptions of all tab types in the [tabs Resource][ert].  [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIList *> * _Nullable listTabs;
/// A list of [Note tabs][note].  A Note tab displays additional information to the recipient in the form of a note. This value can be set.  [note]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPINote *> * _Nullable noteTabs;
/// A list of [Number tabs][number].  A Number tab enables the recipient to enter numbers and decimal points (.). This value can be set.    [number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPINumber *> * _Nullable numberTabs;
/// A list of [Radio Group tabs][radioGroup].  A Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio buttons associated with the group. Only one radio button can be selected in a group. This value can be set.   [radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIRadioGroup *> * _Nullable radioGroupTabs;
/// A list of [Signer Attachment tabs][signerAttachment].  This type of tab enables the recipient to attach supporting documents to an envelope. This value can't be set.   [signerAttachment]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPISignerAttachment *> * _Nullable signerAttachmentTabs;
/// A list of [Sign Here tabs][signHere].  This type of tab enables the recipient to sign a document. May be optional. This value can't be set.  [signHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPISignHere *> * _Nullable signHereTabs;
/// A list of [SSN tabs][ssn].  An SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.   [ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPISsn *> * _Nullable ssnTabs;
/// An array of `tabGroup` items.  To associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.
@property (nonatomic, copy) NSArray<DSAPITabGroup *> * _Nullable tabGroups;
/// A list of Text tabs.  A text tab enables the recipient to enter free text. This value can be set.  Find descriptions of all tab types in the [tabs Resource][ert].  [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIText *> * _Nullable textTabs;
/// A list of [Title tabs][title].  A Title tab displays the recipient's title.  This value can't be set.   [title]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPITitle *> * _Nullable titleTabs;
/// A list of [Zip tabs][zip].  A Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.   [zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIZip *> * _Nullable zipTabs;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The telemetry event model.
SWIFT_CLASS("_TtC11DocuSignAPI19DSAPITelemetryEvent")
@interface DSAPITelemetryEvent : NSObject
/// The app version.
@property (nonatomic, copy) NSString * _Nullable appVersion;
/// The identity (TBD).
@property (nonatomic, copy) NSString * _Nullable identity;
/// The traceToken.
@property (nonatomic, copy) NSString * _Nullable traceToken;
/// The category of the event.
@property (nonatomic, copy) NSString * _Nullable eventCategory;
/// The name of the event.
@property (nonatomic, copy) NSString * _Nullable eventName;
/// The type of the event.
@property (nonatomic, copy) NSString * _Nullable eventType;
/// The array containing application names.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable applications;
/// The client specific details.
@property (nonatomic, strong) DSAPIClientContext * _Nullable clientContext;
/// The data.
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable data;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAppVersion:(NSString * _Nullable)appVersion identity:(NSString * _Nullable)identity traceToken:(NSString * _Nullable)traceToken eventCategory:(NSString * _Nullable)eventCategory eventName:(NSString * _Nullable)eventName eventType:(NSString * _Nullable)eventType applications:(NSArray<NSString *> * _Nullable)applications clientContext:(DSAPIClientContext * _Nullable)clientContext data:(NSDictionary<NSString *, NSString *> * _Nullable)data OBJC_DESIGNATED_INITIALIZER;
@end


/// The telemetry events model.
SWIFT_CLASS("_TtC11DocuSignAPI20DSAPITelemetryEvents")
@interface DSAPITelemetryEvents : NSObject
/// The telemetry events.
@property (nonatomic, copy) NSArray<DSAPITelemetryEvent *> * _Nullable events;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithEvents:(NSArray<DSAPITelemetryEvent *> * _Nullable)events OBJC_DESIGNATED_INITIALIZER;
@end


/// This response object is returned after you post a telemetry event.
SWIFT_CLASS("_TtC11DocuSignAPI28DSAPITelemetryEventsResponse")
@interface DSAPITelemetryEventsResponse : NSObject
/// An array containing failed telemetry events.
@property (nonatomic, copy) NSArray<DSAPIFailedTelemetryEvent *> * _Nullable failedEvents;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFailedEvents:(NSArray<DSAPIFailedTelemetryEvent *> * _Nullable)failedEvents OBJC_DESIGNATED_INITIALIZER;
@end


/// Information about a specific role.
SWIFT_CLASS("_TtC11DocuSignAPI17DSAPITemplateRole")
@interface DSAPITemplateRole : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// When <em>true,</em> this recipient is the default recipient and any tabs generated by the `transformPdfFields` option are mapped to this recipient.
@property (nonatomic) BOOL defaultRecipient;
/// The email address of the person associated with a role name. It is the email address of the person specified in the `name` property.  For an in-person signer, this is the email address of the host.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
/// The full legal name of the in-person signer.  Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable inPersonSignerName;
/// Specifies the recipient's name.  For an in-person signer, this is the name of the host.
@property (nonatomic, copy) NSString * _Nullable name;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to enter any type of text.
SWIFT_CLASS("_TtC11DocuSignAPI9DSAPIText")
@interface DSAPIText : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// Contains the formula for calculating the value of this tab.  Use a tab's `tabLabel`, enclosed in brackets, to refer to it.  For example, you want to present the total cost of two items, tax included.  The cost of each item is stored in number tabs labeled Item1 and Item2. The tax rate is in a number tab labeled TaxRate.  The formula string for this property would be: `([Item1] + [Item2]) * (1 + [TaxRate])`  See [Calculated Fields][calculatedfields] in the DocuSign Support Center to learn more about formulas.  Maximum Length: 2000 characters  [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
@property (nonatomic, copy) NSString * _Nullable formula;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formulaMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL isPaymentAmount;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable isPaymentAmountMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// This object represents a free text custom field where envelope creators and senders can enter custom data.
SWIFT_CLASS("_TtC11DocuSignAPI20DSAPITextCustomField")
@interface DSAPITextCustomField : NSObject
/// If you are using merge fields, this property specifies the type of the merge field. The only supported value is `salesforce`.
@property (nonatomic, copy) NSString * _Nullable configurationType;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The ID of the custom field.
@property (nonatomic, copy) NSString * _Nullable fieldId;
/// The name of the custom field.
@property (nonatomic, copy) NSString * _Nullable name;
/// When <em>true,</em> senders are required to enter or select information for the field before they can send the envelope.
@property (nonatomic) BOOL required;
/// When <em>true,</em> the field displays in the <em>Envelope Custom Fields</em> section when a user creates or sends an envelope.
@property (nonatomic) BOOL show;
/// The value of the custom field. The user who creates or sends the envelope provides this value. Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConfigurationType:(NSString * _Nullable)configurationType errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails fieldId:(NSString * _Nullable)fieldId name:(NSString * _Nullable)name required:(BOOL)required show:(BOOL)show value:(NSString * _Nullable)value OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that displays the recipient's title.
SWIFT_CLASS("_TtC11DocuSignAPI10DSAPITitle")
@interface DSAPITitle : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Describes which account management capabilities a user has.
SWIFT_CLASS("_TtC11DocuSignAPI45DSAPIUserAccountManagementGranularInformation")
@interface DSAPIUserAccountManagementGranularInformation : NSObject
/// <em>True</em> if the user can manage account security settings.
@property (nonatomic, copy) NSString * _Nullable canManageAccountSecuritySettings;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageAccountSecuritySettingsMetadata;
/// <em>True</em> if the user can manage account settings.
@property (nonatomic, copy) NSString * _Nullable canManageAccountSettings;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageAccountSettingsMetadata;
/// <em>True</em> if the user can manage administrators.
@property (nonatomic, copy) NSString * _Nullable canManageAdmins;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageAdminsMetadata;
@property (nonatomic, copy) NSString * _Nullable canManageConnect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageConnectMetadata;
@property (nonatomic, copy) NSString * _Nullable canManageDocumentRetention;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageDocumentRetentionMetadata;
@property (nonatomic, copy) NSString * _Nullable canManageEnvelopeTransfer;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageEnvelopeTransferMetadata;
@property (nonatomic, copy) NSString * _Nullable canManageGroupsButNotUsers;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageGroupsButNotUsersMetadata;
/// <em>True</em> if the user can manage reporting.
@property (nonatomic, copy) NSString * _Nullable canManageReporting;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageReportingMetadata;
/// <em>True</em> if the user can manage sharing.
@property (nonatomic, copy) NSString * _Nullable canManageSharing;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageSharingMetadata;
/// <em>True</em> if the user can manage signing groups.
@property (nonatomic, copy) NSString * _Nullable canManageSigningGroups;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageSigningGroupsMetadata;
/// <em>True</em> if the user can manage users.
@property (nonatomic, copy) NSString * _Nullable canManageUsers;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageUsersMetadata;
@property (nonatomic, copy) NSString * _Nullable canViewUsers;
- (nonnull instancetype)initWithCanManageAccountSecuritySettings:(NSString * _Nullable)canManageAccountSecuritySettings canManageAccountSecuritySettingsMetadata:(DSAPISettingsMetadata * _Nullable)canManageAccountSecuritySettingsMetadata canManageAccountSettings:(NSString * _Nullable)canManageAccountSettings canManageAccountSettingsMetadata:(DSAPISettingsMetadata * _Nullable)canManageAccountSettingsMetadata canManageAdmins:(NSString * _Nullable)canManageAdmins canManageAdminsMetadata:(DSAPISettingsMetadata * _Nullable)canManageAdminsMetadata canManageConnect:(NSString * _Nullable)canManageConnect canManageConnectMetadata:(DSAPISettingsMetadata * _Nullable)canManageConnectMetadata canManageDocumentRetention:(NSString * _Nullable)canManageDocumentRetention canManageDocumentRetentionMetadata:(DSAPISettingsMetadata * _Nullable)canManageDocumentRetentionMetadata canManageEnvelopeTransfer:(NSString * _Nullable)canManageEnvelopeTransfer canManageEnvelopeTransferMetadata:(DSAPISettingsMetadata * _Nullable)canManageEnvelopeTransferMetadata canManageGroupsButNotUsers:(NSString * _Nullable)canManageGroupsButNotUsers canManageGroupsButNotUsersMetadata:(DSAPISettingsMetadata * _Nullable)canManageGroupsButNotUsersMetadata canManageReporting:(NSString * _Nullable)canManageReporting canManageReportingMetadata:(DSAPISettingsMetadata * _Nullable)canManageReportingMetadata canManageSharing:(NSString * _Nullable)canManageSharing canManageSharingMetadata:(DSAPISettingsMetadata * _Nullable)canManageSharingMetadata canManageSigningGroups:(NSString * _Nullable)canManageSigningGroups canManageSigningGroupsMetadata:(DSAPISettingsMetadata * _Nullable)canManageSigningGroupsMetadata canManageUsers:(NSString * _Nullable)canManageUsers canManageUsersMetadata:(DSAPISettingsMetadata * _Nullable)canManageUsersMetadata canViewUsers:(NSString * _Nullable)canViewUsers OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI13DSAPIUserInfo")
@interface DSAPIUserInfo : NSObject
/// The account ID associated with the envelope.
@property (nonatomic, copy) NSString * _Nullable accountId;
/// The name on the account.
@property (nonatomic, copy) NSString * _Nullable accountName;
/// Access code provided to the user to activate the account.
@property (nonatomic, copy) NSString * _Nullable activationAccessCode;
/// The user's email address.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// When <em>true,</em> indicates that the user is logged in. This is a read-only property.
@property (nonatomic) BOOL loginStatus;
/// The user's membership ID.
@property (nonatomic, copy) NSString * _Nullable membershipId;
/// This field is no longer supported for most accounts. To create an eSignature user without sending an activation email, use the Admin API by following <a href="/docs/admin-api/how-to/create-active-user/">these steps</a>.
@property (nonatomic) BOOL sendActivationEmail;
/// A URI containing the user ID.
@property (nonatomic, copy) NSURL * _Nullable uri;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
/// The name of the user.
@property (nonatomic, copy) NSString * _Nullable userName;
/// Status of the user's account. One of:  - `ActivationRequired` - `ActivationSent` - `Active` - `Closed` - `Disabled`
@property (nonatomic, copy) NSString * _Nullable userStatus;
/// The type of user, for example `CompanyUser`.
@property (nonatomic, copy) NSString * _Nullable userType;
- (nonnull instancetype)initWithAccountId:(NSString * _Nullable)accountId accountName:(NSString * _Nullable)accountName activationAccessCode:(NSString * _Nullable)activationAccessCode email:(NSString * _Nullable)email errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails loginStatus:(BOOL)loginStatus membershipId:(NSString * _Nullable)membershipId sendActivationEmail:(BOOL)sendActivationEmail uri:(NSURL * _Nullable)uri userId:(NSString * _Nullable)userId userName:(NSString * _Nullable)userName userStatus:(NSString * _Nullable)userStatus userType:(NSString * _Nullable)userType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Properties that configure the settings for a user. Some elements of this object have a `metadata` property, which includes the following: - `rights`: The calling users permissions to edit this setting (can be `editable` or `read_only`) - `uiHint`: Internally used to build UIs (can be `available` or `hidden`) - `options`: The values supported for this setting (not all settings have this element)
SWIFT_CLASS("_TtC11DocuSignAPI28DSAPIUserSettingsInformation")
@interface DSAPIUserSettingsInformation : NSObject
@property (nonatomic, strong) DSAPIUserAccountManagementGranularInformation * _Nullable accountManagementGranular;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable adminOnly;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable adminOnlyMetadata;
/// When <em>true,</em> the API returns suggested tabs for documents for this user.
@property (nonatomic) BOOL allowAutoTagging;
/// When <em>true,</em> this user can participate in envelope transfers on the account.
@property (nonatomic) BOOL allowEnvelopeTransferTo;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEnvelopeTransferToMetadata;
/// When <em>true,</em> this user can create [electronic seal recipients][eseal].  [eseal]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/#seal-recipient
@property (nonatomic) BOOL allowEsealRecipients;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEsealRecipientsMetadata;
/// When <em>true</em> and this user is an administrator, they can view all of the envelopes generated from PowerForms. The default value is <em>false.</em>
@property (nonatomic) BOOL allowPowerFormsAdminToAccessAllPowerFormEnvelope;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata;
/// When <em>true,</em> this user can set the language used in the standard email format for a recipient when creating an envelope.
@property (nonatomic) BOOL allowRecipientLanguageSelection;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowRecipientLanguageSelectionMetadata;
/// When <em>true,</em> this user can send envelopes &quot;on behalf of&quot; other users through the API.
@property (nonatomic) BOOL allowSendOnBehalfOf;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSendOnBehalfOfMetadata;
/// When <em>true,</em> this user can include supplemental documents.
@property (nonatomic) BOOL allowSupplementalDocuments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSupplementalDocumentsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTagVersionedPlacementEnabled;
/// When <em>true,</em> indicates that this user can send envelope-specific API requests on the account.
@property (nonatomic) BOOL apiAccountWideAccess;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable apiAccountWideAccessMetadata;
/// When <em>true,</em> this user can export authoritative copy for the account.
@property (nonatomic) BOOL apiCanExportAC;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable apiCanExportACMetadata;
/// When <em>true,</em> this user can use the bulk send feature for the account.
@property (nonatomic) BOOL bulkSend;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable bulkSendMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable canChargeAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canChargeAccountMetadata;
/// When true, this user can edit the shared address book for the account.
@property (nonatomic, copy) NSString * _Nullable canEditSharedAddressbook;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canEditSharedAddressbookMetadata;
/// When <em>true,</em> this user can lock envelopes.
@property (nonatomic) BOOL canLockEnvelopes;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canLockEnvelopesMetadata;
/// When <em>true,</em> this user is an administrator for the account.
@property (nonatomic) BOOL canManageAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageAccountMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable canManageDistributor;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageDistributorMetadata;
/// When <em>true,</em> this user can manage templates for the account.
@property (nonatomic) BOOL canManageTemplates;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageTemplatesMetadata;
/// When <em>true,</em> this user can send API requests on the account.
@property (nonatomic) BOOL canSendAPIRequests;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canSendAPIRequestsMetadata;
/// When <em>true,</em> this user can send envelopes on the account.
@property (nonatomic) BOOL canSendEnvelope;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canSendEnvelopeMetadata;
@property (nonatomic, copy) NSString * _Nullable canSendEnvelopesViaSMS;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canSendEnvelopesViaSMSMetadata;
/// When <em>true,</em> this user can sign envelopes.
@property (nonatomic) BOOL canSignEnvelope;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canSignEnvelopeMetadata;
/// When <em>true,</em> this user can use a scratchpad to edit information.
@property (nonatomic) BOOL canUseScratchpad;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canUseScratchpadMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable canUseSmartContracts;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canUseSmartContractsMetadata;
/// When <em>true,</em> this user is prohibited from uploading documents during sending.
@property (nonatomic) BOOL disableDocumentUpload;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableDocumentUploadMetadata;
/// When <em>true,</em> this user can access the <em>Other Actions</em> menu.
@property (nonatomic) BOOL disableOtherActions;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableOtherActionsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable enableDSPro;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableDSProMetadata;
/// When <em>true,</em> the account can define the routing order of recipients for envelopes sent by using the eSignature API.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enableSequentialSigningAPI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSequentialSigningAPIMetadata;
/// When <em>true,</em> the account can define the routing order of recipients for envelopes sent by using the DocuSign application.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enableSequentialSigningUI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSequentialSigningUIMetadata;
/// When <em>true,</em> this user can use the signing attachments feature.
@property (nonatomic) BOOL enableSignerAttachments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSignerAttachmentsMetadata;
/// When <em>true,</em> a user can override the default default account setting for the Sign on Paper option, which specifies whether signers can sign documents on paper as an option to signing electronically.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSignOnPaperOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSignOnPaperOverrideMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable enableTransactionPoint;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableTransactionPointMetadata;
/// When <em>true,</em> Vaulting is enabled for the account.
@property (nonatomic) BOOL enableVaulting;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableVaultingMetadata;
/// When <em>false,</em> this user can apply tabs to documents during the sending experience.
@property (nonatomic, copy) NSString * _Nullable expressSendOnly;
/// The user's locale code. Valid values are: - `zh_CN` - `zh_TW` - `nl` - `en` - `fr` - `de` - `it` - `ja` - `ko` - `pt` - `pt_BR` - `ru` - `es`
@property (nonatomic, copy) NSString * _Nullable locale;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable localeMetadata;
/// When <em>true,</em> this user can create and manage <a href="/docs/click-api/">Clickwraps</a>.
@property (nonatomic) BOOL manageClickwrapsMode;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable manageClickwrapsModeMetadata;
/// The user ID (GUID) of the user who last modified this user record. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable modifiedBy;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable modifiedByMetadata;
/// The date on which this user record was last modified.
@property (nonatomic, copy) NSDate * _Nullable modifiedDate;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable modifiedDateMetadata;
/// Note referencing the page that modified this user record.
@property (nonatomic, copy) NSString * _Nullable modifiedPage;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable modifiedPageMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable newSendUI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable newSendUIMetadata;
/// Indicates the Power Form mode setting for the user: - `none` - `admin` - `user`
@property (nonatomic, copy) NSString * _Nullable powerFormMode;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable powerFormModeMetadata;
/// When <em>true,</em> this user receives notifications when envelopes are viewed.
@property (nonatomic) BOOL recipientViewedNotification;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable recipientViewedNotificationMetadata;
/// Sets how self-signed documents are presented to the email recipients. Valid values are:  - `include_pdf`: A PDF of the completed document is attached to the email. - `include_link`: A secure link to the self-signed documents is included    in the email.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable selfSignedRecipientEmailDocument;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable selfSignedRecipientEmailDocumentMetadata;
/// When <em>true,</em> this user gets supplemental documents when downloading documents.
@property (nonatomic) BOOL supplementalDocumentIncludeInDownload;
/// When <em>true,</em> this user must accept supplemental documents.
@property (nonatomic) BOOL supplementalDocumentsMustAccept;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable supplementalDocumentsMustAcceptMetadata;
/// When <em>true,</em> this user must both view and accept supplemental documents.
@property (nonatomic) BOOL supplementalDocumentsMustRead;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable supplementalDocumentsMustReadMetadata;
/// When <em>true,</em> this user must view supplemental documents.
@property (nonatomic) BOOL supplementalDocumentsMustView;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable supplementalDocumentsMustViewMetadata;
/// When <em>true,</em> a new template is created each time the user sends an envelope.
@property (nonatomic) BOOL templateActiveCreation;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable templateActiveCreationMetadata;
/// When <em>true,</em> the system notifies this user before applying a matching template.
@property (nonatomic) BOOL templateApplyNotify;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable templateApplyNotifyMetadata;
/// When <em>true,</em> the system automatically applies a matching template to a document if only one template matches. If there are multiple matches, it displays a list of matches to select from.
@property (nonatomic) BOOL templateAutoMatching;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable templateAutoMatchingMetadata;
/// Percentage used when matching templates.
@property (nonatomic, copy) NSString * _Nullable templateMatchingSensitivity;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable templateMatchingSensitivityMetadata;
/// When <em>true,</em> users see template matching functionality.
@property (nonatomic) BOOL templatePageLevelMatching;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable templatePageLevelMatchingMetadata;
/// When true, daylight savings time is in effect for this user's time zone.
@property (nonatomic, copy) NSString * _Nullable timezoneDST;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneDSTMetadata;
/// The custom DateTime format setting for this user.
@property (nonatomic, copy) NSString * _Nullable timezoneMask;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneMaskMetadata;
/// The timezone offset for the user. Valid values: - `tz_01_afghanistan` - `tz_02_alaskan` - `tz_03_arab` - `tz_04_arabian` - `tz_05_arabic` - `tz_06_argentina` - `tz_07_atlantic` - `tz_08_aus_central` - `tz_09_aus_eastern` - `tz_10_azerbaijan` - `tz_11_azores` - `tz_12_bangladesh` - `tz_13_canada_central` - `tz_14_cape_verde` - `tz_15_caucasus` - `tz_16_central_australia` - `tz_17_central_america` - `tz_18_central_asia` - `tz_19_central_brazilian` - `tz_20_central_europe` - `tz_21_central_european` - `tz_22_central_pacific` - `tz_23_central` - `tz_24_central_mexico` - `tz_25_china` - `tz_26_dateline` - `tz_27_east_africa` - `tz_28_east_australia` - `tz_29_east_europe` - `tz_30_east_south_america` - `tz_31_eastern` - `tz_32_egypt` - `tz_33_ekaterinburg` - `tz_34_fiji` - `tz_35_fli` - `tz_36_georgian` - `tz_37_gmt` - `tz_38_greenland` - `tz_39_greenwich` - `tz_40_gtb` - `tz_41_hawaiian` - `tz_42_india` - `tz_43_iran` - `tz_44_israel` - `tz_45_jordan` - `tz_46_kaliningrad` - `tz_47_kamchatka` - `tz_48_korea` - `tz_49_magadan` - `tz_50_mauritius` - `tz_51_mid_atlantic` - `tz_52_middle_east` - `tz_53_montevideo` - `tz_54_morocco` - `tz_55_mountain` - `tz_56_mountain_mexico` - `tz_57_myanmar` - `tz_58_north_central_asia` - `tz_59_namibia` - `tz_60_nepal` - `tz_61_new_zealand` - `tz_62_new_foundland` - `tz_63_north_asia_east` - `tz_64_north_asia` - `tz_65_pacific_sa` - `tz_66_pacific` - `tz_67_pacific_mexico` - `tz_68_pakistan` - `tz_69_paraguay` - `tz_70_romance` - `tz_71_russian` - `tz_72_sa_eastern` - `tz_73_sa_pacific` - `tz_74_sa_western` - `tz_75_samoa` - `tz_76_se_asia` - `tz_77_singapore` - `tz_78_south_africa` - `tz_79_sriLanka` - `tz_80_syria` - `tz_81_taipei` - `tz_82_tasmania` - `tz_83_tokyo` - `tz_84_tonga` - `tz_85_turkey` - `tz_86_ulaanbaatar` - `tz_87_us_eastern` - `tz_88_us_mountain` - `tz_89_venezuela` - `tz_90_vladivostok` - `tz_91_west_australia` - `tz_92_west_central_africa` - `tz_93_west_europe` - `tz_94_west_asia` - `tz_95_west_pacific` - `tz_96_yakutsk`
@property (nonatomic, copy) NSString * _Nullable timezoneOffset;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneOffsetMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable timezoneSendingPref;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneSendingPrefMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable timezoneSigningPref;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneSigningPrefMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable transactionPointSiteNameURL;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable transactionPointSiteNameURLMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable transactionPointUserName;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable transactionPointUserNameMetadata;
/// Indicates the specified Vaulting mode: - `none` - `estored` - `electronic_original`
@property (nonatomic, copy) NSString * _Nullable vaultingMode;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable vaultingModeMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI18DSAPIUserSignature")
@interface DSAPIUserSignature : NSObject
/// The date and time the user adopted their signature.
@property (nonatomic, copy) NSDate * _Nullable adoptedDateTime;
/// The UTC DateTime when the item was created.
@property (nonatomic, copy) NSDate * _Nullable createdDateTime;
@property (nonatomic, copy) NSString * _Nullable customField;
@property (nonatomic, strong) DSAPIDateStampProperties * _Nullable dateStampProperties;
/// When <em>true,</em> users may not resize the stamp.
@property (nonatomic) BOOL disallowUserResizeStamp;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Optionally specify an external identifier for the user's signature.
@property (nonatomic, copy) NSString * _Nullable externalID;
/// A Base64-encoded representation of the signature image.
@property (nonatomic, copy) NSString * _Nullable imageBase64;
/// Specificies the type of image. Valid values are:  - `signature_image` - `initials_image`
@property (nonatomic, copy) NSString * _Nullable imageType;
/// The ID of the user's initials image.
@property (nonatomic, copy) NSString * _Nullable initials150ImageId;
/// The URI for retrieving the image of the user's initials.
@property (nonatomic, copy) NSURL * _Nullable initialsImageUri;
/// Boolean that specifies whether the signature is the default signature for the user.
@property (nonatomic, copy) NSString * _Nullable isDefault;
/// The date and time that the item was last modified.
@property (nonatomic, copy) NSDate * _Nullable lastModifiedDateTime;
/// The National Association of Realtors (NAR) membership ID for a user who is a realtor.
@property (nonatomic, copy) NSString * _Nullable nrdsId;
/// The realtor's last name.
@property (nonatomic, copy) NSString * _Nullable nrdsLastName;
/// The realtor's NAR membership status. The value `active` verifies that the user is a current NAR member. Valid values are:  - `Active` - `Inactive` - `Terminate` - `Provisional` - `Deceased` - `Suspend` - `Unknown`
@property (nonatomic, copy) NSString * _Nullable nrdsStatus;
/// The phonetic spelling of the `signatureName`.
@property (nonatomic, copy) NSString * _Nullable phoneticName;
/// The ID of the user's signature image.
@property (nonatomic, copy) NSString * _Nullable signature150ImageId;
/// The font type for the signature, if the signature is not drawn. The supported font types are:  &quot;7_DocuSign&quot;, &quot;1_DocuSign&quot;, &quot;6_DocuSign&quot;, &quot;8_DocuSign&quot;, &quot;3_DocuSign&quot;, &quot;Mistral&quot;, &quot;4_DocuSign&quot;, &quot;2_DocuSign&quot;, &quot;5_DocuSign&quot;, &quot;Rage Italic&quot;
@property (nonatomic, copy) NSString * _Nullable signatureFont;
/// Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as &quot;&&quot;, &quot;<&quot;, &quot;>&quot;) in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.
@property (nonatomic, copy) NSString * _Nullable signatureId;
/// An endpoint URI that you can use to retrieve the user's signature image.
@property (nonatomic, copy) NSURL * _Nullable signatureImageUri;
/// The initials associated with the signature.
@property (nonatomic, copy) NSString * _Nullable signatureInitials;
/// Specifies the user's signature name.
@property (nonatomic, copy) NSString * _Nullable signatureName;
/// The rights that the user has to the signature. Valid values are:  - `none` - `read` - `admin`
@property (nonatomic, copy) NSString * _Nullable signatureRights;
/// Specifies the type of signature.
@property (nonatomic, copy) NSString * _Nullable signatureType;
/// The format of a stamp. Valid values are:  - `NameHanko`: The stamp represents only the signer's name. - `NameDateHanko`: The stamp represents the signer's name and the date.
@property (nonatomic, copy) NSString * _Nullable stampFormat;
/// The URI for retrieving the image of the user's stamp.
@property (nonatomic, copy) NSURL * _Nullable stampImageUri;
/// The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.
@property (nonatomic, copy) NSString * _Nullable stampSizeMM;
/// The type of stamp. Valid values are:  - `signature`: A signature image. This is the default value. - `stamp`: A stamp image. - null
@property (nonatomic, copy) NSString * _Nullable stampType;
/// Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.
@property (nonatomic, copy) NSString * _Nullable status;
- (nonnull instancetype)initWithAdoptedDateTime:(NSDate * _Nullable)adoptedDateTime createdDateTime:(NSDate * _Nullable)createdDateTime customField:(NSString * _Nullable)customField dateStampProperties:(DSAPIDateStampProperties * _Nullable)dateStampProperties disallowUserResizeStamp:(BOOL)disallowUserResizeStamp errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails externalID:(NSString * _Nullable)externalID imageBase64:(NSString * _Nullable)imageBase64 imageType:(NSString * _Nullable)imageType initials150ImageId:(NSString * _Nullable)initials150ImageId initialsImageUri:(NSURL * _Nullable)initialsImageUri isDefault:(NSString * _Nullable)isDefault lastModifiedDateTime:(NSDate * _Nullable)lastModifiedDateTime nrdsId:(NSString * _Nullable)nrdsId nrdsLastName:(NSString * _Nullable)nrdsLastName nrdsStatus:(NSString * _Nullable)nrdsStatus phoneticName:(NSString * _Nullable)phoneticName signature150ImageId:(NSString * _Nullable)signature150ImageId signatureFont:(NSString * _Nullable)signatureFont signatureId:(NSString * _Nullable)signatureId signatureImageUri:(NSURL * _Nullable)signatureImageUri signatureInitials:(NSString * _Nullable)signatureInitials signatureName:(NSString * _Nullable)signatureName signatureRights:(NSString * _Nullable)signatureRights signatureType:(NSString * _Nullable)signatureType stampFormat:(NSString * _Nullable)stampFormat stampImageUri:(NSURL * _Nullable)stampImageUri stampSizeMM:(NSString * _Nullable)stampSizeMM stampType:(NSString * _Nullable)stampType status:(NSString * _Nullable)status OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI28DSAPIUserSignatureDefinition")
@interface DSAPIUserSignatureDefinition : NSObject
@property (nonatomic, strong) DSAPIDateStampProperties * _Nullable dateStampProperties;
/// When <em>true,</em> users may not resize the stamp.
@property (nonatomic) BOOL disallowUserResizeStamp;
/// Optionally specify an external identifier for the user's signature.
@property (nonatomic, copy) NSString * _Nullable externalID;
/// Specificies the type of image. Valid values are:  - `signature_image` - `initials_image`
@property (nonatomic, copy) NSString * _Nullable imageType;
/// Boolean that specifies whether the signature is the default signature for the user.
@property (nonatomic, copy) NSString * _Nullable isDefault;
/// The National Association of Realtors (NAR) membership ID for a user who is a realtor.
@property (nonatomic, copy) NSString * _Nullable nrdsId;
/// The realtor's last name.
@property (nonatomic, copy) NSString * _Nullable nrdsLastName;
/// The phonetic spelling of the `signatureName`.
@property (nonatomic, copy) NSString * _Nullable phoneticName;
/// The font type to use for the signature if the signature is not drawn. The following font styles  are supported. The quotes are to indicate that these values are strings, not `enums`.  - `&quot;1_DocuSign&quot;` - `&quot;2_DocuSign&quot;` - `&quot;3_DocuSign&quot;` - `&quot;4_DocuSign&quot;` - `&quot;5_DocuSign&quot;` - `&quot;6_DocuSign&quot;` - `&quot;7_DocuSign&quot;` - `&quot;8_DocuSign&quot;` - `&quot;Mistral&quot;` - `&quot;Rage Italic&quot;`
@property (nonatomic, copy) NSString * _Nullable signatureFont;
/// Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as &quot;&&quot;, &quot;<&quot;, &quot;>&quot;) in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.
@property (nonatomic, copy) NSString * _Nullable signatureId;
/// Specifies the user's signature in initials format.
@property (nonatomic, copy) NSString * _Nullable signatureInitials;
/// Specifies the user's signature name.
@property (nonatomic, copy) NSString * _Nullable signatureName;
/// Specifies the type of signature.
@property (nonatomic, copy) NSString * _Nullable signatureType;
/// The format of a stamp. Valid values are:  - `NameHanko`: The stamp represents only the signer's name. - `NameDateHanko`: The stamp represents the signer's name and the date.
@property (nonatomic, copy) NSString * _Nullable stampFormat;
/// The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.
@property (nonatomic, copy) NSString * _Nullable stampSizeMM;
- (nonnull instancetype)initWithDateStampProperties:(DSAPIDateStampProperties * _Nullable)dateStampProperties disallowUserResizeStamp:(BOOL)disallowUserResizeStamp externalID:(NSString * _Nullable)externalID imageType:(NSString * _Nullable)imageType isDefault:(NSString * _Nullable)isDefault nrdsId:(NSString * _Nullable)nrdsId nrdsLastName:(NSString * _Nullable)nrdsLastName phoneticName:(NSString * _Nullable)phoneticName signatureFont:(NSString * _Nullable)signatureFont signatureId:(NSString * _Nullable)signatureId signatureInitials:(NSString * _Nullable)signatureInitials signatureName:(NSString * _Nullable)signatureName signatureType:(NSString * _Nullable)signatureType stampFormat:(NSString * _Nullable)stampFormat stampSizeMM:(NSString * _Nullable)stampSizeMM OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI30DSAPIUserSignaturesInformation")
@interface DSAPIUserSignaturesInformation : NSObject
/// An array of  `userSignature` objects.
@property (nonatomic, copy) NSArray<DSAPIUserSignature *> * _Nullable userSignatures;
- (nonnull instancetype)initWithUserSignatures:(NSArray<DSAPIUserSignature *> * _Nullable)userSignatures OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI12DSAPIViewUrl")
@interface DSAPIViewUrl : NSObject
/// URL to the Review ID page.
@property (nonatomic, copy) NSURL * _Nullable url;
- (nonnull instancetype)initWithUrl:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A complex type containing information about a witness recipient. Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
SWIFT_CLASS("_TtC11DocuSignAPI12DSAPIWitness")
@interface DSAPIWitness : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditEmail;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditName;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSURL * _Nullable bulkRecipientsUri;
/// When <em>true,</em> specifies that the signer can perform the signing ceremony offline.
@property (nonatomic) BOOL canSignOffline;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// The reason why the recipient was created (for example, `sender`). This property is read-only.
@property (nonatomic, copy) NSString * _Nullable creationReason;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// When <em>true,</em> this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.
@property (nonatomic) BOOL defaultRecipient;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name. Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable isBulkRecipient;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable isBulkRecipientMetadata;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
@property (nonatomic, copy) NSString * _Nullable notaryId;
@property (nonatomic, copy) NSString * _Nullable notarySignerEmailSent;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
@property (nonatomic, strong) DSAPIOfflineAttributes * _Nullable offlineAttributes;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// When <em>true,</em> specifies that the recipient creates the tabs.
@property (nonatomic) BOOL recipientSuppliesTabs;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.  This parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates.   Set this parameter to `safe` to use a SAFE-BioPharma certificate.  The signer must be enrolled in the SAFE program to sign with a SAFE certificate.
@property (nonatomic, copy) NSString * _Nullable requireSignerCertificate;
/// When <em>true,</em> the signer must print, sign, and upload or fax the signed documents to DocuSign.
@property (nonatomic) BOOL requireSignOnPaper;
/// When <em>true,</em> the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.
@property (nonatomic) BOOL requireUploadSignature;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
@property (nonatomic, strong) DSAPIRecipientSignatureInformation * _Nullable signatureInfo;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// When <em>true</em> and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).
@property (nonatomic) BOOL signInEachLocation;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signInEachLocationMetadata;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
/// The `recipientId` of the person or party for whom the recipient is a witness.
@property (nonatomic, copy) NSString * _Nullable witnessFor;
/// Not used. Use the `witnessFor` property instead.
@property (nonatomic, copy) NSString * _Nullable witnessForGuid;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A tab that allows the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits in the ZIP+4 format. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.
SWIFT_CLASS("_TtC11DocuSignAPI8DSAPIZip")
@interface DSAPIZip : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// When <em>true,</em> ZIP+4 format is used.
@property (nonatomic) BOOL useDash4;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable useDash4Metadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI11DSClientAPI")
@interface DSClientAPI : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull basePath;)
+ (NSString * _Nonnull)basePath SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull customHeaders;)
+ (NSDictionary<NSString *, NSString *> * _Nonnull)customHeaders SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBasePath:(NSString * _Nonnull)basePath customHeaders:(NSDictionary<NSString *, NSString *> * _Nonnull)customHeaders;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIImage;

SWIFT_CLASS("_TtC11DocuSignAPI12EnvelopesAPI")
@interface EnvelopesAPI : NSObject
/// Gets a PDF transcript of all of the comments in an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param encoding (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)commentsGetCommentsTranscriptWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId encoding:(NSString * _Nullable)encoding completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Gets the default Electronic Record and Signature Disclosure for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param langCode (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)consumerDisclosureGetConsumerDisclosureEnvelopeIdRecipientIdWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId langCode:(NSString * _Nullable)langCode completion:(void (^ _Nonnull)(DSAPIConsumerDisclosure * _Nullable, NSError * _Nullable))completion;
/// Gets the Electronic Record and Signature Disclosure for a specific envelope recipient.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param langCode (path) The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to ï¿½browserï¿½ to automatically detect the browser language being used by the viewer and display the disclosure in that language.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param langCode (query) The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to ï¿½browserï¿½ to automatically detect the browser language being used by the viewer and display the disclosure in that language. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)consumerDisclosureGetConsumerDisclosureEnvelopeIdRecipientIdLangCodeWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId langCode:(NSString * _Nonnull)langCode recipientId:(NSString * _Nonnull)recipientId completion:(void (^ _Nonnull)(DSAPIConsumerDisclosure * _Nullable, NSError * _Nullable))completion;
/// Deletes envelope custom fields for draft and in-process envelopes.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)customFieldsDeleteCustomFieldsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPICustomFields * _Nullable)body completion:(void (^ _Nonnull)(DSAPICustomFields * _Nullable, NSError * _Nullable))completion;
/// Creates envelope custom fields for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)customFieldsPostCustomFieldsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPICustomFields * _Nullable)body completion:(void (^ _Nonnull)(DSAPICustomFields * _Nullable, NSError * _Nullable))completion;
/// Updates envelope custom fields in an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)customFieldsPutCustomFieldsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPICustomFields * _Nullable)body completion:(void (^ _Nonnull)(DSAPICustomFields * _Nullable, NSError * _Nullable))completion;
/// Deletes documents from a draft envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsDeleteDocumentsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIEnvelopeDefinition * _Nullable)body completion:(void (^ _Nonnull)(DSAPIEnvelopeDocumentsResult * _Nullable, NSError * _Nullable))completion;
/// Gets a document from an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param certificate (query) When set to <em>false</em>, the envelope signing certificate is removed from the download. (optional)
///
/// \param documentsByUserid (query)  (optional)
///
/// \param encoding (query)  (optional)
///
/// \param encrypt (query) When set to <em>true</em>, the PDF bytes returned in the response are encrypted for all the key managers configured on your DocuSign account. The documents can be decrypted with the KeyManager Decrypt Document API. (optional)
///
/// \param language (query) Specifies the language for the Certificate of Completion in the response. The supported languages, with the language value shown in parenthesis, are: Chinese Simplified (zh_CN), , Chinese Traditional (zh_TW), Dutch (nl), English US (en), French (fr), German (de), Italian (it), Japanese (ja), Korean (ko), Portuguese (pt), Portuguese (Brazil) (pt_BR), Russian (ru), Spanish (es).  (optional)
///
/// \param recipientId (query)  (optional)
///
/// \param sharedUserId (query)  (optional)
///
/// \param showChanges (query) When set to <em>true</em>, any changed fields for the returned PDF are highlighted in yellow and optional signatures or initials outlined in red.  (optional)
///
/// \param watermark (query) When set to <em>true</em>, the account has the watermark feature enabled, and the envelope is not complete, the watermark for the account is added to the PDF documents. This option can remove the watermark.  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsGetDocumentWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId certificate:(NSString * _Nullable)certificate documentsByUserid:(NSString * _Nullable)documentsByUserid encoding:(NSString * _Nullable)encoding encrypt:(NSString * _Nullable)encrypt language:(NSString * _Nullable)language recipientId:(NSString * _Nullable)recipientId sharedUserId:(NSString * _Nullable)sharedUserId showChanges:(NSString * _Nullable)showChanges watermark:(NSString * _Nullable)watermark completion:(void (^ _Nonnull)(NSURL * _Nullable, NSError * _Nullable))completion;
/// Gets a list of documents in an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param documentsByUserid (query)  (optional)
///
/// \param includeDocumentSize (query)  (optional)
///
/// \param includeMetadata (query)  (optional)
///
/// \param includeTabs (query)  (optional)
///
/// \param recipientId (query)  (optional)
///
/// \param sharedUserId (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsGetDocumentsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId documentsByUserid:(NSString * _Nullable)documentsByUserid includeDocumentSize:(NSString * _Nullable)includeDocumentSize includeMetadata:(NSString * _Nullable)includeMetadata includeTabs:(NSString * _Nullable)includeTabs recipientId:(NSString * _Nullable)recipientId sharedUserId:(NSString * _Nullable)sharedUserId completion:(void (^ _Nonnull)(DSAPIEnvelopeDocumentsResult * _Nullable, NSError * _Nullable))completion;
/// Adds or replaces a document in an existing envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsPutDocumentWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId completion:(void (^ _Nonnull)(DSAPIEnvelopeDocument * _Nullable, NSError * _Nullable))completion;
/// Adds one or more documents to an existing envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsPutDocumentsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIEnvelopeDefinition * _Nullable)body completion:(void (^ _Nonnull)(DSAPIEnvelopeDocumentsResult * _Nullable, NSError * _Nullable))completion;
/// Deletes the email setting overrides for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)emailSettingsDeleteEmailSettingsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId completion:(void (^ _Nonnull)(DSAPIEmailSettings * _Nullable, NSError * _Nullable))completion;
/// Gets the email setting overrides for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)emailSettingsGetEmailSettingsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId completion:(void (^ _Nonnull)(DSAPIEmailSettings * _Nullable, NSError * _Nullable))completion;
/// Adds email setting overrides to an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)emailSettingsPostEmailSettingsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIEmailSettings * _Nullable)body completion:(void (^ _Nonnull)(DSAPIEmailSettings * _Nullable, NSError * _Nullable))completion;
/// Updates the email setting overrides for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)emailSettingsPutEmailSettingsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIEmailSettings * _Nullable)body completion:(void (^ _Nonnull)(DSAPIEmailSettings * _Nullable, NSError * _Nullable))completion;
/// Gets the status of a single envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param advancedUpdate (query) When true, envelope information can be added or modified. (optional)
///
/// \param include (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)envelopesGetEnvelopeWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId advancedUpdate:(NSString * _Nullable)advancedUpdate include:(NSString * _Nullable)include completion:(void (^ _Nonnull)(DSAPIEnvelope * _Nullable, NSError * _Nullable))completion;
/// Creates an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param body (body)  (optional)
///
/// \param cdseMode (query)  (optional)
///
/// \param changeRoutingOrder (query)  (optional)
///
/// \param completedDocumentsOnly (query) If set to true then we want to set the sourceEnvelopeId to indicate that this is a&quot;forward&quot; envelope action (optional)
///
/// \param mergeRolesOnDraft (query) When set to <em>true</em>, merges template roles and remove empty recipients when you create an envelope with multiple templates. (optional)
///
/// \param tabLabelExactMatches (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)envelopesPostEnvelopesWithAccountId:(NSString * _Nonnull)accountId body:(DSAPIEnvelopeDefinition * _Nullable)body cdseMode:(NSString * _Nullable)cdseMode changeRoutingOrder:(NSString * _Nullable)changeRoutingOrder completedDocumentsOnly:(NSString * _Nullable)completedDocumentsOnly mergeRolesOnDraft:(NSString * _Nullable)mergeRolesOnDraft tabLabelExactMatches:(NSString * _Nullable)tabLabelExactMatches completion:(void (^ _Nonnull)(DSAPIEnvelopeSummary * _Nullable, NSError * _Nullable))completion;
/// Deletes an envelope lock.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)lockDeleteEnvelopeLockWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId lockToken:(NSString * _Nonnull)lockToken completion:(void (^ _Nonnull)(DSAPILockInformation * _Nullable, NSError * _Nullable))completion;
/// Gets envelope lock information.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)lockGetEnvelopeLockWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId completion:(void (^ _Nonnull)(DSAPILockInformation * _Nullable, NSError * _Nullable))completion;
/// Gets envelope notification information.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)notificationGetEnvelopesEnvelopeIdNotificationWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId completion:(void (^ _Nonnull)(DSAPINotification * _Nullable, NSError * _Nullable))completion;
/// Gets a page image from an envelope for display.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param pageNumber (path) The page number being accessed.
///
/// \param dpi (query) Sets the dpi for the image. (optional)
///
/// \param maxHeight (query) Sets the maximum height for the page image in pixels. The dpi is recalculated based on this setting. (optional)
///
/// \param maxWidth (query) Sets the maximum width for the page image in pixels. The dpi is recalculated based on this setting. (optional)
///
/// \param showChanges (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)pagesGetPageImageWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId pageNumber:(NSString * _Nonnull)pageNumber dpi:(NSString * _Nullable)dpi maxHeight:(NSString * _Nullable)maxHeight maxWidth:(NSString * _Nullable)maxWidth showChanges:(NSString * _Nullable)showChanges completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Deletes a recipient from an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsDeleteRecipientWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId completion:(void (^ _Nonnull)(DSAPIRecipients * _Nullable, NSError * _Nullable))completion;
/// Deletes the tabs associated with a recipient.  <em>Note:</em> It is an error to delete a tab that has the <code>templateLocked</code> property set to true. This property corresponds to the <em>Restrict changes</em> option in the web app.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsDeleteRecipientTabsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId body:(DSAPITabs * _Nullable)body completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Deletes recipients from an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsDeleteRecipientsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIRecipients * _Nullable)body completion:(void (^ _Nonnull)(DSAPIRecipients * _Nullable, NSError * _Nullable))completion;
/// Gets the initials image for a user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param includeChrome (query) The added line and identifier around the initial image. Note: Older envelopes might only have chromed images. If getting the non-chromed image fails, try getting the chromed image. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetRecipientInitialsImageWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId includeChrome:(NSString * _Nullable)includeChrome completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Gets signature information for a signer or sign-in-person recipient.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetRecipientSignatureWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId completion:(void (^ _Nonnull)(DSAPIUserSignature * _Nullable, NSError * _Nullable))completion;
/// Retrieve signature image information for a signer/sign-in-person recipient.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param includeChrome (query) When set to <em>true</em>, indicates the chromed version of the signature image should be retrieved. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetRecipientSignatureImageWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId includeChrome:(NSString * _Nullable)includeChrome completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Gets the tabs information for a signer or sign-in-person recipient in an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param includeAnchorTabLocations (query) When set to <em>true</em>, all tabs with anchor tab properties are included in the response.  (optional)
///
/// \param includeMetadata (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetRecipientTabsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId includeAnchorTabLocations:(NSString * _Nullable)includeAnchorTabLocations includeMetadata:(NSString * _Nullable)includeMetadata completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Gets the status of recipients for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param includeAnchorTabLocations (query)  When set to <em>true</em> and `include_tabs` is set to <em>true</em>, all tabs with anchor tab properties are included in the response.  (optional)
///
/// \param includeExtended (query)  When set to <em>true</em>, the extended properties are included in the response.  (optional)
///
/// \param includeMetadata (query)  (optional)
///
/// \param includeTabs (query) When set to <em>true</em>, the tab information associated with the recipient is included in the response. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetRecipientsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId includeAnchorTabLocations:(NSString * _Nullable)includeAnchorTabLocations includeExtended:(NSString * _Nullable)includeExtended includeMetadata:(NSString * _Nullable)includeMetadata includeTabs:(NSString * _Nullable)includeTabs completion:(void (^ _Nonnull)(DSAPIRecipients * _Nullable, NSError * _Nullable))completion;
/// Adds tabs for a recipient.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPostRecipientTabsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId body:(DSAPITabs * _Nullable)body completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Adds one or more recipients to an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param resendEnvelope (query) When set to <em>true</em>, resends the   envelope if the new recipient's routing order is before or the same as the envelope's next recipient. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPostRecipientsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIRecipients * _Nullable)body resendEnvelope:(NSString * _Nullable)resendEnvelope completion:(void (^ _Nonnull)(DSAPIRecipients * _Nullable, NSError * _Nullable))completion;
/// Sets the initials image for an accountless signer.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPutRecipientInitialsImageWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId image:(UIImage * _Nonnull)image completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
/// Sets the signature image for an accountless signer.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPutRecipientSignatureImageWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId image:(UIImage * _Nonnull)image completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
/// Updates the tabs for a recipient.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPutRecipientTabsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId body:(DSAPITabs * _Nullable)body completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Updates recipients in a draft envelope or corrects recipient information for an in-process envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param combineSameOrderRecipients (query)  (optional)
///
/// \param offlineSigning (query)  (optional)
///
/// \param resendEnvelope (query) When set to <em>true</em>, resends the   envelope if the new recipient's routing order is before or the same as the envelope's next recipient. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPutRecipientsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIRecipients * _Nullable)body combineSameOrderRecipients:(NSString * _Nullable)combineSameOrderRecipients offlineSigning:(NSString * _Nullable)offlineSigning resendEnvelope:(NSString * _Nullable)resendEnvelope completion:(void (^ _Nonnull)(DSAPIRecipientsUpdateSummary * _Nullable, NSError * _Nullable))completion;
/// Deletes tabs from a document in an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsDeleteDocumentTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPITabs * _Nullable)body completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Returns the tabs on a document.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param includeMetadata (query)  (optional)
///
/// \param pageNumbers (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsGetDocumentTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId includeMetadata:(NSString * _Nullable)includeMetadata pageNumbers:(NSString * _Nullable)pageNumbers completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Returns tabs on the specified page.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param pageNumber (path) The page number being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsGetPageTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId pageNumber:(NSString * _Nonnull)pageNumber completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Adds tabs to a document in an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsPostDocumentTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPITabs * _Nullable)body completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Updates the tabs for document.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsPutDocumentTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPITabs * _Nullable)body completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Returns a URL to the shared recipient view UI for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)viewsPostEnvelopeRecipientSharedViewWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIRecipientViewRequest * _Nullable)body completion:(void (^ _Nonnull)(DSAPIViewUrl * _Nullable, NSError * _Nullable))completion;
/// Returns a URL to the recipient view UI.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)viewsPostEnvelopeRecipientViewWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIRecipientViewRequest * _Nullable)body completion:(void (^ _Nonnull)(DSAPIViewUrl * _Nullable, NSError * _Nullable))completion;
/// Create the link to the page for manually reviewing IDs.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)viewsPostRecipientManualReviewViewWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId completion:(void (^ _Nonnull)(DSAPIViewUrl * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface EnvelopesAPI (SWIFT_EXTENSION(DocuSignAPI))
/// Updates recipients in a draft envelope or corrects recipient information for an in-process envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param multiParts (multiParts) (optional)
///
/// \param combineSameOrderRecipients (query)  (optional)
///
/// \param offlineSigning (query)  (optional)
///
/// \param resendEnvelope (query) When set to <em>true</em>, resends the   envelope if the new recipient's routing order is before or the same as the envelope's next recipient. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPutRecipientsOfflineWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIRecipients * _Nullable)body multiParts:(NSDictionary<NSString *, NSArray *> * _Nullable)multiParts combineSameOrderRecipients:(NSString * _Nullable)combineSameOrderRecipients offlineSigning:(NSString * _Nullable)offlineSigning resendEnvelope:(NSString * _Nullable)resendEnvelope completion:(void (^ _Nonnull)(DSAPIRecipientsUpdateSummary * _Nullable, NSError * _Nullable))completion;
/// Creates an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param body (body)  (optional)
///
/// \param multiParts (multiParts) (optional)
///
/// \param cdseMode (query)  (optional)
///
/// \param changeRoutingOrder (query)  (optional)
///
/// \param completedDocumentsOnly (query) If set to true then we want to set the sourceEnvelopeId to indicate that this is a&quot;forward&quot; envelope action (optional)
///
/// \param mergeRolesOnDraft (query) When set to <em>true</em>, merges template roles and remove empty recipients when you create an envelope with multiple templates. (optional)
///
/// \param tabLabelExactMatches (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)envelopesPostEnvelopesOfflineWithAccountId:(NSString * _Nonnull)accountId body:(DSAPIEnvelopeDefinition * _Nullable)body multiParts:(NSDictionary<NSString *, NSArray *> * _Nullable)multiParts cdseMode:(NSString * _Nullable)cdseMode changeRoutingOrder:(NSString * _Nullable)changeRoutingOrder completedDocumentsOnly:(NSString * _Nullable)completedDocumentsOnly mergeRolesOnDraft:(NSString * _Nullable)mergeRolesOnDraft tabLabelExactMatches:(NSString * _Nullable)tabLabelExactMatches completion:(void (^ _Nonnull)(DSAPIEnvelopeSummary * _Nullable, NSError * _Nullable))completion;
@end


SWIFT_CLASS("_TtC11DocuSignAPI10FoldersAPI")
@interface FoldersAPI : NSObject
/// Gets a list of the folders for the account.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param include (query)  (optional)
///
/// \param includeItems (query)  (optional)
///
/// \param startPosition (query)  (optional)
///
/// \param template (query) Specifies the items that are returned. Valid values are:   * include - The folder list will return normal folders plus template folders.  * only - Only the list of template folders are returned. (optional)
///
/// \param userFilter (query)  (optional)
///
/// \param subFolderDepth (query) (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)foldersGetFoldersWithAccountId:(NSString * _Nonnull)accountId include:(NSString * _Nullable)include includeItems:(NSString * _Nullable)includeItems startPosition:(NSString * _Nullable)startPosition template:(NSString * _Nullable)template_ userFilter:(NSString * _Nullable)userFilter subFolderDepth:(NSString * _Nullable)subFolderDepth completion:(void (^ _Nonnull)(DSAPIFoldersResponse * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DocuSignAPI12TelemetryAPI")
@interface TelemetryAPI : NSObject
/// Initiate a new chunked upload.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)createWithEvents:(DSAPITelemetryEvents * _Nullable)events baseURL:(NSString * _Nullable)baseURL completion:(void (^ _Nonnull)(DSAPITelemetryEventsResponse * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DocuSignAPI12TemplatesAPI")
@interface TemplatesAPI : NSObject
/// Gets the custom document fields from a template.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)customFieldsGetTemplateCustomFieldsWithAccountId:(NSString * _Nonnull)accountId templateId:(NSString * _Nonnull)templateId completion:(void (^ _Nonnull)(DSAPICustomFields * _Nullable, NSError * _Nullable))completion;
/// Gets PDF documents from a template.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param encrypt (query)  (optional)
///
/// \param showChanges (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsGetTemplateDocumentWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId templateId:(NSString * _Nonnull)templateId encrypt:(NSString * _Nullable)encrypt showChanges:(NSString * _Nullable)showChanges completion:(void (^ _Nonnull)(NSURL * _Nullable, NSError * _Nullable))completion;
/// Updates a template document.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param body (body)  (optional)
///
/// \param isEnvelopeDefinition (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsPutTemplateDocumentWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId templateId:(NSString * _Nonnull)templateId body:(DSAPIEnvelopeDefinition * _Nullable)body isEnvelopeDefinition:(NSString * _Nullable)isEnvelopeDefinition completion:(void (^ _Nonnull)(DSAPIEnvelopeDocument * _Nullable, NSError * _Nullable))completion;
/// Gets template lock information.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)lockGetTemplateLockWithAccountId:(NSString * _Nonnull)accountId templateId:(NSString * _Nonnull)templateId completion:(void (^ _Nonnull)(DSAPILockInformation * _Nullable, NSError * _Nullable))completion;
/// Gets template notification information.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)notificationGetTemplatesTemplateIdNotificationWithAccountId:(NSString * _Nonnull)accountId templateId:(NSString * _Nonnull)templateId completion:(void (^ _Nonnull)(DSAPINotification * _Nullable, NSError * _Nullable))completion;
/// Gets a page image from a template for display.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param pageNumber (path) The page number being accessed.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param dpi (query)  (optional)
///
/// \param maxHeight (query)  (optional)
///
/// \param maxWidth (query)  (optional)
///
/// \param showChanges (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)pagesGetTemplatePageImageWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId pageNumber:(NSString * _Nonnull)pageNumber templateId:(NSString * _Nonnull)templateId dpi:(NSString * _Nullable)dpi maxHeight:(NSString * _Nullable)maxHeight maxWidth:(NSString * _Nullable)maxWidth showChanges:(NSString * _Nullable)showChanges completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Gets the tabs information for a signer or sign-in-person recipient in a template.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param includeAnchorTabLocations (query) When set to <em>true</em>, all tabs with anchor tab properties are included in the response.  (optional)
///
/// \param includeMetadata (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetTemplateRecipientTabsWithAccountId:(NSString * _Nonnull)accountId recipientId:(NSString * _Nonnull)recipientId templateId:(NSString * _Nonnull)templateId includeAnchorTabLocations:(NSString * _Nullable)includeAnchorTabLocations includeMetadata:(NSString * _Nullable)includeMetadata completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Gets recipient information from a template.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param includeAnchorTabLocations (query)  When set to <em>true</em> and `include_tabs` is set to <em>true</em>, all tabs with anchor tab properties are included in the response.  (optional)
///
/// \param includeExtended (query)  When set to <em>true</em>, the extended properties are included in the response.  (optional)
///
/// \param includeTabs (query) When set to <em>true</em>, the tab information associated with the recipient is included in the response. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetTemplateRecipientsWithAccountId:(NSString * _Nonnull)accountId templateId:(NSString * _Nonnull)templateId includeAnchorTabLocations:(NSString * _Nullable)includeAnchorTabLocations includeExtended:(NSString * _Nullable)includeExtended includeTabs:(NSString * _Nullable)includeTabs completion:(void (^ _Nonnull)(DSAPIRecipients * _Nullable, NSError * _Nullable))completion;
/// Returns tabs on a template.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param pageNumbers (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsGetTemplateDocumentTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId templateId:(NSString * _Nonnull)templateId pageNumbers:(NSString * _Nullable)pageNumbers completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Returns tabs on the specified page.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param pageNumber (path) The page number being accessed.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsGetTemplatePageTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId pageNumber:(NSString * _Nonnull)pageNumber templateId:(NSString * _Nonnull)templateId completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Gets a specific template associated with a specified account.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param include (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)templatesGetTemplateWithAccountId:(NSString * _Nonnull)accountId templateId:(NSString * _Nonnull)templateId include:(NSString * _Nullable)include completion:(void (^ _Nonnull)(DSAPIEnvelopeTemplate * _Nullable, NSError * _Nullable))completion;
/// Gets the list of templates.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param count (query) Number of records to return in the cache. (optional)
///
/// \param createdFromDate (query)  (optional)
///
/// \param createdToDate (query)  (optional)
///
/// \param folderIds (query) A comma separated list of folder ID GUIDs. (optional)
///
/// \param folderTypes (query)  (optional)
///
/// \param fromDate (query) Start of the search date range. Only returns templates created on or after this date/time. If no value is specified, there is no limit on the earliest date created. (optional)
///
/// \param include (query) A comma separated list of additional template attributes to include in the response. Valid values are: recipients, folders, documents, custom_fields, and notifications. (optional)
///
/// \param isDeletedTemplateOnly (query)  (optional)
///
/// \param isDownload (query)  (optional)
///
/// \param modifiedFromDate (query)  (optional)
///
/// \param modifiedToDate (query)  (optional)
///
/// \param order (query) Sets the direction order used to sort the list. Valid values are: -asc = ascending sort order (a to z)  -desc = descending sort order (z to a) (optional)
///
/// \param orderBy (query) Sets the file attribute used to sort the list. Valid values are:  -name: template name  -modified: date/time template was last modified.  -used: date/time the template was last used. (optional)
///
/// \param searchFields (query)  (optional)
///
/// \param searchText (query) The search text used to search the names of templates. (optional)
///
/// \param sharedByMe (query) If true, the response only includes templates shared by the user. If false, the response only returns template not shared by the user. If not specified, the response is not affected. (optional)
///
/// \param startPosition (query) The starting index for the first template shown in the response. This must be greater than or equal to 0 (zero). (optional)
///
/// \param templateIds (query)  (optional)
///
/// \param toDate (query) End of the search date range. Only returns templates created up to this date/time. If no value is provided, this defaults to the current date. (optional)
///
/// \param usedFromDate (query) Start of the search date range. Only returns templates used or edited on or after this date/time. If no value is specified, there is no limit on the earliest date used. (optional)
///
/// \param usedToDate (query) End of the search date range. Only returns templates used or edited up to this date/time. If no value is provided, this defaults to the current date. (optional)
///
/// \param userFilter (query) Sets if the templates shown in the response Valid values are:  -owned_by_me: only shows templates the user owns.  -shared_with_me: only shows templates that are shared with the user.  -all: shows all templates owned or shared with the user. (optional)
///
/// \param userId (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)templatesGetTemplatesWithAccountId:(NSString * _Nonnull)accountId count:(NSString * _Nullable)count createdFromDate:(NSString * _Nullable)createdFromDate createdToDate:(NSString * _Nullable)createdToDate folderIds:(NSString * _Nullable)folderIds folderTypes:(NSString * _Nullable)folderTypes fromDate:(NSString * _Nullable)fromDate include:(NSString * _Nullable)include isDeletedTemplateOnly:(NSString * _Nullable)isDeletedTemplateOnly isDownload:(NSString * _Nullable)isDownload modifiedFromDate:(NSString * _Nullable)modifiedFromDate modifiedToDate:(NSString * _Nullable)modifiedToDate order:(NSString * _Nullable)order orderBy:(NSString * _Nullable)orderBy searchFields:(NSString * _Nullable)searchFields searchText:(NSString * _Nullable)searchText sharedByMe:(NSString * _Nullable)sharedByMe startPosition:(NSString * _Nullable)startPosition templateIds:(NSString * _Nullable)templateIds toDate:(NSString * _Nullable)toDate usedFromDate:(NSString * _Nullable)usedFromDate usedToDate:(NSString * _Nullable)usedToDate userFilter:(NSString * _Nullable)userFilter userId:(NSString * _Nullable)userId completion:(void (^ _Nonnull)(DSAPIEnvelopeTemplateResults * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DocuSignAPI8UsersAPI")
@interface UsersAPI : NSObject
/// Retrieves the user profile image for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param encoding (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userProfileImageGetUserProfileImageWithAccountId:(NSString * _Nonnull)accountId userId:(NSString * _Nonnull)userId encoding:(NSString * _Nullable)encoding completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Gets the user account settings for a specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSettingsGetUserSettingsWithAccountId:(NSString * _Nonnull)accountId userId:(NSString * _Nonnull)userId completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Removes removes signature information for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesDeleteUserSignatureWithAccountId:(NSString * _Nonnull)accountId signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
/// Deletes the user initials image or the  user signature image for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param imageType (path) One of <em>signature_image</em> or <em>initials_image</em>.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesDeleteUserSignatureImageWithAccountId:(NSString * _Nonnull)accountId imageType:(NSString * _Nonnull)imageType signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId completion:(void (^ _Nonnull)(DSAPIUserSignature * _Nullable, NSError * _Nullable))completion;
/// Gets the user signature information for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesGetUserSignatureWithAccountId:(NSString * _Nonnull)accountId signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId completion:(void (^ _Nonnull)(DSAPIUserSignature * _Nullable, NSError * _Nullable))completion;
/// Retrieves the user initials image or the  user signature image for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param imageType (path) One of <em>signature_image</em> or <em>initials_image</em>.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param includeChrome (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesGetUserSignatureImageWithAccountId:(NSString * _Nonnull)accountId imageType:(NSString * _Nonnull)imageType signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId includeChrome:(NSString * _Nullable)includeChrome completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Retrieves a list of signature definitions for a user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param stampType (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesGetUserSignaturesWithAccountId:(NSString * _Nonnull)accountId userId:(NSString * _Nonnull)userId stampType:(NSString * _Nullable)stampType completion:(void (^ _Nonnull)(DSAPIUserSignaturesInformation * _Nullable, NSError * _Nullable))completion;
/// Adds user Signature and initials images to a Signature.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesPostUserSignaturesWithAccountId:(NSString * _Nonnull)accountId userId:(NSString * _Nonnull)userId body:(DSAPIUserSignaturesInformation * _Nullable)body completion:(void (^ _Nonnull)(DSAPIUserSignaturesInformation * _Nullable, NSError * _Nullable))completion;
/// Adds/updates a user signature.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesPutUserSignatureWithAccountId:(NSString * _Nonnull)accountId userId:(NSString * _Nonnull)userId body:(DSAPIUserSignaturesInformation * _Nullable)body completion:(void (^ _Nonnull)(DSAPIUserSignaturesInformation * _Nullable, NSError * _Nullable))completion;
/// Updates the user signature for a specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param body (body)  (optional)
///
/// \param closeExistingSignature (query) When set to <em>true</em>, closes the current signature. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesPutUserSignatureByIdWithAccountId:(NSString * _Nonnull)accountId signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId body:(DSAPIUserSignatureDefinition * _Nullable)body closeExistingSignature:(NSString * _Nullable)closeExistingSignature completion:(void (^ _Nonnull)(DSAPIUserSignature * _Nullable, NSError * _Nullable))completion;
/// Updates the user signature image or user initials image for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param imageType (path) One of <em>signature_image</em> or <em>initials_image</em>.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param transparentPng (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesPutUserSignatureImageWithAccountId:(NSString * _Nonnull)accountId imageType:(NSString * _Nonnull)imageType signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId transparentPng:(NSString * _Nullable)transparentPng completion:(void (^ _Nonnull)(DSAPIUserSignature * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface UsersAPI (SWIFT_EXTENSION(DocuSignAPI))
/// Upload the user signature image and/or user initials image for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param body (body)  (optional)
///
/// \param multiParts (path) multipart dictionary containing Images for respective keys representing initials or signature images.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesPostUserSignatureImagesWithAccountId:(NSString * _Nonnull)accountId userId:(NSString * _Nonnull)userId body:(DSAPIUserSignaturesInformation * _Nullable)body multiParts:(NSDictionary<NSString *, NSArray *> * _Nullable)multiParts completion:(void (^ _Nonnull)(DSAPIUserSignaturesInformation * _Nullable, NSError * _Nullable))completion;
/// Updates the user signature image or user initials image for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param imageType (path) One of <em>signature_image</em> or <em>initials_image</em>.
///
/// \param image (path) Image of the signature or initials. .
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param transparentPng (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesPutUserSignatureImageDataWithAccountId:(NSString * _Nonnull)accountId imageType:(NSString * _Nonnull)imageType image:(UIImage * _Nonnull)image signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId transparentPng:(NSString * _Nullable)transparentPng completion:(void (^ _Nonnull)(DSAPIUserSignature * _Nullable, NSError * _Nullable))completion;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__i386__) && __i386__
// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef DOCUSIGNAPI_SWIFT_H
#define DOCUSIGNAPI_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DocuSignAPI",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSString;
@class DSAPICustomFields;
@class NSData;
@class DSAPIAccountInformation;
@class DSAPIConsumerDisclosure;

SWIFT_CLASS("_TtC11DocuSignAPI11AccountsAPI")
@interface AccountsAPI : NSObject
/// Gets a list of custom fields.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)accountCustomFieldsGetAccountCustomFieldsWithAccountId:(NSString * _Nonnull)accountId completion:(void (^ _Nonnull)(DSAPICustomFields * _Nullable, NSError * _Nullable))completion;
/// Returns a signature image, initials, or stamp.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param imageType (path) One of <em>signature_image</em> or <em>initials_image</em>.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param includeChrome (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)accountSignaturesGetAccountSignatureImageWithAccountId:(NSString * _Nonnull)accountId imageType:(NSString * _Nonnull)imageType signatureId:(NSString * _Nonnull)signatureId includeChrome:(NSString * _Nullable)includeChrome completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Retrieves the account information for the specified account.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param includeAccountSettings (query) When set to <em>true</em>, includes the account settings for the account in the response. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)accountsGetAccountWithAccountId:(NSString * _Nonnull)accountId includeAccountSettings:(NSString * _Nullable)includeAccountSettings completion:(void (^ _Nonnull)(DSAPIAccountInformation * _Nullable, NSError * _Nullable))completion;
/// Gets a brand logo.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param brandId (path) The unique identifier of a brand.
///
/// \param logoType (path) One of <em>Primary</em>, <em>Secondary</em> or <em>Email</em>.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)brandLogoGetBrandLogoWithAccountId:(NSString * _Nonnull)accountId brandId:(NSString * _Nonnull)brandId logoType:(NSString * _Nonnull)logoType completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Gets the default Electronic Record and Signature Disclosure for an account.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param langCode (query) Specifies the language used in the response. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk), and Vietnamese (vi).  Additionally, the value can be set to `browser` to automatically detect the browser language being used by the viewer and display the disclosure in that language.  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)consumerDisclosureGetConsumerDisclosureWithAccountId:(NSString * _Nonnull)accountId langCode:(NSString * _Nullable)langCode completion:(void (^ _Nonnull)(DSAPIConsumerDisclosure * _Nullable, NSError * _Nullable))completion;
/// Gets the Electronic Record and Signature Disclosure for an account.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param langCode (path) The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to ï¿½browserï¿½ to automatically detect the browser language being used by the viewer and display the disclosure in that language.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)consumerDisclosureGetConsumerDisclosureLangCodeWithAccountId:(NSString * _Nonnull)accountId langCode:(NSString * _Nonnull)langCode completion:(void (^ _Nonnull)(DSAPIConsumerDisclosure * _Nullable, NSError * _Nullable))completion;
/// Updates the Electronic Record and Signature Disclosure for an account.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param langCode (path) The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to ï¿½browserï¿½ to automatically detect the browser language being used by the viewer and display the disclosure in that language.
///
/// \param body (body)  (optional)
///
/// \param includeMetadata (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)consumerDisclosurePutConsumerDisclosureWithAccountId:(NSString * _Nonnull)accountId langCode:(NSString * _Nonnull)langCode body:(DSAPIConsumerDisclosure * _Nullable)body includeMetadata:(NSString * _Nullable)includeMetadata completion:(void (^ _Nonnull)(DSAPIConsumerDisclosure * _Nullable, NSError * _Nullable))completion;
/// Gets account settings information.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)settingsGetSettingsWithAccountId:(NSString * _Nonnull)accountId completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSNumber;

SWIFT_CLASS("_TtC11DocuSignAPI14BoolFromString")
@interface BoolFromString : NSObject
@property (nonatomic) BOOL wrappedValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPIAccountSettingsInformation;
@class NSDate;
@class NSURL;

/// Contains account Information.
SWIFT_CLASS("_TtC11DocuSignAPI23DSAPIAccountInformation")
@interface DSAPIAccountInformation : NSObject
/// The GUID associated with the account ID.
@property (nonatomic, copy) NSString * _Nullable accountIdGuid;
/// The name of the current account.
@property (nonatomic, copy) NSString * _Nullable accountName;
@property (nonatomic, strong) DSAPIAccountSettingsInformation * _Nullable accountSettings;
/// When <em>true,</em> the transaction rooms feature exposed through the Workspaces API is enabled.
@property (nonatomic) BOOL allowTransactionRooms;
/// Number of days remaining in the current billing period.
@property (nonatomic, copy) NSString * _Nullable billingPeriodDaysRemaining;
/// The billing period end date in UTC timedate format.
@property (nonatomic, copy) NSDate * _Nullable billingPeriodEndDate;
/// The number of envelopes that can be sent in the current billing period (can be unlimited).
@property (nonatomic, copy) NSString * _Nullable billingPeriodEnvelopesAllowed;
/// The number of envelopes that have been sent in the current billing period.
@property (nonatomic, copy) NSString * _Nullable billingPeriodEnvelopesSent;
/// The billing period start date in UTC timedate format.
@property (nonatomic, copy) NSDate * _Nullable billingPeriodStartDate;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable billingProfile;
/// When <em>true,</em> specifies that you can upgrade the account through the API. For GET methods, you must set the `include_metadata` query parameter to <em>true</em> for this property to appear in the response.
@property (nonatomic) BOOL canUpgrade;
@property (nonatomic, copy) NSString * _Nullable connectPermission;
/// The creation date of the account in UTC timedate format.
@property (nonatomic, copy) NSDate * _Nullable createdDate;
/// Specifies the ISO currency code for the account.
@property (nonatomic, copy) NSString * _Nullable currencyCode;
/// ID of the plan used to create this account.
@property (nonatomic, copy) NSString * _Nullable currentPlanId;
@property (nonatomic, copy) NSURL * _Nullable displayApplianceStartUrl;
@property (nonatomic, copy) NSURL * _Nullable displayApplianceUrl;
/// The code that identifies the billing plan groups and plans for the new account.
@property (nonatomic, copy) NSString * _Nullable distributorCode;
/// URL of the landing page used to create the account.
@property (nonatomic, copy) NSURL * _Nullable docuSignLandingUrl;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable dssValues;
/// When <em>true,</em> the ability to send envelopes is blocked. When <em>false,</em> envelopes can be sent.
@property (nonatomic) BOOL envelopeSendingBlocked;
/// The price of sending an envelope, represented in the account's local currency.
@property (nonatomic, copy) NSString * _Nullable envelopeUnitPrice;
/// The Account ID displayed on the user's Account page.
@property (nonatomic, copy) NSString * _Nullable externalAccountId;
/// A complex element that contains up to four Question/Answer pairs for forgotten password information for a user.
@property (nonatomic, copy) NSString * _Nullable forgottenPasswordQuestionsCount;
/// When <em>true,</em> the account has been downgraded from a premium account type. Otherwise <em>false.</em>
@property (nonatomic) BOOL isDowngrade;
/// The payment method used for the billing plan. Valid values are:  - `NotSupported` - `CreditCard` - `PurchaseOrder` - `Premium` - `Freemium` - `FreeTrial` - `AppStore` - `DigitalExternal` - `DirectDebit`
@property (nonatomic, copy) NSString * _Nullable paymentMethod;
/// Identifies the type of plan. Examples include:  - `business` - `corporate` - `enterprise`  - `free`
@property (nonatomic, copy) NSString * _Nullable planClassification;
/// The date that the current plan will end.
@property (nonatomic, copy) NSDate * _Nullable planEndDate;
/// The name of the Billing Plan.
@property (nonatomic, copy) NSString * _Nullable planName;
/// The date that the Account started using the current plan.
@property (nonatomic, copy) NSDate * _Nullable planStartDate;
/// The number of active users the account can have at one time.
@property (nonatomic, copy) NSString * _Nullable seatsAllowed;
/// The number of users currently active on the account.
@property (nonatomic, copy) NSString * _Nullable seatsInUse;
/// The status of the account content per (Title 21 CFR Part 11)[https://www.fda.gov/regulatory-information/search-fda-guidance-documents/part-11-electronic-records-electronic-signatures-scope-and-application]. This regulation defines the criteria under which electronic records and electronic signatures are considered trustworthy.
@property (nonatomic, copy) NSString * _Nullable status21CFRPart11;
/// The date on which the account was suspended.
@property (nonatomic, copy) NSDate * _Nullable suspensionDate;
/// Indicates whether the account is currently suspended.
@property (nonatomic, copy) NSString * _Nullable suspensionStatus;
@property (nonatomic) BOOL useDisplayAppliance;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPISettingsMetadata;

/// Contains account settings information. Used in requests to set property values. Used in responses to report property values.
SWIFT_CLASS("_TtC11DocuSignAPI31DSAPIAccountSettingsInformation")
@interface DSAPIAccountSettingsInformation : NSObject
/// UTC date/time format for the account.
@property (nonatomic, copy) NSString * _Nullable accountDateTimeFormat;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable accountDateTimeFormatMetadata;
@property (nonatomic, copy) NSString * _Nullable accountDefaultLanguage;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable accountDefaultLanguageMetadata;
/// The name on the account.
@property (nonatomic, copy) NSString * _Nullable accountName;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable accountNameMetadata;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-admin-guide-signature-adopt-config">Signature Adoption Configuration</a> is enabled.   <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL adoptSigConfig;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable adoptSigConfigMetadata;
/// When <em>true,</em> the Advanced Correction feature is enabled for this account.
@property (nonatomic) BOOL advancedCorrect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable advancedCorrectMetadata;
/// When <em>true,</em> the configured <a href="/docs/esign-rest-api/reference/accounts/accounts/get/#accessCodeFormat">Access Code Format</a> page is enabled for account administrators.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowAccessCodeFormat;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAccessCodeFormatMetadata;
/// When <em>true,</em> the account can be managed on a per-user basis.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowAccountManagementGranular;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAccountManagementGranularMetadata;
/// Boolean that specifies whether member names can be changed in the account.
@property (nonatomic) BOOL allowAccountMemberNameChange;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAccountMemberNameChangeMetadata;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-user-guide-conditional-recipients">Conditional Routing</a> is enabled for the account as part of DocuSign's Advanced Recipient Routing feature.
@property (nonatomic) BOOL allowAdvancedRecipientRoutingConditional;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAdvancedRecipientRoutingConditionalMetadata;
/// When <em>true,</em> an agent recipient can change the email addresses of recipients later in the signing order.
@property (nonatomic) BOOL allowAgentNameEmailEdit;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAgentNameEmailEditMetadata;
@property (nonatomic) BOOL allowAgreementActions;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAgreementActionsMetadata;
/// When <em>true,</em> auto-navigation can be enabled for this account.
@property (nonatomic) BOOL allowAutoNavSettings;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAutoNavSettingsMetadata;
/// When <em>true,</em> auto-tagging is enabled for the account.
@property (nonatomic) BOOL allowAutoTagging;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowAutoTaggingMetadata;
/// When <em>true,</em> bulk send functionality is enabled for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowBulkSend;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowBulkSendMetadata;
/// When <em>true,</em> indicates that the customer can withdraw their consent to the consumer disclosure when they decline to sign documents. If these recipients sign documents sent to them from your account in the future, they will be required to agree to the terms in the disclosure. The default value is <em>false.</em> <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowCDWithdraw;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowCDWithdrawMetadata;
/// Boolean that specifies whether a Connect configuration can use HTTP listeners.
@property (nonatomic) BOOL allowConnectHttpListenerConfigs;
/// Reserved for DocuSign.
@property (nonatomic) BOOL allowConnectSendFinishLater;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowConnectSendFinishLaterMetadata;
@property (nonatomic) BOOL allowConnectUnifiedPayloadUI;
/// When <em>true,</em> the account has the ability to change the <a href="https://support.docusign.com/en/guides/ndse-admin-guide-legal-disclosure">Consumer Disclosure</a> setting.
@property (nonatomic) BOOL allowConsumerDisclosureOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowConsumerDisclosureOverrideMetadata;
/// When <em>true,</em> senders can download form data from the envelopes that they send.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowDataDownload;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowDataDownloadMetadata;
/// &quot;true&quot; if the account has permission to use the scheduled sending feature to send envelopes at a specified datetime in the future, &quot;false&quot; otherwise.
@property (nonatomic) BOOL allowDelayedRouting;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowDelayedRoutingMetadata;
@property (nonatomic) BOOL allowDelegatedSigning;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowDelegatedSigningMetadata;
/// Boolean that specifies whether disclosure documents can be included in envelopes.
@property (nonatomic) BOOL allowDocumentDisclosures;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowDocumentDisclosuresMetadata;
/// Boolean that specifies whether notifications can include the envelope's signed document.
@property (nonatomic) BOOL allowDocumentsOnSignedEnvelopes;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowDocumentsOnSignedEnvelopesMetadata;
/// When <em>true,</em> the <a href="https://support.docusign.com/guides/ndse-user-guide-document-visibility">Document Visibility</a> feature is enabled for the account.
@property (nonatomic) BOOL allowDocumentVisibility;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowDocumentVisibilityMetadata;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-user-guide-manage-your-stamps">eHanko stamps</a> are enabled.
@property (nonatomic) BOOL allowEHankoStamps;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEHankoStampsMetadata;
/// Specifies whether eNote eOriginal integration is enabled.
@property (nonatomic) BOOL allowENoteEOriginal;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowENoteEOriginalMetadata;
/// When <em>true,</em> the envelope correction feature is enabled.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowEnvelopeCorrect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEnvelopeCorrectMetadata;
/// Specifies whether the account is able to manage rules that <a href="https://support.docusign.com/en/guides/ndse-admin-guide-custody-transfer">transfer ownership</a> of envelopes within the same account.
@property (nonatomic) BOOL allowEnvelopeCustodyTransfer;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEnvelopeCustodyTransferMetadata;
/// Specifies whether <a href="https://support.docusign.com/en/guides/ndse-user-guide-manage-custom-fields">envelope custom fields</a> are enabled.
@property (nonatomic) BOOL allowEnvelopeCustomFields;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEnvelopeCustomFieldsMetadata;
/// When <em>true,</em> envelope publishing reporting is enabled.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowEnvelopePublishReporting;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEnvelopePublishReportingMetadata;
/// Specifies whether the account has access to reports.
@property (nonatomic) BOOL allowEnvelopeReporting;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEnvelopeReportingMetadata;
/// If the account plan does not include calculated fields, this setting allows an account to use them.
@property (nonatomic) BOOL allowExpression;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowExpressionMetadata;
/// When <em>true,</em> signers are required to use Express Digital Signatures.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowExpressSignerCertificate;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowExpressSignerCertificateMetadata;
/// Boolean that specifies whether resource files can be used for extended sending.
@property (nonatomic) BOOL allowExtendedSendingResourceFile;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowExtendedSendingResourceFileMetadata;
@property (nonatomic) BOOL allowExternalLinkedAccounts;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowExternalLinkedAccountsMetadata;
/// When <em>true,</em> the account can configure and use signature pads for their recipients.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowExternalSignaturePad;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowExternalSignaturePadMetadata;
/// When <em>true,</em> IDV Level 1 is allowed. The default value is <em>false.</em>
@property (nonatomic) BOOL allowIDVLevel1;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowIDVLevel1Metadata;
@property (nonatomic) BOOL allowIDVLevel2;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowIDVLevel2Metadata;
@property (nonatomic) BOOL allowIDVLevel3;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowIDVLevel3Metadata;
@property (nonatomic) BOOL allowIDVPlatform;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowIDVPlatformMetadata;
/// When <em>true,</em> the account administrator can enable in-person signing.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL allowInPerson;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowInPersonMetadata;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-admin-guide-managed-stamps">Managed Stamps</a> are enabled.
@property (nonatomic) BOOL allowManagedStamps;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowManagedStampsMetadata;
/// When <em>true,</em> the Document Markup feature is enabled.  <em>Note:</em>  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.
@property (nonatomic) BOOL allowMarkup;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowMarkupMetadata;
/// When <em>true,</em> account users can set their own <a href="https://support.docusign.com/en/articles/How-do-I-modify-time-zone-settings-for-my-account">time zone settings</a>.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowMemberTimeZone;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowMemberTimeZoneMetadata;
/// When <em>true,</em> the account can use <a href="https://support.docusign.com/en/guides/dfs-user-guide-merge-fields-user">merge fields</a> with DocuSign for Salesforce.
@property (nonatomic) BOOL allowMergeFields;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowMergeFieldsMetadata;
/// Specifies whether the account supports multiple brands.
@property (nonatomic) BOOL allowMultipleBrandProfiles;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowMultipleBrandProfilesMetadata;
/// When <em>true,</em> recipients can upload multiple signer attachments with a single attachment.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowMultipleSignerAttachments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowMultipleSignerAttachmentsMetadata;
/// Specifies whether users can use international numbers for phone authentication.
@property (nonatomic) BOOL allowNonUSPhoneAuth;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowNonUSPhoneAuthMetadata;
@property (nonatomic) BOOL allowOcrOfEnvelopeDocuments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOcrOfEnvelopeDocumentsMetadata;
/// When <em>true,</em> <a href="https://support.docusign.com/articles/Offline-access-with-the-DocuSign-Mobile-App-for-iOS-iPad-iPhone-iPod-Touch">offline signing</a> is enabled for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowOfflineSigning;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOfflineSigningMetadata;
/// When <em>true,</em> senders can use OpenTrust signer certificates.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowOpenTrustSignerCertificate;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOpenTrustSignerCertificateMetadata;
@property (nonatomic) BOOL allowOrganizationDocusignMonitor;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOrganizationDocusignMonitorMetadata;
@property (nonatomic) BOOL allowOrganizationDomainUserManagement;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOrganizationDomainUserManagementMetadata;
/// Boolean that specifies whether <a href="/docs/admin-api/">DocuSign Admin</a> is enabled for the account.
@property (nonatomic) BOOL allowOrganizations;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOrganizationsMetadata;
@property (nonatomic) BOOL allowOrganizationSsoManagement;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOrganizationSsoManagementMetadata;
@property (nonatomic) BOOL allowOrganizationToUseRemoteNotary;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowOrganizationToUseRemoteNotaryMetadata;
/// When <em>true,</em> payment processing is enabled for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowPaymentProcessing;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowPaymentProcessingMetadata;
/// When <em>true,</em> signers can use personal signer certificates.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowPersonalSignerCertificate;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowPersonalSignerCertificateMetadata;
/// Boolean that specifies whether phone authentication is enabled for the account.
@property (nonatomic) BOOL allowPhoneAuthentication;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowPhoneAuthenticationMetadata;
/// Boolean that specifies whether users can override phone authentication.
@property (nonatomic) BOOL allowPhoneAuthOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowPhoneAuthOverrideMetadata;
/// Reserved for DocuSign. This property returns the value <em>false</em> when listing account settings. This property is read-only.
@property (nonatomic) BOOL allowPrivateSigningGroups;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowPrivateSigningGroupsMetadata;
@property (nonatomic) BOOL allowRecipientConnect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowRecipientConnectMetadata;
/// When <em>true,</em> an account administrator can to turn on reminders and expiration defaults for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowReminders;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowRemindersMetadata;
@property (nonatomic) BOOL allowRemoteNotary;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowRemoteNotaryMetadata;
/// When <em>true,</em> resource files can be uploaded in branding.
@property (nonatomic) BOOL allowResourceFileBranding;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowResourceFileBrandingMetadata;
/// When <em>true,</em> account administrators can specify that signers are required to use SAFE-BioPharma digital signatures.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowSafeBioPharmaSignerCertificate;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSafeBioPharmaSignerCertificateMetadata;
/// &quot;true&quot; if the account has permission to use the scheduled sending feature to send envelopes at a specified datetime in the future, &quot;false&quot; otherwise.
@property (nonatomic) BOOL allowScheduledSending;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowScheduledSendingMetadata;
/// Boolean that specifies whether a DocuSign Signature Appliance can be used with the account.
@property (nonatomic) BOOL allowSecurityAppliance;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSecurityApplianceMetadata;
/// When <em>true,</em> the account admin can enable the Send to Certified Delivery feature on the account.
@property (nonatomic) BOOL allowSendToCertifiedDelivery;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSendToCertifiedDeliveryMetadata;
/// When <em>true,</em> the account admin can enable the Send to Intermediary feature on the account.
@property (nonatomic) BOOL allowSendToIntermediary;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSendToIntermediaryMetadata;
/// When <em>true,</em> the account can use templates.
@property (nonatomic) BOOL allowServerTemplates;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowServerTemplatesMetadata;
@property (nonatomic) BOOL allowSetEmbeddedRecipientStartURL;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSetEmbeddedRecipientStartURLMetadata;
/// When <em>true,</em> shared tabs are enabled for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowSharedTabs;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSharedTabsMetadata;
/// When <em>true,</em> Signature Stamps are enabled.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowSignatureStamps;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSignatureStampsMetadata;
/// When <em>true,</em> recipients can sign documents from the home page.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowSignDocumentFromHomePage;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSignDocumentFromHomePageMetadata;
/// When <em>true,</em> the recipient of an envelope sent from this account can reassign it to another person.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowSignerReassign;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSignerReassignMetadata;
/// When <em>true,</em> an account administrator can override the ability of an envelope recipient to reassign it to another person.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowSignerReassignOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSignerReassignOverrideMetadata;
/// Boolean that specifies whether Signing and App Extensions are allowed.
@property (nonatomic) BOOL allowSigningExtensions;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSigningExtensionsMetadata;
/// When <em>true,</em> the account allows signing groups. This setting is only shown in responses that list account settings. This property is read-only.
@property (nonatomic) BOOL allowSigningGroups;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSigningGroupsMetadata;
@property (nonatomic) BOOL allowSigningInsights;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSigningInsightsMetadata;
/// Boolean that specifies whether the account supports radio buttons on tabs <a href="/docs/esign-soap-api/reference/sending-group/tab/">Radio CustomTabType</a>.
@property (nonatomic) BOOL allowSigningRadioDeselect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSigningRadioDeselectMetadata;
/// When <em>true,</em> the account administrator can enable the Sign Now feature.
@property (nonatomic) BOOL allowSignNow;
/// Metadata that indicates whether the `allowSignNow` property is editable.
@property (nonatomic, copy) NSString * _Nullable allowSignNowMetadata;
@property (nonatomic) BOOL allowSMSDelivery;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSMSDeliveryMetadata;
/// Deprecated.
@property (nonatomic) BOOL allowSocialIdLogin;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSocialIdLoginMetadata;
/// When <em>true,</em> this user can include supplemental documents.
@property (nonatomic) BOOL allowSupplementalDocuments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSupplementalDocumentsMetadata;
@property (nonatomic) BOOL allowUsersToAccessDirectory;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowUsersToAccessDirectoryMetadata;
@property (nonatomic) BOOL allowValueInsights;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowValueInsightsMetadata;
/// This property determines how template anchor tabs are applied.  Valid values are:  - `document`: Anchor tabs are applied only to the document that you specify.  - `envelope`: Anchor tabs are applied to all of the documents in the envelope associated with the template.  <em>Note:</em> When you are using the `anchorPopulationScope` property with a Composite Template, the value `document` is supported only with a single server template and a single inline template.
@property (nonatomic, copy) NSString * _Nullable anchorPopulationScope;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable anchorPopulationScopeMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL anchorTagVersionedPlacementEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable anchorTagVersionedPlacementMetadataEnabled;
/// When <em>true,</em> envelope documents are included as a PDF file attachment to &quot;signing completed&quot; emails.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL attachCompletedEnvelope;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable attachCompletedEnvelopeMetadata;
/// Sets when authentication checks are applied for recipient envelope access. This setting only applies to the following ID checks:   - Phone Authentication - SMS Authentication - Knowledge-Based ID  This setting takes one of the following options:   - `initial_access`: The authentication check always applies the first time a recipient accesses the documents. Recipients are not asked to authenticate again when they access the documents from the same browser on the same device. If the recipient attempts to access the documents from a different browser or a different device, the recipient must pass authentication again. Once authenticated, that recipient is not challenged again on the new device or browser. The ability for a recipient to skip authentication for documents is limited to documents sent from the same sending account. - `each_access`: Authentication checks apply every time a recipient attempts to access the envelope. However, you can configure the Authentication Expiration setting to allow recipients to skip authentication when they have recently passed authentication by setting a variable time frame.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable authenticationCheck;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable authenticationCheckMetadata;
/// Specifies how auto-navigation works. Valid values are:  - `off` - `required_fields` - `required_and_blank_fields` - `all_fields` - `page_then_required_fields` - `page_then_required_and_blank_fields` - `page_then_all_fields`
@property (nonatomic, copy) NSString * _Nullable autoNavRule;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable autoNavRuleMetadata;
/// Boolean that specifies whether to automatically provision a user membership in the account for accountless recipients. (Also known as Just-in-Time provisioning.)
@property (nonatomic) BOOL autoProvisionSignerAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable autoProvisionSignerAccountMetadata;
/// Boolean that specifies whether BCC for Email Archive is enabled for the account. BCC for Email Archive allows you to set up an archive email address so that a BCC copy of an envelope is sent only to that address.
@property (nonatomic) BOOL bccEmailArchive;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable bccEmailArchiveMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable betaSwitchConfiguration;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable betaSwitchConfigurationMetadata;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable billingAddressMetadata;
/// When <em>true,</em> this user can use the bulk send feature for the account.
@property (nonatomic) BOOL bulkSend;
@property (nonatomic, copy) NSString * _Nullable bulkSendMaxCopiesInBatch;
@property (nonatomic, copy) NSString * _Nullable bulkSendMaxUnprocessedEnvelopesCount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable bulkSendMetadata;
/// When <em>true,</em> account administrators can self-brand their sending console through the DocuSign console.
@property (nonatomic) BOOL canSelfBrandSend;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canSelfBrandSendMetadata;
/// When <em>true,</em> account administrators can self-brand their signing console through the DocuSign console.
@property (nonatomic) BOOL canSelfBrandSign;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canSelfBrandSignMetadata;
@property (nonatomic) BOOL canUseSalesforceOAuth;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canUseSalesforceOAuthMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable captureVoiceRecording;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable captureVoiceRecordingMetadata;
@property (nonatomic) BOOL cfr21SimplifiedSigningEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable cfr21SimplifiedSigningEnabledMetadata;
/// Boolean that specifies whether to use a shorter/wider format when generating the CFR Part 11 signature image.
@property (nonatomic) BOOL cfrUseWideImage;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable cfrUseWideImageMetadata;
@property (nonatomic) BOOL checkForMultipleAdminsOnAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable checkForMultipleAdminsOnAccountMetadata;
/// Boolean that specifies whether the signers of the envelopes from this account use a signature with a DocuSign chrome around it or not.
@property (nonatomic) BOOL chromeSignatureEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable chromeSignatureEnabledMetadata;
/// When <em>true,</em> the text of comments is included in email notifications when a comment is posted.  <em>Note:</em>  If the envelope requires additional recipient authentication, comment text is not included.
@property (nonatomic) BOOL commentEmailShowMessageText;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable commentEmailShowMessageTextMetadata;
/// When <em>true</em> and comments are enabled for the account, senders can disable comments for an envelope through the <em>Advanced Options</em> menu that appears during the sending process.
@property (nonatomic) BOOL commentsAllowEnvelopeOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable commentsAllowEnvelopeOverrideMetadata;
/// When <em>true,</em> conditional fields can be used in documents.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL conditionalFieldsEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable conditionalFieldsEnabledMetadata;
/// Speficies how often to display the consumer disclosure.  Valid values are:  - `once`: Per account, the supplemental document is displayed once only per `userId`.  - `always`: Per envelope, the supplemental document is displayed once only per `userId`.  - `each_access`: Per envelope, the supplemental document is displayed once only per `recipientId`.
@property (nonatomic, copy) NSString * _Nullable consumerDisclosureFrequency;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable consumerDisclosureFrequencyMetadata;
/// Boolean that specifies whether to enable PDF form fields to get converted to DocuSign secure fields when the document is added or uploaded to an envelope.
@property (nonatomic) BOOL convertPdfFields;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable convertPdfFieldsMetadata;
/// Specifies how data is shared for tabs with the same tabLabel. Valid values are:  - `document`: Tabs in a document with the same label populate with the same data. - `envelope`: Tabs in all documents in the envelope with the same label populate with the same data.  This setting applies to the following tab types:   - Check box  - Company - Data field - Drop-down list - Full name  - Formula - Note - Title  <em>Note:</em> Only Admin users can change this setting. Changing this setting affects envelopes that have been sent but not completed.
@property (nonatomic, copy) NSString * _Nullable dataPopulationScope;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable dataPopulationScopeMetadata;
@property (nonatomic) BOOL disableAutoTemplateMatching;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableAutoTemplateMatchingMetadata;
/// When <em>true,</em> the mobile app distributor key is prevented from connecting for account users.
@property (nonatomic) BOOL disableMobileApp;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableMobileAppMetadata;
/// When <em>true,</em> push notifications are disabled for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL disableMobilePushNotifications;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableMobilePushNotificationsMetadata;
/// When <em>true,</em> sending from a mobile application is disabled.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL disableMobileSending;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableMobileSendingMetadata;
/// When <em>true,</em> account users cannot be logged into multiple sessions at the same time.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL disableMultipleSessions;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableMultipleSessionsMetadata;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disablePurgeNotificationsForSenderMetadata;
/// When <em>true,</em> signers cannot view certificates of completion.
@property (nonatomic) BOOL disableSignerCertView;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableSignerCertViewMetadata;
/// When <em>true,</em> signers cannot view envelope history.
@property (nonatomic) BOOL disableSignerHistoryView;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableSignerHistoryViewMetadata;
/// When <em>true,</em> the <em>Select Style</em> option is hidden from signers and they must draw their signature instead.
@property (nonatomic) BOOL disableStyleSignature;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableStyleSignatureMetadata;
/// When <em>true,</em> signers cannot upload custom image files of their signature and initials.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL disableUploadSignature;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableUploadSignatureMetadata;
/// When <em>true,</em> the User Sharing feature is disabled for the account.
@property (nonatomic) BOOL disableUserSharing;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableUserSharingMetadata;
/// Boolean that specifies whether to display a Beta switch for your app.
@property (nonatomic, copy) NSString * _Nullable displayBetaSwitch;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable displayBetaSwitchMetadata;
/// Sets the account document upload restriction for non-account administrators. Valid values are:  - `no_restrictions`: There are no restrictions on the type of documents that can be uploaded. - `allow_pdf_only`: Non-administrators can only upload PDF files. - `no_upload`: Non-administrators cannot upload files.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable documentConversionRestrictions;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable documentConversionRestrictionsMetadata;
/// Sets a document retention period, which controls the number of days that DocuSign retains documents after they have reached a completed,declined, or voided state. When document retention is enabled for the account, the default value is `356` days.
@property (nonatomic, copy) NSString * _Nullable documentRetention;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable documentRetentionMetadata;
/// When <em>true</em> and `documentRetention` is set, document fields and metadata are also purged after the document retention period ends. The default value is <em>false.</em>  <em>Note:</em> Only Admins can change this setting.
@property (nonatomic) BOOL documentRetentionPurgeTabs;
/// Configures the Document Visibility feature for the account. Valid values are:  - `Off`: Document Visibility is not active for the account. - `MustSignToViewUnlessSenderAccount`: Document Visibility is enabled for all envelopes sent from the account. Any member of the sending account can view all of the documents in an envelope. - `MustSignToViewUnlessSender`: Document Visibility is enabled for all envelopes sent from the account. Only the sender can view all of the documents in an envelope. - `SenderCanSetMustSignToViewUnlessSenderAccount`: The sender has the option to enable Document Visibility for an envelope. When enabled for an envelope, all of the documents within it are still visible to any member of the sending account. Vd- `SenderCanSetMustSignToViewUnlessSender`: The sender has the option to enable Document Visibility for an envelope. When enabled for an envelope, all of the documents in the envelope are visible only to the sender.  <em>Note:</em> For this configuration to take effect, `allowDocumentVisibility` must be set to <em>true.</em>
@property (nonatomic, copy) NSString * _Nullable documentVisibility;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable documentVisibilityMetadata;
@property (nonatomic, copy) NSString * _Nullable dssSIGN28411EnableLeavePagePromptRadminOption;
@property (nonatomic, copy) NSString * _Nullable dssSIGN29182SlideUpBarRadminOption;
/// Specifies the version of the email templates used in an account. If new signing is selected in a member's Admin page, the user is updated to the newest version (1.1), the minimum version of email supported for the account.
@property (nonatomic, copy) NSString * _Nullable emailTemplateVersion;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable emailTemplateVersionMetadata;
/// When <em>true,</em> enables Access Code Generator on the account.
@property (nonatomic) BOOL enableAccessCodeGenerator;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableAccessCodeGeneratorMetadata;
/// When <em>true,</em> enables Advanced Payments for the account.
@property (nonatomic) BOOL enableAdvancedPayments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableAdvancedPaymentsMetadata;
/// When <em>true,</em> enables advanced PowerForms for the account.
@property (nonatomic) BOOL enableAdvancedPowerForms;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableAdvancedPowerFormsMetadata;
@property (nonatomic) BOOL enableAgreementActionsForCLM;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableAgreementActionsForCLMMetadata;
@property (nonatomic) BOOL enableAgreementActionsForESign;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableAgreementActionsForESignMetadata;
/// When <em>true,</em> enables the account to set the AutoNav rule setting, which enables a sender to override the auto-navigation setting per envelope.  <em>Note:</em> To change this setting, you must be a SysAdmin user or `EnableAutoNavByDSAdmin must be set.
@property (nonatomic) BOOL enableAutoNav;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableAutoNavMetadata;
@property (nonatomic) BOOL enableBccDummyLink;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableBccDummyLinkMetadata;
/// When <em>true,</em> calculated fields are enabled for the account.   <em>Note:</em> This setting can be changed only by Admin users, and only if the account-level setting `allowExpression` is set to <em>true.</em>
@property (nonatomic) BOOL enableCalculatedFields;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableCalculatedFieldsMetadata;
/// Boolean that specifies whether clickwraps are enabled in your app. A <a href="/docs/click-api/click101/">clickwrap</a> is an iframe that you embed in your own website or app.
@property (nonatomic) BOOL enableClickwraps;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableClickwrapsMetadata;
@property (nonatomic) BOOL enableCommentsHistoryDownloadInSigning;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableCommentsHistoryDownloadInSigningMetadata;
/// When <em>true,</em> enables customer satisfaction metric tracking for the account.
@property (nonatomic) BOOL enableCustomerSatisfactionMetricTracking;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableCustomerSatisfactionMetricTrackingMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL enableDSPro;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableDSProMetadata;
/// When <em>true,</em> enables the account administrator to control envelope stamping for an account (stamping the `envelopeId` in the the document margins).  <em>Note:</em> This setting can be changed only by Admin users, and only if the account-level setting `enableEnvelopeStampingByDSAdmin` is set to <em>true.</em>
@property (nonatomic) BOOL enableEnvelopeStampingByAccountAdmin;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableEnvelopeStampingByAccountAdminMetadata;
/// When <em>true,</em> enables the DocuSign administrator to control envelope stamping for an account (placement of the `envelopeId`).
@property (nonatomic) BOOL enableEnvelopeStampingByDSAdmin;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableEnvelopeStampingByDSAdminMetadata;
@property (nonatomic) BOOL enableEsignCommunities;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableEsignCommunitiesMetadata;
@property (nonatomic) BOOL enableIDFxIntuitKBA;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableIDFxIntuitKBAMetadata;
@property (nonatomic) BOOL enableIDFxPhoneAuthentication;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableIDFxPhoneAuthenticationMetadata;
@property (nonatomic) BOOL enableInBrowserEditor;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableInBrowserEditorMetadata;
/// When <em>true,</em> payment processing is enabled for this account.  <em>Note:</em> This setting can be changed only by Admin users, and only if the account-level setting `allowPaymentProcessing` is set.
@property (nonatomic) BOOL enablePaymentProcessing;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enablePaymentProcessingMetadata;
@property (nonatomic) BOOL enablePDFAConversion;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enablePDFAConversionMetadata;
/// When <em>true,</em> enables PowerForms for the account.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enablePowerForm;
/// When <em>true,</em> enables direct PowerForms for an account. Direct PowerForms are in-session PowerForms.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enablePowerFormDirect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enablePowerFormDirectMetadata;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enablePowerFormMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL enableRecipientDomainValidation;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableRecipientDomainValidationMetadata;
@property (nonatomic) BOOL enableRecipientMayProvidePhoneNumber;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableRecipientMayProvidePhoneNumberMetadata;
/// Enables direct links to envelopes in reports for administrators in the following scopes: - `NoEnvelopes` - `AllEnvelopes` - `OnlyOwnEnvelopes`
@property (nonatomic) BOOL enableReportLinks;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableReportLinksMetadata;
/// When <em>true,</em> the account can use the `requireSignOnPaper` option.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableRequireSignOnPaper;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableRequireSignOnPaperMetadata;
/// When <em>true,</em> account administrators can reserve a web domain and users. Domains are organization-specific reserved internet domains, such as `@exampledomain.com`. You can define policy settings for users of each reserved domain within your organization, export lists of domain users for audit purposes, and manage domain users.  - Domains may be claimed by an organization. - When a domain is claimed by an organization, all users within that domain are added to the organization, even if they have trial or free accounts. - You can set domain controls for all users of the domain. - You can export information about your organization’s users that are associated with your reserved domains.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enableReservedDomain;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableReservedDomainMetadata;
/// When <em>true,</em> enables responsive signing.
@property (nonatomic) BOOL enableResponsiveSigning;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableResponsiveSigningMetadata;
/// When <em>true,</em> scheduled releases are enabled. The default value is <em>false.</em>
@property (nonatomic) BOOL enableScheduledRelease;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableScheduledReleaseMetadata;
@property (nonatomic) BOOL enableSearch;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSearchMetadata;
@property (nonatomic) BOOL enableSearchUI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSearchUIMetadata;
/// When <em>true,</em> enables fonts to be set on tags for the account.
@property (nonatomic) BOOL enableSendingTagsFontSettings;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSendingTagsFontSettingsMetadata;
/// When <em>true,</em> this account can use the Agent recipient type.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enableSendToAgent;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSendToAgentMetadata;
/// When <em>true,</em> this account can use the Intermediary recipient type.  <em>Note:</em> Only Admin users can change this setting, and only if `allowSendToIntermediary` is set.
@property (nonatomic) BOOL enableSendToIntermediary;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSendToIntermediaryMetadata;
/// When <em>true,</em> this account can use the Editor recipient type.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSendToManage;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSendToManageMetadata;
/// When <em>true,</em> the account can define the routing order of recipients for envelopes sent by using the eSignature API.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enableSequentialSigningAPI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSequentialSigningAPIMetadata;
/// When <em>true,</em> the account can define the routing order of recipients for envelopes sent by using the DocuSign application.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enableSequentialSigningUI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSequentialSigningUIMetadata;
/// When <em>true,</em> users can use the signing attachments feature to request attachments from signers.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSignerAttachments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSignerAttachmentsMetadata;
/// When <em>true,</em> enables comments for the account so that signers and recipients can make and respond to comments in documents belonging to the envelopes that they are sent.
@property (nonatomic) BOOL enableSigningExtensionComments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSigningExtensionCommentsMetadata;
/// When <em>true,</em> enables conversation functionality.
@property (nonatomic) BOOL enableSigningExtensionConversations;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSigningExtensionConversationsMetadata;
/// When <em>true,</em> switches Signing Order to On by default for new envelopes.
@property (nonatomic) BOOL enableSigningOrderSettingsForAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSigningOrderSettingsForAccountMetadata;
/// When <em>true,</em> a sender can allow signers to use the sign on paper option.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSignOnPaper;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSignOnPaperMetadata;
/// When <em>true,</em> a user can override the default default account setting for the Sign on Paper option, which specifies whether signers can sign documents on paper as an option to signing electronically.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSignOnPaperOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSignOnPaperOverrideMetadata;
/// When <em>true,</em> Sign with Notary functionality is enabled for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSignWithNotary;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSignWithNotaryMetadata;
/// When <em>true,</em> blockchain-based <a href="https://www.docusign.com/products/blockchain">Smart Contracts</a> are enabled. The default value is <em>false.</em>
@property (nonatomic) BOOL enableSmartContracts;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSmartContractsMetadata;
/// When <em>true,</em> the account can use SMS authentication.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSMSAuthentication;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSMSAuthenticationMetadata;
@property (nonatomic) BOOL enableSMSDeliveryAdditionalNotification;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSMSDeliveryAdditionalNotificationMetadata;
@property (nonatomic) BOOL enableSMSDeliveryPrimary;
/// Deprecated.
@property (nonatomic) BOOL enableSocialIdLogin;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSocialIdLoginMetadata;
/// When <em>true,</em> enables strikethrough formatting in documents.
@property (nonatomic) BOOL enableStrikeThrough;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableStrikeThroughMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL enableTransactionPoint;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableTransactionPointMetadata;
/// When <em>true,</em> Vaulting is enabled for the account.
@property (nonatomic) BOOL enableVaulting;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableVaultingMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL enableWitnessing;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableWitnessingMetadata;
/// When <em>true,</em> the template name must be unique.
@property (nonatomic) BOOL enforceTemplateNameUniqueness;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enforceTemplateNameUniquenessMetadata;
/// Shows the envelope integration rule for the account, which indicates whether custom admins can enable Connect for their accounts. Enumeration values are:   - `not_allowed` - `full`   <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable envelopeIntegrationAllowed;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable envelopeIntegrationAllowedMetadata;
/// When <em>true,</em> enables Connect for an account. Note that Connect integration requires additional configuration that must be set up for it to take effect; this switch is only the on/off control for the account.  <em>Note:</em> Only Admin users can change this setting, and only when `envelopeIntegrationAllowed` is set.
@property (nonatomic) BOOL envelopeIntegrationEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable envelopeIntegrationEnabledMetadata;
/// When <em>true,</em> envelopes sent by this account automatically have the envelope ID stamped in the document margins, unless the sender selects not to have the documents stamped.
@property (nonatomic) BOOL envelopeStampingDefaultValue;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable envelopeStampingDefaultValueMetadata;
@property (nonatomic, copy) NSString * _Nullable exitPrompt;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable exitPromptMetadata;
/// Boolean that specifies whether a member of an account can express send (without tags) or must send with tags on documents.
@property (nonatomic) BOOL expressSend;
/// Boolean that specifies whether a member of an account can send templates without the tags being stripped out, even when the account is configured to let its users express send only (they cannot use the tagger).
@property (nonatomic) BOOL expressSendAllowTabs;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable expressSendAllowTabsMetadata;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable expressSendMetadata;
/// Specifies the signature pad type. Valid values are:  - `none` - `topaz` - `e_padv9` - `e_pad_integrisign` - `topaz_sigplusextlite`  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable externalSignaturePadType;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable externalSignaturePadTypeMetadata;
/// When <em>true,</em> fax delivery to recipients is allowed for the account.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL faxOutEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable faxOutEnabledMetadata;
@property (nonatomic, copy) NSString * _Nullable finishReminder;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable finishReminderMetadata;
/// When <em>true,</em> HTML used to implement <a href="https://www.docusign.com/products/guided-forms">Guided Forms</a> is enabled for the account.
@property (nonatomic) BOOL guidedFormsHtmlAllowed;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable guidedFormsHtmlAllowedMetadata;
@property (nonatomic, copy) NSString * _Nullable hasRecipientConnectClaimedDomain;
/// Boolean that specifies whether to hide the account address in the Certificate of Completion.
@property (nonatomic) BOOL hideAccountAddressInCoC;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable hideAccountAddressInCoCMetadata;
/// Boolean that specifies whether to hide the pricing functionality for an account.
@property (nonatomic) BOOL hidePricing;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable hidePricingMetadata;
/// Determines when a user's authentication with the account expires. Valid values are:  - `always`: Users are required to authenticate each time. - `variable`: If the authentication for a user is valid and falls within the value for the `idCheckExpireDays` property, the user is not required to authenticate again.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable idCheckExpire;
/// The number of days before user authentication credentials expire. A value of `0` specifies that users must re-authenticate for each new session.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable idCheckExpireDays;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable idCheckExpireDaysMetadata;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable idCheckExpireMetadata;
/// The number of minutes before user authentication credentials expire.
@property (nonatomic, copy) NSString * _Nullable idCheckExpireMinutes;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable idCheckExpireMinutesMetadata;
/// Indicates if authentication is configured for the account. Valid values are:  - `always`: Authentication checks are performed on every envelope. - `never`: Authentication checks are not performed on any envelopes. - `optional`: Authentication is configurable per envelope.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable idCheckRequired;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable idCheckRequiredMetadata;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable identityVerificationMetadata;
@property (nonatomic, copy) NSString * _Nullable idfxPhoneAuthenticationOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable idfxPhoneAuthenticationOverrideMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable ignoreErrorIfAnchorTabNotFound;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable ignoreErrorIfAnchorTabNotFoundMetadataEnabled;
/// A text field containing the question that an in-person signing host uses to collect personal information from the recipient. The recipient's response to this question is saved and can be viewed in the certificate associated with the envelope.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable inPersonIDCheckQuestion;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable inPersonIDCheckQuestionMetadata;
/// When <em>true,</em> in-person signing is enabled for the account.
@property (nonatomic) BOOL inPersonSigningEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable inPersonSigningEnabledMetadata;
/// When <em>true,</em> the account can send in-session (embedded) envelopes.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL inSessionEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable inSessionEnabledMetadata;
/// When <em>true,</em> emails are not sent to the in-session (embedded) recipients on an envelope.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL inSessionSuppressEmails;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable inSessionSuppressEmailsMetadata;
/// The maximum number of signing groups allowed on the account. The default value is `50`. This setting is only shown in responses that list account settings.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable maximumSigningGroups;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable maximumSigningGroupsMetadata;
/// The maximum number of users per signing group. The default value is `50`. This setting is only shown in responses that list account settings.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable maximumUsersPerSigningGroup;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable maximumUsersPerSigningGroupMetadata;
/// The maximum number of custom stamps.
@property (nonatomic, copy) NSString * _Nullable maxNumberOfCustomStamps;
/// The number of minutes of inactivity before a mobile user is automatically logged out of the system. Valid values are `1` to `120` minutes. The default value is `20` minutes.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable mobileSessionTimeout;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable mobileSessionTimeoutMetadata;
/// The number of active custom stamps associated with the account. DocuSign calculates this number automatically. This property is only visible to the DocuSign account manager.
@property (nonatomic, copy) NSString * _Nullable numberOfActiveCustomStamps;
/// Boolean that specifies whether to opt in for Signing v02 on Mobile Devices functionality.
@property (nonatomic) BOOL optInMobileSigningV02;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable optInMobileSigningV02Metadata;
/// Boolean that allows envelope senders to opt out of the recipient signing auto-navigation feature and opt out of updating tab font color.
@property (nonatomic) BOOL optOutAutoNavTextAndTabColorUpdates;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable optOutAutoNavTextAndTabColorUpdatesMetadata;
/// Boolean that specifies whether to allow envelope senders to opt out of using the new platform seal.
@property (nonatomic) BOOL optOutNewPlatformSeal;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable optOutNewPlatformSealPlatformMetadata;
/// When <em>true,</em> senders can allow recipients to provide a phone number for the Phone Authentication process.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL phoneAuthRecipientMayProvidePhoneNumber;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable phoneAuthRecipientMayProvidePhoneNumberMetadata;
/// The policy for adding a digital certificate to downloaded, printed, and emailed documents.   Possible values are:   - `no_sign` - `no_sign_allow_user_override` - `yes_sign` (Specifies that PDF files downloaded from the platform are signed.)  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable pkiSignDownloadedPDFDocs;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable pkiSignDownloadedPDFDocsMetadata;
@property (nonatomic, copy) NSString * _Nullable readOnlyMode;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable readOnlyModeMetadata;
/// When <em>true,</em> recipients receiving envelopes from this account can sign offline.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL recipientsCanSignOffline;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable recipientsCanSignOfflineMetadata;
/// When <em>true,</em> recipients receiving envelopes from this account can override auto-navigation functionality.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL recipientSigningAutoNavigationControl;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable recipientSigningAutoNavigationControlMetadata;
/// When <em>true,</em> recipients are required to use a 21 CFR part 11-compliant signing experience.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL require21CFRpt11Compliance;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable require21CFRpt11ComplianceMetadata;
/// When <em>true,</em> signers who decline to sign an envelope sent from this account are required to provide a reason for declining.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL requireDeclineReason;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable requireDeclineReasonMetadata;
/// When <em>true,</em> the account requires external management of users.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL requireExternalUserManagement;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable requireExternalUserManagementMetadata;
/// Sets the Digital Signature certificate requirements for sending envelopes. Valid values are:  - `none`: A Digital Signature certificate is not required. - `docusign_express`: Signers must use a DocuSign Express certificate. - `docusign_personal`: Signers must use a DocuSign personal certificate. - `safe` - `open_trust`: Signers must use an OpenTrust certificate.
@property (nonatomic, copy) NSString * _Nullable requireSignerCertificateType;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable requireSignerCertificateTypeMetadata;
/// The RSA account name.  <em>Note:</em> Only Admin users can change this setting. Modifying this value may disrupt your ID Check capability. Ensure you have the correct value before changing it.
@property (nonatomic, copy) NSString * _Nullable rsaVeridAccountName;
/// The password for the RSA account.   <em>Note:</em> Only Admin users can change this setting. Modifying this value may disrupt your ID Check capability. Ensure you have the correct value before changing it.
@property (nonatomic, copy) NSString * _Nullable rsaVeridPassword;
/// The RSA rule set used with the account.  <em>Note:</em> Only Admin users can change this setting. Modifying this value may disrupt your ID Check capability. Ensure you have the correct value before changing it.
@property (nonatomic, copy) NSString * _Nullable rsaVeridRuleset;
/// The user ID for the RSA account.  <em>Note:</em> Only Admin users can change this setting. Modifying this value may disrupt your ID Check capability. Ensure you have the correct value before changing it.
@property (nonatomic, copy) NSString * _Nullable rsaVeridUserId;
/// Sets how self-signed documents are presented to the email recipients. Valid values are:  - `include_pdf`: A PDF of the completed document is attached to the email. - `include_link`: A secure link to the self-signed documents is included    in the email.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable selfSignedRecipientEmailDocument;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable selfSignedRecipientEmailDocumentMetadata;
/// When <em>true,</em> the `selfSignedRecipientEmailDocument` user setting can be set for an individual user. The user setting overrides the account setting.  <em>Note:</em> Only Admin users can change this account setting.
@property (nonatomic) BOOL selfSignedRecipientEmailDocumentUserOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable selfSignedRecipientEmailDocumentUserOverrideMetadata;
/// When <em>true,</em> a signer can draw their signature in each location where a sign or initial tab exists. This functionality is typically used for mobile signing.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL senderCanSignInEachLocation;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable senderCanSignInEachLocationMetadata;
/// When <em>true,</em> a sender who is also a recipient of an envelope must follow the authentication requirements for the envelope.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL senderMustAuthenticateSigning;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable senderMustAuthenticateSigningMetadata;
/// The account-wide default font color to use for the content of the tab.  Valid values are:  - `Black` - `BrightBlue` - `BrightRed` - `DarkGreen` - `DarkRed` - `Gold` - `Green` - `NavyBlue` - `Purple` - `White`
@property (nonatomic, copy) NSString * _Nullable sendingTagsFontColor;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sendingTagsFontColorMetadata;
/// The account-wide default font to be used for the tab value. Supported fonts include:  - `Default` - `Arial` - `ArialNarrow` - `Calibri` - `CourierNew` - `Garamond` - `Georgia` - `Helvetica` - `LucidaConsole` - `MSGothic` - `MSMincho` - `OCR-A` - `Tahoma` - `TimesNewRoman` - `Trebuchet` - `Verdana`
@property (nonatomic, copy) NSString * _Nullable sendingTagsFontName;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sendingTagsFontNameMetadata;
/// The account-wide default font size used for the information in the tab:  - `Size7` - `Size8` - `Size9` - `Size10` - `Size11` - `Size12` - `Size14` - `Size16` - `Size18` - `Size20` - `Size22` - `Size24` - `Size26` - `Size28` - `Size36` - `Size48` - `Size72`
@property (nonatomic, copy) NSString * _Nullable sendingTagsFontSize;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sendingTagsFontSizeMetadata;
@property (nonatomic, copy) NSString * _Nullable sendLockoutRecipientNotification;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sendLockoutRecipientNotificationMetadata;
/// When true, the account can use the certified deliveries recipient type.
@property (nonatomic) BOOL sendToCertifiedDeliveryEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sendToCertifiedDeliveryEnabledMetadata;
/// The amount of idle activity time, in minutes, before a user is automatically logged out of the system. The minimum setting is 20 minutes and the maximum setting is 120 minutes.
@property (nonatomic, copy) NSString * _Nullable sessionTimeout;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sessionTimeoutMetadata;
/// When <em>true,</em> senders can set the email language to use for each recipient.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL setRecipEmailLang;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable setRecipEmailLangMetadata;
/// When <em>true,</em> setting a unique language for a recipient not only affects the email language, but also the signing language they are presented with. When <em>false,</em> only the email will be affected when the sender specifies a unique language for a recipient.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL setRecipSignLang;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable setRecipSignLangMetadata;
/// Boolean that specifies whether an account can use Shared Template Folders.
@property (nonatomic) BOOL sharedTemplateFolders;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable sharedTemplateFoldersMetadata;
/// Boolean that specifies whether complete dialogs are displayed directly within an application in embedded signing sessions.
@property (nonatomic) BOOL showCompleteDialogInEmbeddedSession;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable showCompleteDialogInEmbeddedSessionMetadata;
/// When <em>true,</em> Conditional Routing options display to senders during the sending experience.
@property (nonatomic) BOOL showConditionalRoutingOnSend;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable showConditionalRoutingOnSendMetadata;
/// Boolean that specifies whether conditional field options are initially displayed (before a user makes entries).
@property (nonatomic) BOOL showInitialConditionalFields;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable showInitialConditionalFieldsMetadata;
/// Boolean that specifies whether localized watermarks are displayed.
@property (nonatomic) BOOL showLocalizedWatermarks;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable showLocalizedWatermarksMetadata;
@property (nonatomic) BOOL showMaskedFieldsWhenDownloadingDocumentAsSender;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable showMaskedFieldsWhenDownloadingDocumentAsSenderMetadata;
/// When <em>true,</em> show tutorials.
@property (nonatomic) BOOL showTutorials;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable showTutorialsMetadata;
/// Names of electronic or digital signature providers that can be used.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable signatureProviders;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signatureProvidersMetadata;
/// The format for the signature date. Valid values are:  - `d/M/yyyy` - `dd-MM-yy` - `dd-MMM-yy` - `dd-MM-yyyy` - `dd.MM.yyyy` - `dd-MMM-yyyy` - `dd MMMM yyyy` - `M/d/yyyy` - `MM-dd-yyyy` - `MM/dd/yyyy` - `MM/dd/yy` - `MMM-dd-yyyy` - `MMM d, yyyy` - `MMMM d, yyyy` - `yyyy-MM-dd` - `yyyy-MMM-dd` - `yyyy/MM/dd` - `yyyy MMMM d`  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable signDateFormat;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signDateFormatMetadata;
@property (nonatomic, copy) NSString * _Nullable signDateTimeAccountLanguageOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signDateTimeAccountLanguageOverrideMetadata;
@property (nonatomic, copy) NSString * _Nullable signDateTimeAccountTimezoneOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signDateTimeAccountTimezoneOverrideMetadata;
/// When <em>true,</em> the Certificate of Completion is included in the PDF of the envelope documents when it is downloaded.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerAttachCertificateToEnvelopePDF;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerAttachCertificateToEnvelopePDFMetadata;
/// When <em>true,</em> signer attachments are added to the parent document that contains the attachment. The default behavior creates a new document in the envelope for every signer attachment.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerAttachConcat;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerAttachConcatMetadata;
/// When <em>true,</em> a signer can create a DocuSign account after signing.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerCanCreateAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerCanCreateAccountMetadata;
/// When <em>true,</em> recipients can sign on a mobile device.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerCanSignOnMobile;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerCanSignOnMobileMetadata;
/// When <em>true,</em> an &quot;envelope complete&quot; email is sent to an in-session (embedded) or offline signer after DocuSign processes the envelope if in-session emails are not suppressed.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerInSessionUseEnvelopeCompleteEmail;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerInSessionUseEnvelopeCompleteEmailMetadata;
/// Sets the login requirements for signers. Valid values are:  - `login_not_required`: Signers are not required to log in. - `login_required_if_account_holder`: If the signer has a DocuSign account,   they must log in to sign the document. - `login_required_per_session`: The sender cannot send an envelope to anyone   who does not have a DocuSign account. - `login_required_per_envelope`: The sender cannot send an envelope to anyone   who does not have a DocuSign account, and the signer must also log in for   each envelope they will sign.   <em>Note:</em> Only Admin users can change this setting. If you use Direct PowerForms or captive (embedded signers), the &quot;Account required&quot; settings are bypassed for those signers. If your workflow requires that the signer have an account, you should not use those methods.
@property (nonatomic, copy) NSString * _Nullable signerLoginRequirements;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerLoginRequirementsMetadata;
/// When <em>true,</em> senders can only send an envelope to a recipient that has a DocuSign account.  <em>Note:</em> Only Account Administrators can change this setting.
@property (nonatomic) BOOL signerMustHaveAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerMustHaveAccountMetadata;
/// When <em>true,</em> signers must log in to the DocuSign platform to sign an envelope.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerMustLoginToSign;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerMustLoginToSignMetadata;
/// When <em>true,</em> the initial values of all SecureFields are written to the document when it is sent.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerShowSecureFieldInitialValues;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signerShowSecureFieldInitialValuesMetadata;
/// The number of minutes that a signing session stays alive without any activity.
@property (nonatomic, copy) NSString * _Nullable signingSessionTimeout;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signingSessionTimeoutMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable signingUiVersion;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signingUiVersionMetadata;
/// The format for the signature time. Valid values are:  - `none` - `HH:mm` - `h:mm` - `HH:mm:ss` - `h:mm:ss`
@property (nonatomic, copy) NSString * _Nullable signTimeFormat;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signTimeFormatMetadata;
/// When <em>true,</em> the time shows the AM or PM indicator.
@property (nonatomic) BOOL signTimeShowAmPm;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable signTimeShowAmPmMetadata;
/// When <em>true,</em> simplified sending is enabled for the account. The default value is <em>false.</em>
@property (nonatomic) BOOL simplifiedSendingEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable simplifiedSendingEnabledMetadata;
/// When <em>true,</em> single sign-on (SSO) is enabled.
@property (nonatomic) BOOL singleSignOnEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable singleSignOnEnabledMetadata;
/// When <em>true,</em> do not require authentication prompt for viewing completed envelopes
@property (nonatomic) BOOL skipAuthCompletedEnvelopes;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable skipAuthCompletedEnvelopesMetadata;
/// When <em>true,</em> recipients can use <a href="https://support.docusign.com/guides/signer-authentication">social ids</a> when signing
@property (nonatomic) BOOL socialIdRecipAuth;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable socialIdRecipAuthMetadata;
/// When <em>true,</em> senders can specify the visibility of the documents in an envelope at the recipient level.
@property (nonatomic) BOOL specifyDocumentVisibility;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable specifyDocumentVisibilityMetadata;
/// When <em>true,</em> when initiating correction of an in-flight envelope the sender starts in advanced correct mode.
@property (nonatomic) BOOL startInAdvancedCorrect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable startInAdvancedCorrectMetadata;
/// When <em>true,</em> account users must accept supplemental documents when signing.
@property (nonatomic) BOOL supplementalDocumentsMustAccept;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable supplementalDocumentsMustAcceptMetadata;
/// When <em>true,</em> account users must both view and accept supplemental documents when signing.
@property (nonatomic) BOOL supplementalDocumentsMustRead;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable supplementalDocumentsMustReadMetadata;
/// When <em>true,</em> account users must view supplemental documents when signing.
@property (nonatomic) BOOL supplementalDocumentsMustView;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable supplementalDocumentsMustViewMetadata;
/// Boolean that specifies whether or not API calls require a x509 cert in the header of the call.
@property (nonatomic) BOOL suppressCertificateEnforcement;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable suppressCertificateEnforcementMetadata;
/// Specifies the time zone to use with the API.  Valid values are:  - `TZ_01_AfghanistanStandardTime` - `TZ_02_AlaskanStandardTime` - `TZ_03_ArabStandardTime` - `TZ_04_ArabianStandardTime` - `TZ_05_ArabicStandardTime` - `TZ_06_ArgentinaStandardTime` - `TZ_07_AtlanticStandardTime` - `TZ_08_AUS_CentralStandardTime` - `TZ_09_AUS_EasternStandardTime` - `TZ_10_AzerbaijanStandardTime` - `TZ_11_AzoresStandardTime` - `TZ_12_BangladeshStandardTime` - `TZ_13_CanadaCentralStandardTime` - `TZ_14_CapeVerdeStandardTime` - `TZ_15_CaucasusStandardTime` - `TZ_16_CentralAustraliaStandardTime` - `TZ_17_CentralAmericaStandardTime` - `TZ_18_CentralAsiaStandardTime` - `TZ_19_CentralBrazilianStandardTime` - `TZ_20_CentralEuropeStandardTime` - `TZ_21_CentralEuropeanStandardTime` - `TZ_22_CentralPacificStandardTime` - `TZ_23_CentralStandardTime` - `TZ_24_CentralStandardTimeMexico` - `TZ_25_ChinaStandardTime` - `TZ_26_DatelineStandardTime` - `TZ_27_E_AfricaStandardTime` - `TZ_28_E_AustraliaStandardTime` - `TZ_29_E_EuropeStandardTime` - `TZ_30_E_SouthAmericaStandardTime` - `TZ_31_EasternStandardTime` - `TZ_32_EgyptStandardTime` - `TZ_33_EkaterinburgStandardTime` - `TZ_34_FijiStandardTime` - `TZ_35_FLE_StandardTime` - `TZ_36_GeorgianStandardTime` - `TZ_37_GMT_StandardTime` - `TZ_38_GreenlandStandardTime` - `TZ_39_GreenwichStandardTime` - `TZ_40_GTB_StandardTime` - `TZ_41_HawaiianStandardTime` - `TZ_42_IndiaStandardTime` - `TZ_43_IranStandardTime` - `TZ_44_IsraelStandardTime` - `TZ_45_JordanStandardTime` - `TZ_46_KaliningradStandardTime` - `TZ_47_KamchatkaStandardTime` - `TZ_48_KoreaStandardTime` - `TZ_49_MagadanStandardTime` - `TZ_50_MauritiusStandardTime` - `TZ_51_MidAtlanticStandardTime` - `TZ_52_MiddleEastStandardTime` - `TZ_53_MontevideoStandardTime` - `TZ_54_MoroccoStandardTime` - `TZ_55_MountainStandardTime` - `TZ_56_MountainStandardTimeMMexico` - `TZ_57_MyanmarStandardTime` - `TZ_58_N_CentralAsiaStandardTime` - `TZ_59_NamibiaStandardTime` - `TZ_60_NepalStandardTime` - `TZ_61_NewZealandStandardTime` - `TZ_62_NewfoundlandStandardTime` - `TZ_63_NorthAsiaEastStandardTime` - `TZ_64_NorthAsiaStandardTime` - `TZ_65_PacificSAStandardTime` - `TZ_66_PacificStandardTime` - `TZ_67_PacificStandardTimeMexico` - `TZ_68_PakistanStandardTime` - `TZ_69_ParaguayStandardTime` - `TZ_70_RomanceStandardTime` - `TZ_71_RussianStandardTime` - `TZ_72_SAEasternStandardTime` - `TZ_73_SAPacificStandardTime` - `TZ_74_SAWesternStandardTime` - `TZ_75_SamoaStandardTime` - `TZ_76_SE_AsiaStandardTime` - `TZ_77_SingaporeStandardTime` - `TZ_78_SouthAfricaStandardTime` - `TZ_79_SriLankaStandardTime` - `TZ_80_SyriaStandardTime` - `TZ_81_TaipeiStandardTime` - `TZ_82_TasmaniaStandardTime` - `TZ_83_TokyoStandardTime` - `TZ_84_TongaStandardTime` - `TZ_85_TurkeyStandardTime` - `TZ_86_UlaanbaatarStandardTime` - `TZ_87_US_EasternStandardTime` - `TZ_88_USMountainStandardTime` - `TZ_89_VenezuelaStandardTime` - `TZ_90_VladivostokStandardTime` - `TZ_91_W_AustraliaStandardTime` - `TZ_92_W_CentralAfricaStandardTime` - `TZ_93_W_EuropeStandardTime` - `TZ_94_WestAsiaStandardTime` - `TZ_95_WestPacificStandardTime` - `TZ_96_YakutskStandardTime`
@property (nonatomic, copy) NSString * _Nullable timezoneOffsetAPI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneOffsetAPIMetadata;
/// Specifies the time zone to use in the UI.  Valid values are:  - `TZ_01_AfghanistanStandardTime` - `TZ_02_AlaskanStandardTime` - `TZ_03_ArabStandardTime` - `TZ_04_ArabianStandardTime` - `TZ_05_ArabicStandardTime` - `TZ_06_ArgentinaStandardTime` - `TZ_07_AtlanticStandardTime` - `TZ_08_AUS_CentralStandardTime` - `TZ_09_AUS_EasternStandardTime` - `TZ_10_AzerbaijanStandardTime` - `TZ_11_AzoresStandardTime` - `TZ_12_BangladeshStandardTime` - `TZ_13_CanadaCentralStandardTime` - `TZ_14_CapeVerdeStandardTime` - `TZ_15_CaucasusStandardTime` - `TZ_16_CentralAustraliaStandardTime` - `TZ_17_CentralAmericaStandardTime` - `TZ_18_CentralAsiaStandardTime` - `TZ_19_CentralBrazilianStandardTime` - `TZ_20_CentralEuropeStandardTime` - `TZ_21_CentralEuropeanStandardTime` - `TZ_22_CentralPacificStandardTime` - `TZ_23_CentralStandardTime` - `TZ_24_CentralStandardTimeMexico` - `TZ_25_ChinaStandardTime` - `TZ_26_DatelineStandardTime` - `TZ_27_E_AfricaStandardTime` - `TZ_28_E_AustraliaStandardTime` - `TZ_29_E_EuropeStandardTime` - `TZ_30_E_SouthAmericaStandardTime` - `TZ_31_EasternStandardTime` - `TZ_32_EgyptStandardTime` - `TZ_33_EkaterinburgStandardTime` - `TZ_34_FijiStandardTime` - `TZ_35_FLE_StandardTime` - `TZ_36_GeorgianStandardTime` - `TZ_37_GMT_StandardTime` - `TZ_38_GreenlandStandardTime` - `TZ_39_GreenwichStandardTime` - `TZ_40_GTB_StandardTime` - `TZ_41_HawaiianStandardTime` - `TZ_42_IndiaStandardTime` - `TZ_43_IranStandardTime` - `TZ_44_IsraelStandardTime` - `TZ_45_JordanStandardTime` - `TZ_46_KaliningradStandardTime` - `TZ_47_KamchatkaStandardTime` - `TZ_48_KoreaStandardTime` - `TZ_49_MagadanStandardTime` - `TZ_50_MauritiusStandardTime` - `TZ_51_MidAtlanticStandardTime` - `TZ_52_MiddleEastStandardTime` - `TZ_53_MontevideoStandardTime` - `TZ_54_MoroccoStandardTime` - `TZ_55_MountainStandardTime` - `TZ_56_MountainStandardTimeMMexico` - `TZ_57_MyanmarStandardTime` - `TZ_58_N_CentralAsiaStandardTime` - `TZ_59_NamibiaStandardTime` - `TZ_60_NepalStandardTime` - `TZ_61_NewZealandStandardTime` - `TZ_62_NewfoundlandStandardTime` - `TZ_63_NorthAsiaEastStandardTime` - `TZ_64_NorthAsiaStandardTime` - `TZ_65_PacificSAStandardTime` - `TZ_66_PacificStandardTime` - `TZ_67_PacificStandardTimeMexico` - `TZ_68_PakistanStandardTime` - `TZ_69_ParaguayStandardTime` - `TZ_70_RomanceStandardTime` - `TZ_71_RussianStandardTime` - `TZ_72_SAEasternStandardTime` - `TZ_73_SAPacificStandardTime` - `TZ_74_SAWesternStandardTime` - `TZ_75_SamoaStandardTime` - `TZ_76_SE_AsiaStandardTime` - `TZ_77_SingaporeStandardTime` - `TZ_78_SouthAfricaStandardTime` - `TZ_79_SriLankaStandardTime` - `TZ_80_SyriaStandardTime` - `TZ_81_TaipeiStandardTime` - `TZ_82_TasmaniaStandardTime` - `TZ_83_TokyoStandardTime` - `TZ_84_TongaStandardTime` - `TZ_85_TurkeyStandardTime` - `TZ_86_UlaanbaatarStandardTime` - `TZ_87_US_EasternStandardTime` - `TZ_88_USMountainStandardTime` - `TZ_89_VenezuelaStandardTime` - `TZ_90_VladivostokStandardTime` - `TZ_91_W_AustraliaStandardTime` - `TZ_92_W_CentralAfricaStandardTime` - `TZ_93_W_EuropeStandardTime` - `TZ_94_WestAsiaStandardTime` - `TZ_95_WestPacificStandardTime` - `TZ_96_YakutskStandardTime`
@property (nonatomic, copy) NSString * _Nullable timezoneOffsetUI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneOffsetUIMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable universalSignatureOptIn;
/// Reserved for DocuSign.
@property (nonatomic) BOOL useAccountLevelEmail;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useAccountLevelEmailMetadata;
/// When <em>true,</em> the account uses an Electronic Record and Signature Disclosure Statement.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL useConsumerDisclosure;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useConsumerDisclosureMetadata;
/// When <em>true,</em> specifies that recipients in the same account as the sender must agree to eSign an Electronic Record and Signature Disclosure Statement.
@property (nonatomic) BOOL useConsumerDisclosureWithinAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useConsumerDisclosureWithinAccountMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL useDerivedKeys;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useDerivedKeysMetadata;
/// When <em>true,</em> signers are required to use Express Digital Signatures.
@property (nonatomic) BOOL useDocuSignExpressSignerCertificate;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useDocuSignExpressSignerCertificateMetadata;
@property (nonatomic) BOOL useMultiAppGroupsData;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useMultiAppGroupsDataMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL useNewBlobForPdf;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useNewBlobForPdfMetadata;
/// When <em>true,</em> signers are required to use SAFE digital signatures.
@property (nonatomic) BOOL useSAFESignerCertificates;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useSAFESignerCertificatesMetadata;
/// When <em>true,</em> the account can use the API.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL usesAPI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable usesAPIMetadata;
/// Boolean that specifies whether the account uses the digital signature provider platform to eSign.
@property (nonatomic) BOOL useSignatureProviderPlatform;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useSignatureProviderPlatformMetadata;
/// Boolean that specifies whether validations on recipient email domains are allowed.
@property (nonatomic) BOOL validationsAllowed;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable validationsAllowedMetadata;
/// Valid values are:  - `docusign` - `account`
@property (nonatomic, copy) NSString * _Nullable validationsBrand;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable validationsBrandMetadata;
/// Valid values are:  - `none` - `monthly`
@property (nonatomic, copy) NSString * _Nullable validationsCadence;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable validationsCadenceMetadata;
/// When <em>true,</em> enables validations.
@property (nonatomic) BOOL validationsEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable validationsEnabledMetadata;
/// Valid values are:  - `none` - `life_sciences_part11`
@property (nonatomic, copy) NSString * _Nullable validationsReport;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable validationsReportMetadata;
/// When <em>true,</em> the <a href="https://support.docusign.com/en/articles/How-do-I-manage-the-watermark-for-In-Process-envelopes-sent-from-my-account">watermark feature</a> is enabled for the account.
@property (nonatomic) BOOL waterMarkEnabled;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable waterMarkEnabledMetadata;
/// When <em>true,</em> sent reminders are included in the envelope history.
@property (nonatomic) BOOL writeReminderToEnvelopeHistory;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable writeReminderToEnvelopeHistoryMetadata;
/// The smallest screen allowed.
@property (nonatomic, copy) NSString * _Nullable wurflMinAllowableScreenSize;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable wurflMinAllowableScreenSizeMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIPropertyMetadata;
@class DSAPIRecipientAdditionalNotification;
@class DSAPIDocumentVisibility;
@class DSAPIRecipientEmailNotification;
@class DSAPIErrorDetails;
@class DSAPIRecipientAttachment;
@class DSAPIUserInfo;
@class DSAPIRecipientSMSAuthentication;
@class DSAPISocialAuthentication;

/// Contains information about an agent recipient. An agent is a recipient who can add name and email information for recipients that appear after the agent in routing order.
SWIFT_CLASS("_TtC11DocuSignAPI10DSAPIAgent")
@interface DSAPIAgent : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic) BOOL addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The email ID of the agent. Notification of the document to sign is sent to this email id.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name. Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The total number of tabs in the documents. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPIMergeField;

/// A tab that allows the recipient to approve documents without placing a signature or initials on the document.
SWIFT_CLASS("_TtC11DocuSignAPI12DSAPIApprove")
@interface DSAPIApprove : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// Specifies the approval text that displays in the tab.
@property (nonatomic, copy) NSString * _Nullable buttonText;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable buttonTextMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to be applied. You can only use this when adding new tabs for a recipient. When used, the new tab inherits all of the properties of the custom tab.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// Specifies the page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.  <em>Note:</em> Approve, Date Signed, Decline, Email Address, and Note tabs do not display custom tooltip text in the signing interface. Although you can technically set a value via the API for these tabs, it will not be displayed to the recipient.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Contains information about an attachment.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIAttachment")
@interface DSAPIAttachment : NSObject
/// Valid values are `sender` and `senderAndAllRecipients`.
@property (nonatomic, copy) NSString * _Nullable accessControl;
/// The unique identifier for the attachment.
@property (nonatomic, copy) NSString * _Nullable attachmentId;
/// Specifies the type of the attachment for the recipient.
@property (nonatomic, copy) NSString * _Nullable attachmentType;
/// A Base64-encoded representation of the attachment that is used to upload and download the file. File attachments may be up to 50 MB in size.
@property (nonatomic, copy) NSString * _Nullable data;
/// A label for the attachment. Potential values include:   - `guidedForm`: <a href="https://www.docusign.com/products/guided-forms">Guided forms</a> provide a step-by-step, mobile-ready experience to help signers easily complete long or complex forms. - `eventNotifications`: A list of envelope-level event statuses that trigger Connect to send updates to the endpoint specified in the `url` property.
@property (nonatomic, copy) NSString * _Nullable label;
/// The name of the attachment.
@property (nonatomic, copy) NSString * _Nullable name;
/// The URL of a previously staged chunked upload. Using a chunked upload enables you to stage a large, chunkable temp file. You then use the `remoteUrl` property to reference the chunked upload as the content in attachment and document-related requests. The `remoteUrl` property cannot be used for downloads.
@property (nonatomic, copy) NSURL * _Nullable remoteUrl;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAccessControl:(NSString * _Nullable)accessControl attachmentId:(NSString * _Nullable)attachmentId attachmentType:(NSString * _Nullable)attachmentType data:(NSString * _Nullable)data label:(NSString * _Nullable)label name:(NSString * _Nullable)name remoteUrl:(NSURL * _Nullable)remoteUrl OBJC_DESIGNATED_INITIALIZER;
@end


/// Contains information about the BCC email address.
SWIFT_CLASS("_TtC11DocuSignAPI20DSAPIBccEmailAddress")
@interface DSAPIBccEmailAddress : NSObject
/// Only users with canManageAccount setting can use this option. An array of up to 5 email addresses the envelope is sent to as a BCC email.    Example: If your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.
@property (nonatomic, copy) NSString * _Nullable bccEmailAddressId;
/// Specifies the BCC email address. DocuSign verifies that the email format is correct, but does not verify that the email is active.Using this overrides the BCC for Email Archive information setting for this envelope.  Maximum of length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBccEmailAddressId:(NSString * _Nullable)bccEmailAddressId email:(NSString * _Nullable)email OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPITabs;

/// Contains information about a carbon copy recipient. Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date or add information to any of the documents.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPICarbonCopy")
@interface DSAPICarbonCopy : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditEmail;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditName;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Not applicable for Carbon Copy recipients.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address. Notification of the document to sign is sent to this email address.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name. Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
@property (nonatomic, copy) NSString * _Nullable linkedAccountConfigurationId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The total number of tabs in the documents. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Contains information about a certified delivery recipient. Certified delivery recipients must receive the completed documents for the envelope to be completed. However, they don't need to sign, initial, date or add information to any of the documents.
SWIFT_CLASS("_TtC11DocuSignAPI22DSAPICertifiedDelivery")
@interface DSAPICertifiedDelivery : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditEmail;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditName;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name. Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The status of the recipient. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The total number of tabs in the documents. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to select a yes/no (on/off) option.
SWIFT_CLASS("_TtC11DocuSignAPI13DSAPICheckbox")
@interface DSAPICheckbox : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to apply. This property can only be used when adding new tabs for a recipient. When used, the new tab inherits all custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// This property does not apply to `checkbox` tabs.  To require users to check at least one, or at most some number of checkboxes, associate the checkbox tabs with a [`tabGroup`][tabGroup]. Then set the following `tabGroup` properties:  - [`maximumAllowed`][maximumAllowed] - [`minimumRequired`][minimumRequired] - [`groupRule`][groupRule] specifies how the other two properties are interpreted.  You can find an example at [Stack Overflow][so].  [so]:               https://stackoverflow.com/questions/58209376/checkbox-validation-using-docusign-rest-api/58210277#58210277 [tabGroup]:         /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups [groupRule]:        /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_grouprule [maximumAllowed]:   /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_maximumallowed [minimumRequired]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_minimumrequired
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the checkbox is selected.
@property (nonatomic) BOOL selected;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable selectedMetadata;
@property (nonatomic, copy) NSString * _Nullable selectedOriginal;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable selectedOriginalMetadata;
/// When <em>true,</em> this tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-7, -6)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-7, -6)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// This client specific details for the telemetry events.
SWIFT_CLASS("_TtC11DocuSignAPI18DSAPIClientContext")
@interface DSAPIClientContext : NSObject
/// The name of application.
@property (nonatomic, copy) NSString * _Nullable application;
/// The name of environment.
@property (nonatomic, copy) NSString * _Nullable environment;
/// The name of site.
@property (nonatomic, copy) NSString * _Nullable site;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithApplication:(NSString * _Nullable)application environment:(NSString * _Nullable)environment site:(NSString * _Nullable)site OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that displays the recipient's company name.
SWIFT_CLASS("_TtC11DocuSignAPI12DSAPICompany")
@interface DSAPICompany : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Details about consumer disclosures.
SWIFT_CLASS("_TtC11DocuSignAPI23DSAPIConsumerDisclosure")
@interface DSAPIConsumerDisclosure : NSObject
/// The GUID of the account associated with the consumer disclosure.
@property (nonatomic, copy) NSString * _Nullable accountEsignId;
/// When <em>true,</em> indicates that the customer can withdraw their consent to the consumer disclosure when they decline to sign documents. If these recipients sign documents sent to them from your account in the future, they will be required to agree to the terms in the disclosure. The default value is <em>false.</em> <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL allowCDWithdraw;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowCDWithdrawMetadata;
/// If the customer needs to change their email address, this is the email address to which they should the change request.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable changeEmail;
/// Other information about the requirements for the user to change their email address.  Maximum length: 255 characters.  Example:   `We do not require any other information from you to change your email address.`
@property (nonatomic, copy) NSString * _Nullable changeEmailOther;
/// Specifies the company name used in the disclosure. The default value is the account name.  However, if your account uses signing brands that specify a company name, you can substitute the brand's company name by setting the `useBrand` property to <em>true.</em> Whenever an envelope is sent from the account that uses a signing brand with a specified `companyName`, that value is used in email notifications and in the signing experience.  <em>Note:</em> This substitution only works if you use the default legal disclosure or if you apply the `companyName` to the merge fields in a custom ERSD. You must also set the value of the `useBrand` property to <em>true.</em>
@property (nonatomic, copy) NSString * _Nullable companyName;
/// The phone number of the company associated with the consumer disclosure, as a free-formatted string.
@property (nonatomic, copy) NSString * _Nullable companyPhone;
/// The cost per page if the customer requests paper copies.  Example:   `0.0000`
@property (nonatomic, copy) NSString * _Nullable copyCostPerPage;
/// Specifies the fee collection method for cases in which the customer requires paper copies of the document.  Maximum length: 255 characters.  Example:   `We will bill you for any fees at that time, if any.`
@property (nonatomic, copy) NSString * _Nullable copyFeeCollectionMethod;
/// The email address to which the customer should send a request for copies of a document.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable copyRequestEmail;
/// When <em>true,</em> indicates that the consumer disclosure is a custom disclosure. The default is <em>false.</em>
@property (nonatomic) BOOL custom;
/// When <em>true</em> (default), indicates that eSign is enabled.
@property (nonatomic, copy) NSString * _Nullable enableEsign;
/// The final, assembled text of the Electronic Record and Signature Disclosure that includes the appropriate `companyName` and other specifics. It also includes the HTML tags used for formatting.
@property (nonatomic, copy) NSString * _Nullable esignAgreement;
/// The template for the Electronic Record and Signature Disclosure, which contains placeholders for information such as the `companyName`. It also includes the HTML tags used for formatting.  <em>Note:</em> If you are switching to or updating a custom disclosure, you can edit both the text and the HTML formatting.
@property (nonatomic, copy) NSString * _Nullable esignText;
/// The code for the language version of the disclosure. The following languages are supported:  - Arabic (`ar`) - Bulgarian (`bg`) - Czech (`cs`) - Chinese Simplified (`zh_CN`) - Chinese Traditional (`zh_TW`) - Croatian (`hr`) - Danish (`da`) - Dutch (`nl`) - English US (`en`) - English UK (`en_GB`) - Estonian (`et`) - Farsi (`fa`) - Finnish (`fi`) - French (`fr`) - French Canadian (`fr_CA`) - German (`de`) - Greek (`el`) - Hebrew (`he`) - Hindi (`hi`) - Hungarian (`hu`) - Bahasa Indonesian (`id`) - Italian (`it`) - Japanese (`ja`) - Korean (`ko`) - Latvian (`lv`) - Lithuanian (`lt`) - Bahasa Melayu (`ms`) - Norwegian (`no`) - Polish (`pl`) - Portuguese (`pt`) - Portuguese Brazil (`pt_BR`) - Romanian (`ro`) - Russian (`ru`) - Serbian (`sr`) - Slovak (`sk`) - Slovenian (`sl`) - Spanish (`es`) - Spanish Latin America (`es_MX`) - Swedish (`sv`) - Thai (`th`) - Turkish (`tr`) - Ukrainian (`uk`)  - Vietnamese (`vi`)  Additionally, you can automatically detect the browser language being used by the viewer and display the disclosure in that language by setting the value to `browser`.
@property (nonatomic, copy) NSString * _Nullable languageCode;
/// When <em>true,</em> the  recipient must agree to the consumer disclosure. The value of this property is read-only. It is calculated based on the account setting `consumerDisclosureFrequency` and the user's actions.
@property (nonatomic) BOOL mustAgreeToEsign;
/// <em>Deprecated.</em>   The `pdfId` property in the consumer_disclosure PUT request is deprecated. For security reasons going forward, any value provided in the request packet must be ignored.
@property (nonatomic, copy) NSString * _Nullable pdfId;
/// When <em>true,</em> specifies that the company name in the signing brand is used for the disclosure. Whenever an envelope is sent from the account that uses a signing brand with a specified company name, that value is used in email notifications and in the signing experience.    When <em>false</em> (default), or if the signing brand does not specify a company name, the account name is used instead.  <em>Note:</em> This substitution only works if you use the default legal disclosure or if you apply the `companyName` to the merge fields in a custom ERSD.
@property (nonatomic) BOOL useBrand;
/// When <em>true,</em> specifies that recipients in the same account as the sender must agree to eSign an Electronic Record and Signature Disclosure Statement.
@property (nonatomic) BOOL useConsumerDisclosureWithinAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable useConsumerDisclosureWithinAccountMetadata;
/// Contains the first address line of the postal address to which a customer can send a consent withdrawal notification.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawAddressLine1;
/// Contains the second address line of the postal address to which a customer can send a consent withdrawal notification.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawAddressLine2;
/// When <em>true</em> (default), indicates that the customer can withdraw consent by email.
@property (nonatomic, copy) NSString * _Nullable withdrawByEmail;
/// When <em>true,</em> indicates that the customer can withdraw consent by postal mail. The default is <em>false.</em>
@property (nonatomic) BOOL withdrawByMail;
/// When <em>true,</em> indicates that the customer can withdraw consent by phone. The default is <em>false.</em>
@property (nonatomic) BOOL withdrawByPhone;
/// Contains the city of the postal address to which a customer can send a consent withdrawal notification.  Maximum length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawCity;
/// Text indicating the consequences of withdrawing consent.  Maximum length: 255 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawConsequences;
/// Contains the email address to which a customer can send a consent withdrawal notification.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawEmail;
/// Contains any other information needed to withdraw consent.  Maximum length: 255 characters.  Example:  `We do not need any other information from you to withdraw consent.`
@property (nonatomic, copy) NSString * _Nullable withdrawOther;
/// Contains the phone number that a customer can call to register consent withdrawal notification as a free-formatted string.  Maximum length: 20 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawPhone;
/// Contains the postal code of the postal address to which a customer can send a consent withdrawal notification.  Maximum length: 20 characters.
@property (nonatomic, copy) NSString * _Nullable withdrawPostalCode;
/// Contains the state of the postal address to which a customer can send a consent withdrawal notification.  Example: `PA`
@property (nonatomic, copy) NSString * _Nullable withdrawState;
- (nonnull instancetype)initWithAccountEsignId:(NSString * _Nullable)accountEsignId allowCDWithdraw:(BOOL)allowCDWithdraw allowCDWithdrawMetadata:(DSAPISettingsMetadata * _Nullable)allowCDWithdrawMetadata changeEmail:(NSString * _Nullable)changeEmail changeEmailOther:(NSString * _Nullable)changeEmailOther companyName:(NSString * _Nullable)companyName companyPhone:(NSString * _Nullable)companyPhone copyCostPerPage:(NSString * _Nullable)copyCostPerPage copyFeeCollectionMethod:(NSString * _Nullable)copyFeeCollectionMethod copyRequestEmail:(NSString * _Nullable)copyRequestEmail custom:(BOOL)custom enableEsign:(NSString * _Nullable)enableEsign esignAgreement:(NSString * _Nullable)esignAgreement esignText:(NSString * _Nullable)esignText languageCode:(NSString * _Nullable)languageCode mustAgreeToEsign:(BOOL)mustAgreeToEsign pdfId:(NSString * _Nullable)pdfId useBrand:(BOOL)useBrand useConsumerDisclosureWithinAccount:(BOOL)useConsumerDisclosureWithinAccount useConsumerDisclosureWithinAccountMetadata:(DSAPISettingsMetadata * _Nullable)useConsumerDisclosureWithinAccountMetadata withdrawAddressLine1:(NSString * _Nullable)withdrawAddressLine1 withdrawAddressLine2:(NSString * _Nullable)withdrawAddressLine2 withdrawByEmail:(NSString * _Nullable)withdrawByEmail withdrawByMail:(BOOL)withdrawByMail withdrawByPhone:(BOOL)withdrawByPhone withdrawCity:(NSString * _Nullable)withdrawCity withdrawConsequences:(NSString * _Nullable)withdrawConsequences withdrawEmail:(NSString * _Nullable)withdrawEmail withdrawOther:(NSString * _Nullable)withdrawOther withdrawPhone:(NSString * _Nullable)withdrawPhone withdrawPostalCode:(NSString * _Nullable)withdrawPostalCode withdrawState:(NSString * _Nullable)withdrawState OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIListCustomField;
@class DSAPITextCustomField;

/// Contains information about custom fields.
SWIFT_CLASS("_TtC11DocuSignAPI17DSAPICustomFields")
@interface DSAPICustomFields : NSObject
/// An array of list custom fields.
@property (nonatomic, copy) NSArray<DSAPIListCustomField *> * _Nullable listCustomFields;
/// An array of text custom fields.
@property (nonatomic, copy) NSArray<DSAPITextCustomField *> * _Nullable textCustomFields;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithListCustomFields:(NSArray<DSAPIListCustomField *> * _Nullable)listCustomFields textCustomFields:(NSArray<DSAPITextCustomField *> * _Nullable)textCustomFields OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to enter a date. Date tabs are one-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. If you need a particular date format enforced, DocuSign recommends using a Text tab with a validation pattern and a validation message to enforce the format.
SWIFT_CLASS("_TtC11DocuSignAPI9DSAPIDate")
@interface DSAPIDate : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A tab that displays the date that the recipient signed the document.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIDateSigned")
@interface DSAPIDateSigned : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.  <em>Note:</em> Approve, Date Signed, Decline, Email Address, and Note tabs do not display custom tooltip text in the signing interface. Although you can technically set a value via the API for these tabs, it will not be displayed to the recipient.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.  This property contains the following information about the central rectangle:  - `DateAreaX`: The X axis position of the top-left corner. - `DateAreaY`: The Y axis position of the top-left corner. - `DateAreaWidth`: The width of the rectangle. - `DateAreaHeight`: The height of the rectangle.
SWIFT_CLASS("_TtC11DocuSignAPI24DSAPIDateStampProperties")
@interface DSAPIDateStampProperties : NSObject
/// The height of the rectangle.
@property (nonatomic, copy) NSString * _Nullable dateAreaHeight;
/// The width of the rectangle.
@property (nonatomic, copy) NSString * _Nullable dateAreaWidth;
/// The X axis position of the top-left corner.
@property (nonatomic, copy) NSString * _Nullable dateAreaX;
/// The Y axis position of the top-left corner.
@property (nonatomic, copy) NSString * _Nullable dateAreaY;
- (nonnull instancetype)initWithDateAreaHeight:(NSString * _Nullable)dateAreaHeight dateAreaWidth:(NSString * _Nullable)dateAreaWidth dateAreaX:(NSString * _Nullable)dateAreaX dateAreaY:(NSString * _Nullable)dateAreaY OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A tab that allows the recipient the option of declining an envelope. If the recipient clicks the tab during the signing process, the envelope is voided.
SWIFT_CLASS("_TtC11DocuSignAPI12DSAPIDecline")
@interface DSAPIDecline : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// Specifies the decline text displayed in the tab.
@property (nonatomic, copy) NSString * _Nullable buttonText;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable buttonTextMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// The reason the recipient declined the document.
@property (nonatomic, copy) NSString * _Nullable declineReason;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable declineReasonMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.  <em>Note:</em> Approve, Date Signed, Decline, Email Address, and Note tabs do not display custom tooltip text in the signing interface. Although you can technically set a value via the API for these tabs, it will not be displayed to the recipient.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPINameValue;

/// A document object.
SWIFT_CLASS("_TtC11DocuSignAPI13DSAPIDocument")
@interface DSAPIDocument : NSObject
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable applyAnchorTabs;
@property (nonatomic, copy) NSString * _Nullable assignTabsToRecipientId;
/// This string sets the display and behavior properties of the document during signing. Valid values:  * `modal`<br>   The document is shown as a supplement action strip   and can be viewed, downloaded, or printed in a modal window.   This is the recommended value for supplemental documents.   * `inline`<br>   The document is shown in the normal signing window.   This value is not used with supplemental documents,   but is the default value for all other documents.
@property (nonatomic, copy) NSString * _Nullable display;
/// The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.
@property (nonatomic, copy) NSString * _Nullable documentBase64;
/// The array of name/value custom data strings to be added to a document. Custom document field information is returned in the status, but otherwise is not used by DocuSign. The array contains the elements:   * `name`: A string that can be a maximum of 50 characters.  * `value`: A string that can be a maximum of 200 characters.  If you are using XML, the name/value pair is contained in a `nameValue` element.
@property (nonatomic, copy) NSArray<DSAPINameValue *> * _Nullable documentFields;
/// Specifies the document ID of this document. This value is used by tabs to determine which document they appear in.
@property (nonatomic, copy) NSString * _Nullable documentId;
/// When <em>true,</em> the document is been already encrypted by the sender for use with the DocuSign Key Manager Security Appliance.
@property (nonatomic) BOOL encryptedWithKeyManager;
/// The file extension type of the document. Non-PDF documents are converted to PDF.  If the document is not a PDF, `fileExtension` is required.  If you try to upload a non-PDF document without a `fileExtension`, you will receive an &quot;unable to load document&quot; error message.
@property (nonatomic, copy) NSString * _Nullable fileExtension;
@property (nonatomic, copy) NSString * _Nullable fileFormatHint;
/// When <em>true,</em> the document is included in the combined document download (`documentsCombinedUri`).  The default value is <em>true.</em>
@property (nonatomic) BOOL includeInDownload;
/// The name of the document.
@property (nonatomic, copy) NSString * _Nullable name;
/// The order in which to sort the results.  Valid values are:    * `asc`: Ascending order. * `desc`: Descending order.
@property (nonatomic, copy) NSString * _Nullable order;
/// The number of pages in the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable pages;
/// The user's encrypted password hash.
@property (nonatomic, copy) NSString * _Nullable password;
@property (nonatomic, copy) NSString * _Nullable pdfFormFieldOption;
/// The file ID from the cloud storage service where the document is located. This information is returned using <a href="/docs/esign-rest-api/reference/cloudstorage/cloudstorage/listfolders/">CloudStorage: listFolders</a> or <a href="/docs/esign-rest-api/reference/cloudstorage/cloudstorage/list/">CloudStorage: list</a>.
@property (nonatomic, copy) NSURL * _Nullable remoteUrl;
/// Sets how the signer interacts with the supplemental document. Valid values:   * `no_interaction`<br>   No recipient action is required.   * `view`<br>   The recipient is required to view the document.   * `accept`<br>   The recipient is required to accept the document by selecting accept during signing, but is not required to view the document.   * `view_accept`<br>   The recipient is required to view and accept the document.
@property (nonatomic, copy) NSString * _Nullable signerMustAcknowledge;
/// When <em>true,</em> the account default setting for the required recipient option is used. If this property is set, `signerMustAcknowledge` cannot be set (and vice versa).
@property (nonatomic) BOOL signerMustAcknowledgeUseAccountDefault;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// When <em>true,</em> PDF form field data is transformed into document tab values when the PDF form field name matches the DocuSign custom tab tabLabel. The resulting PDF form data is also returned in the PDF meta data when requesting the document PDF.
@property (nonatomic) BOOL transformPdfFields;
/// A URI containing the user ID.
@property (nonatomic, copy) NSURL * _Nullable uri;
@property (nonatomic, copy) NSURL * _Nullable fileSandboxURL;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// This object configures a recipient's read/write access to a document.
SWIFT_CLASS("_TtC11DocuSignAPI23DSAPIDocumentVisibility")
@interface DSAPIDocumentVisibility : NSObject
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// Indicates whether the document is editable:  - `editable` - `read_only`
@property (nonatomic, copy) NSString * _Nullable rights;
/// When <em>true,</em> the document is visible to the recipient.
@property (nonatomic) BOOL visible;
- (nonnull instancetype)initWithDocumentId:(NSString * _Nullable)documentId errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails recipientId:(NSString * _Nullable)recipientId rights:(NSString * _Nullable)rights visible:(BOOL)visible OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A complex type defining the management and access rights of a recipient assigned as an editor on the envelope. Editors have the same management and access rights for the envelope as the sender. They can make changes to the envelope as if they were using the Correct feature. This recipient can add name and email information, add or change the routing order and set authentication options for the remaining recipients. Additionally, this recipient can edit signature/initial tabs and text tabs for the remaining recipients.
SWIFT_CLASS("_TtC11DocuSignAPI11DSAPIEditor")
@interface DSAPIEditor : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address. Notification of the document to sign is sent to this email address.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name.   Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The total number of tabs in the documents. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to enter an email address. This is a one-line field that checks that a valid email address is entered. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.  When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
SWIFT_CLASS("_TtC11DocuSignAPI10DSAPIEmail")
@interface DSAPIEmail : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A tab that displays the recipient's email as entered in the recipient information.
SWIFT_CLASS("_TtC11DocuSignAPI17DSAPIEmailAddress")
@interface DSAPIEmailAddress : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to be applied. This property can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.  <em>Note:</em> Approve, Date Signed, Decline, Email Address, and Note tabs do not display custom tooltip text in the signing interface. Although you can technically set a value via the API for these tabs, it will not be displayed to the recipient.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A complex element that allows  the sender to override some envelope email setting information. This can be used to override the Reply To email address and name associated with the envelope and to override the BCC email addresses to which an envelope is sent.   When the emailSettings information is used for an envelope, it only applies to that envelope.   <em>IMPORTANT:</em> The emailSettings information is not returned in the GET for envelope status. Use GET /email_settings to return information about the emailSettings.   EmailSettings consists of:   * replyEmailAddressOverride - The Reply To email used for the envelope. DocuSign will verify that a correct email format is used, but does not verify that the email is active. Maximum Length: 100 characters. * replyEmailNameOverride - The name associated with the Reply To email address. Maximum Length: 100 characters. * bccEmailAddresses - An array of up to five email addresses to which the envelope is sent to as a BCC email. Only users with canManageAccount setting set to true can use this option.  DocuSign verifies that the email format is correct, but does not verify that the email is active. Using this overrides the BCC for Email Archive information setting for this envelope. Maximum Length: 100 characters. <em>Example</em>: if your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.
SWIFT_CLASS("_TtC11DocuSignAPI18DSAPIEmailSettings")
@interface DSAPIEmailSettings : NSObject
/// An array containing the email address that should receive a copy of all email communications related to an envelope for archiving purposes. Maximum Length: 100 characters.  While this property is an array, note that it takes only a single email address.  <em>Note:</em> Only users with the `canManageAccount` setting set to <em>true</em> can use this option.   DocuSign verifies that the email format is correct, but does not verify that the email address is active. You can use this for archiving purposes. However, using this property overrides the BCC for Email Archive information setting for this envelope.   <em>Example:</em> if your account has BCC for Email Archive set up for the email address archive@mycompany.com and you send an envelope using the BCC Email Override to send a BCC email to salesarchive@mycompany.com, then a copy of the envelope is only sent to the salesarchive@mycompany.com email address.
@property (nonatomic, copy) NSArray<DSAPIBccEmailAddress *> * _Nullable bccEmailAddresses;
/// The Reply To email address to use for email replies, instead of the one that is configured at the account level. DocuSign verifies that the email address is in a correct format, but does not verify that it is active. Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable replyEmailAddressOverride;
/// The name to associate with the Reply To email address, instead of the name that is configured at the account level. Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable replyEmailNameOverride;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBccEmailAddresses:(NSArray<DSAPIBccEmailAddress *> * _Nullable)bccEmailAddresses replyEmailAddressOverride:(NSString * _Nullable)replyEmailAddressOverride replyEmailNameOverride:(NSString * _Nullable)replyEmailNameOverride OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPIEnvelopeDocument;
@class DSAPIFolder;
@class DSAPILockInformation;
@class DSAPINotification;
@class DSAPIRecipients;

SWIFT_CLASS("_TtC11DocuSignAPI13DSAPIEnvelope")
@interface DSAPIEnvelope : NSObject
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable accessControlListBase64;
/// When <em>true,</em> users can add comments to the documents in the envelope. For example, if a signer has a question about the text in the document, they can add a comment to the document.
@property (nonatomic) BOOL allowComments;
/// When <em>true,</em> the Document Markup feature is enabled.  <em>Note:</em>  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.
@property (nonatomic) BOOL allowMarkup;
/// When <em>true,</em> the recipient can redirect an envelope to a more appropriate recipient.
@property (nonatomic) BOOL allowReassign;
/// When <em>true,</em> recipients can view the history of the envelope.
@property (nonatomic) BOOL allowViewHistory;
/// Deprecated. This feature has been replaced by signing groups.
@property (nonatomic, copy) NSString * _Nullable anySigner;
/// When <em>true,</em> the envelope is queued for processing and the value of the `status` property is set to `Processing`. Additionally, GET status calls return `Processing` until completed.   <em>Note:</em> A `transactionId` is required for this call to work correctly. When the envelope is created, the status is `Processing` and an `envelopeId` is not returned in the response. To get the `envelopeId`, use a GET envelope query by using the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/">transactionId</a> or by checking the Connect notification.
@property (nonatomic) BOOL asynchronous;
/// Contains a URL for retrieving the attachments that are associated with the envelope.
@property (nonatomic, copy) NSURL * _Nullable attachmentsUri;
/// When <em>true,</em> marks all of the documents in the envelope as authoritative copies.  <em>Note:</em> You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to <em>true</em> at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to <em>false.</em>
@property (nonatomic) BOOL authoritativeCopy;
/// The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set. If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
@property (nonatomic, copy) NSString * _Nullable authoritativeCopyDefault;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// The ID of the brand.
@property (nonatomic, copy) NSString * _Nullable brandId;
/// When <em>true,</em> the `brandId` for the envelope is locked and senders cannot change the brand used for the envelope.
@property (nonatomic) BOOL brandLock;
/// The URI for retrieving certificate information.
@property (nonatomic, copy) NSURL * _Nullable certificateUri;
/// Specifies the date and time this item was completed.
@property (nonatomic, copy) NSDate * _Nullable completedDateTime;
@property (nonatomic, copy) NSString * _Nullable copyRecipientData;
/// The UTC DateTime when the item was created.
@property (nonatomic, copy) NSDate * _Nullable createdDateTime;
@property (nonatomic, strong) DSAPICustomFields * _Nullable customFields;
/// The URI for retrieving custom fields.
@property (nonatomic, copy) NSURL * _Nullable customFieldsUri;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable deletedDateTime;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// When <em>true,</em> responsive documents are disabled for the envelope.
@property (nonatomic) BOOL disableResponsiveDocument;
/// The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.
@property (nonatomic, copy) NSString * _Nullable documentBase64;
/// The URI for retrieving all of the documents associated with the envelope as a single PDF file.
@property (nonatomic, copy) NSURL * _Nullable documentsCombinedUri;
/// The URI for retrieving all of the documents associated with the envelope as separate files.
@property (nonatomic, copy) NSURL * _Nullable documentsUri;
/// This is the same as the email body. If specified it is included in email body for all envelope recipients.
@property (nonatomic, copy) NSString * _Nullable emailBlurb;
@property (nonatomic, strong) DSAPIEmailSettings * _Nullable emailSettings;
/// The subject line of the email message that is sent to all recipients.  For information about adding merge field information to the email subject, see <a href="/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields">Template Email Subject Merge Fields</a>.  <em>Note:</em> The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.
@property (nonatomic, copy) NSString * _Nullable emailSubject;
/// When <em>true,</em> the signer is allowed to print the document and sign it on paper.
@property (nonatomic) BOOL enableWetSign;
/// When <em>true,</em> signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.  <em>Note:</em> To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` <em>true.</em>  [docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/
@property (nonatomic) BOOL enforceSignerVisibility;
/// An array of attachment objects that provide information about the attachments that are associated with the envelope.
@property (nonatomic, copy) NSArray<DSAPIAttachment *> * _Nullable envelopeAttachments;
/// An array containing information about the documents that are included in the envelope.
@property (nonatomic, copy) NSArray<DSAPIEnvelopeDocument *> * _Nullable envelopeDocuments;
/// The envelope ID of the envelope status that failed to post.
@property (nonatomic, copy) NSString * _Nullable envelopeId;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-user-guide-set-advanced-document-options">Envelope ID Stamping</a> is enabled. After a document or attachment is stamped with an Envelope ID, the ID is seen by all recipients and becomes a permanent part of the document and cannot be removed.
@property (nonatomic) BOOL envelopeIdStamping;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable envelopeLocation;
/// The URI for retrieving the envelope or envelopes.
@property (nonatomic, copy) NSURL * _Nullable envelopeUri;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSString * _Nullable expireAfter;
/// The date and time that the envelope is set to expire. This value is determined by the `InitialSentDateTime` of the envelope and the `expireAfter` property of the `notification` object. (Note that the `expireAfter` property of the envelope itself is not used.)
@property (nonatomic, copy) NSDate * _Nullable expireDateTime;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSString * _Nullable expireEnabled;
/// May contain an external identifier for the envelope.
@property (nonatomic, copy) NSString * _Nullable externalEnvelopeId;
/// A list of folder objects.
@property (nonatomic, copy) NSArray<DSAPIFolder *> * _Nullable folders;
/// When <em>true,</em> indicates that users have added comments to the envelope.
@property (nonatomic) BOOL hasComments;
/// When <em>true,</em> indicates that the data collected through form fields on a document has changed.
@property (nonatomic) BOOL hasFormDataChanged;
/// When <em>true,</em> indicates that a .wav file used for voice authentication is included in the envelope.
@property (nonatomic) BOOL hasWavFile;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable holder;
/// The date and time the envelope was initially sent.
@property (nonatomic, copy) NSDate * _Nullable initialSentDateTime;
/// When <em>true,</em> indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).
@property (nonatomic) BOOL is21CFRPart11;
/// When <em>true,</em> indicates that the envelope is a dynamic envelope.
@property (nonatomic) BOOL isDynamicEnvelope;
/// When <em>true,</em> indicates that the envelope is a signature-provided envelope.
@property (nonatomic) BOOL isSignatureProviderEnvelope;
/// The date and time that the item was last modified.
@property (nonatomic, copy) NSDate * _Nullable lastModifiedDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable location;
@property (nonatomic, strong) DSAPILockInformation * _Nullable lockInformation;
/// When <em>true,</em> prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope.   Additionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes.   However, if the `messageLock` node is set to <em>true</em> and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.
@property (nonatomic) BOOL messageLock;
@property (nonatomic, strong) DSAPINotification * _Nullable notification;
/// The URI for retrieving notifications.
@property (nonatomic, copy) NSURL * _Nullable notificationUri;
/// The date that a purge was completed.
@property (nonatomic, copy) NSDate * _Nullable purgeCompletedDate;
/// The date that a purge was requested.
@property (nonatomic, copy) NSDate * _Nullable purgeRequestDate;
/// Shows the current purge state for the envelope. Valid values:  - `unpurged`: There has been no successful request to purge documents. - `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged. - `documents_dequeued`: The envelope documents have been taken out of the purge queue. - `documents_purged`: The envelope documents have been successfully purged. - `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged. - `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged. - `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted. - `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.  <em>Related topics</em>  - <a href="/docs/esign-rest-api/esign101/concepts/documents/purging/">Purging documents (eSingature Concepts)</a> - <a href="https://www.docusign.com/blog/developers/purging-documents-envelope">Purging documents in an envelope (blog post)</a>
@property (nonatomic, copy) NSString * _Nullable purgeState;
@property (nonatomic, strong) DSAPIRecipients * _Nullable recipients;
/// When <em>true,</em> prevents senders from changing, correcting, or deleting the recipient information for the envelope.
@property (nonatomic) BOOL recipientsLock;
/// Contains a URI for an endpoint that you can use to retrieve the recipients.
@property (nonatomic, copy) NSURL * _Nullable recipientsUri;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable sender;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// When <em>true,</em> recipients can sign on a mobile device.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerCanSignOnMobile;
/// Specifies the physical location where the signing takes place. It can have two enumeration values; `inPerson` and `online`. The default value is `online`.
@property (nonatomic, copy) NSString * _Nullable signingLocation;
/// Indicates the envelope status. Valid values are:  * `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in. * `created`: The envelope is created as a draft. It can be modified and sent later. * `declined`: The envelope has been declined by the recipients. * `delivered`: The envelope has been delivered to the recipients. * `sent`: The envelope will be sent to the recipients after the envelope is created. * `signed`: The envelope has been signed by the recipients. * `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.
@property (nonatomic, copy) NSString * _Nullable status;
/// The data and time that the status changed.
@property (nonatomic, copy) NSDate * _Nullable statusChangedDateTime;
/// The DateTime that the envelope changed status (i.e. was created or sent.)
@property (nonatomic, copy) NSDate * _Nullable statusDateTime;
/// The URI for retrieving the templates.
@property (nonatomic, copy) NSURL * _Nullable templatesUri;
/// Used to identify an envelope.   The ID is a sender-generated value and is valid in the DocuSign system for 7 days.  It is recommended that a transaction ID is used for offline  signing to ensure that an envelope is not sent multiple times.  The `transactionId` property can be used determine an envelope's  status (i.e. was it created or not) in cases where the internet c  onnection was lost before the envelope status was returned.
@property (nonatomic, copy) NSString * _Nullable transactionId;
/// When <em>true,</em> the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When <em>false,</em> the Electronic Record and Signature Disclosure is not shown to any envelope recipients.   If the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.
@property (nonatomic, copy) NSString * _Nullable useDisclosure;
/// The date and time the envelope or template was voided.
@property (nonatomic, copy) NSDate * _Nullable voidedDateTime;
/// The reason the envelope or template was voided.
@property (nonatomic, copy) NSString * _Nullable voidedReason;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIRecipientViewRequest;
@class DSAPITemplateRole;

/// Envelope object definition.
SWIFT_CLASS("_TtC11DocuSignAPI23DSAPIEnvelopeDefinition")
@interface DSAPIEnvelopeDefinition : NSObject
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable accessControlListBase64;
/// Sets the document reading zones for screen reader applications.  This element can only be used if Document Accessibility is enabled for the account.  <em>Note:</em> This information is currently generated from the DocuSign web console by setting the reading zones when creating a template, exporting the reading zone string information, and adding it here.
@property (nonatomic, copy) NSString * _Nullable accessibility;
/// When <em>true,</em> comments are allowed on the envelope.
@property (nonatomic) BOOL allowComments;
/// When <em>true,</em> the Document Markup feature is enabled.  <em>Note:</em>  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.
@property (nonatomic) BOOL allowMarkup;
/// When <em>true,</em> the recipient can redirect an envelope to a more appropriate recipient.
@property (nonatomic) BOOL allowReassign;
/// When <em>true,</em> this enables the Recursive Recipients feature and allows a recipient to appear more than once in the routing order.
@property (nonatomic) BOOL allowRecipientRecursion;
/// When <em>true,</em> users can view the history of the envelope.
@property (nonatomic) BOOL allowViewHistory;
/// Deprecated. This feature has been replaced by signing groups.
@property (nonatomic, copy) NSString * _Nullable anySigner;
/// When <em>true,</em> the envelope is queued for processing and the value of the `status` property is set to `Processing`. Additionally, GET status calls return `Processing` until completed.   <em>Note:</em> A `transactionId` is required for this call to work correctly. When the envelope is created, the status is `Processing` and an `envelopeId` is not returned in the response. To get the `envelopeId`, use a GET envelope query by using the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/">transactionId</a> or by checking the Connect notification.
@property (nonatomic) BOOL asynchronous;
/// An array of attachment objects containing details about any envelope attachments.
@property (nonatomic, copy) NSArray<DSAPIAttachment *> * _Nullable attachments;
/// The URI for retrieving the envelope attachments.
@property (nonatomic, copy) NSURL * _Nullable attachmentsUri;
/// When <em>true,</em> marks all of the documents in the envelope as authoritative copies.  <em>Note:</em> You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to <em>true</em> at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to <em>false.</em>
@property (nonatomic) BOOL authoritativeCopy;
/// The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set. If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
@property (nonatomic, copy) NSString * _Nullable authoritativeCopyDefault;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// The ID of the brand, or text and formatting, to use for the envelope. To use brands, account branding must be enabled for the account.  <em>Note:</em> When creating an envelope using a branded template, include this value to ensure that the brand is applied.
@property (nonatomic, copy) NSString * _Nullable brandId;
/// When <em>true,</em> the `brandId` for the envelope is locked and senders cannot change the brand used for the envelope.
@property (nonatomic) BOOL brandLock;
/// The URI for retrieving certificate information.
@property (nonatomic, copy) NSURL * _Nullable certificateUri;
/// The date and time that the envelope was completed.
@property (nonatomic, copy) NSDate * _Nullable completedDateTime;
/// This value is only applicable when copying an existing envelope. Provide the ID of the envelope to clone in `envelopeId`.  When <em>true,</em> the recipient field values of the existing envelope are included. Only values from data entry fields, like checkboxes and radio buttons, will be copied. Fields that require an action, like signatures and initials, will not be included.
@property (nonatomic, copy) NSString * _Nullable copyRecipientData;
/// The date and time that the envelope was created.
@property (nonatomic, copy) NSDate * _Nullable createdDateTime;
@property (nonatomic, strong) DSAPICustomFields * _Nullable customFields;
/// The URI for retrieving custom fields.
@property (nonatomic, copy) NSURL * _Nullable customFieldsUri;
/// The date and time that the recipient declined the envelope.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The date and time that the envelope was deleted.
@property (nonatomic, copy) NSDate * _Nullable deletedDateTime;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// When <em>true,</em> the responsive document feature is turned off for the envelope.
@property (nonatomic) BOOL disableResponsiveDocument;
/// The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.
@property (nonatomic, copy) NSString * _Nullable documentBase64;
/// A complex element that contains details about the documents associated with the envelope.
@property (nonatomic, copy) NSArray<DSAPIDocument *> * _Nullable documents;
/// The URI for retrieving all of the documents associated with the envelope as a single PDF file.
@property (nonatomic, copy) NSURL * _Nullable documentsCombinedUri;
/// The URI for retrieving all of the documents associated with the envelope as separate files.
@property (nonatomic, copy) NSURL * _Nullable documentsUri;
/// This optional element holds the body of the email message that is sent to all envelope recipients.   Maximum Length: 10000 characters.
@property (nonatomic, copy) NSString * _Nullable emailBlurb;
@property (nonatomic, strong) DSAPIEmailSettings * _Nullable emailSettings;
/// The subject line of the email message that is sent to all recipients.  For information about adding merge field information to the email subject, see <a href="/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields">Template Email Subject Merge Fields</a>.  <em>Note:</em> The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.
@property (nonatomic, copy) NSString * _Nullable emailSubject;
/// When <em>true,</em> the signer is allowed to print the document and sign it on paper.
@property (nonatomic) BOOL enableWetSign;
/// When <em>true,</em> signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.  <em>Note:</em> To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` <em>true.</em>  [docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/
@property (nonatomic) BOOL enforceSignerVisibility;
/// An array of attachment objects that provide information about the attachments that are associated with the envelope.
@property (nonatomic, copy) NSArray<DSAPIAttachment *> * _Nullable envelopeAttachments;
/// An array containing information about the documents that are included in the envelope.
@property (nonatomic, copy) NSArray<DSAPIEnvelopeDocument *> * _Nullable envelopeDocuments;
/// The envelope ID.  When used as a request body in <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/">Envelopes: create</a>, this is the ID of the envelope to clone.
@property (nonatomic, copy) NSString * _Nullable envelopeId;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-user-guide-set-advanced-document-options">Envelope ID Stamping</a> is enabled. After a document or attachment is stamped with an Envelope ID, the ID is seen by all recipients and becomes a permanent part of the document and cannot be removed.
@property (nonatomic) BOOL envelopeIdStamping;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable envelopeLocation;
/// The URI for retrieving the envelope or envelopes.
@property (nonatomic, copy) NSURL * _Nullable envelopeUri;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSString * _Nullable expireAfter;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSDate * _Nullable expireDateTime;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSString * _Nullable expireEnabled;
/// May contain an external identifier for the envelope.
@property (nonatomic, copy) NSString * _Nullable externalEnvelopeId;
/// An array of folders that the envelope belongs to.
@property (nonatomic, copy) NSArray<DSAPIFolder *> * _Nullable folders;
/// When <em>true,</em> indicates that users have added comments to the envelope.
@property (nonatomic) BOOL hasComments;
/// When <em>true,</em> indicates that the form data associated with the envelope has changed since it was sent. When <em>false,</em> this property does not appear in the response.
@property (nonatomic) BOOL hasFormDataChanged;
/// When <em>true,</em> indicates that a wave file (voice recording) is part of the envelope.
@property (nonatomic) BOOL hasWavFile;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable holder;
/// The date and time that the envelope was first sent.
@property (nonatomic, copy) NSDate * _Nullable initialSentDateTime;
/// When <em>true,</em> indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).
@property (nonatomic) BOOL is21CFRPart11;
/// When <em>true,</em> indicates that the envelope is a dynamic envelope.
@property (nonatomic) BOOL isDynamicEnvelope;
/// When <em>true,</em> indicates that the envelope is a signature-provided envelope.
@property (nonatomic) BOOL isSignatureProviderEnvelope;
/// The date and time that the item was last modified.
@property (nonatomic, copy) NSDate * _Nullable lastModifiedDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable location;
@property (nonatomic, strong) DSAPILockInformation * _Nullable lockInformation;
/// When <em>true,</em> prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope.   Additionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes.   However, if the `messageLock` node is set to <em>true</em> and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.
@property (nonatomic) BOOL messageLock;
@property (nonatomic, strong) DSAPINotification * _Nullable notification;
/// The URI for retrieving notifications.
@property (nonatomic, copy) NSURL * _Nullable notificationUri;
/// The user's encrypted password hash.
@property (nonatomic, copy) NSString * _Nullable password;
/// The date that a purge was completed.
@property (nonatomic, copy) NSDate * _Nullable purgeCompletedDate;
/// The date that a purge was requested.
@property (nonatomic, copy) NSDate * _Nullable purgeRequestDate;
/// Initiates a purge request. Valid values are:  - `documents_queued`: Places envelope documents in the purge queue. - `documents_and_metadata_queued`: Places envelope documents    and metadata in the purge queue. - `documents_and_metadata_and_redact_queued`: Places envelope documents    and metadata in the purge queue and redacts personal information.  <em>Related topics</em>  - <a href="/docs/esign-rest-api/esign101/concepts/documents/purging/">Purging documents (eSingature Concepts)</a> - <a href="https://www.docusign.com/blog/developers/purging-documents-envelope">Purging documents in an envelope (blog post)</a>
@property (nonatomic, copy) NSString * _Nullable purgeState;
@property (nonatomic, strong) DSAPIRecipients * _Nullable recipients;
/// When <em>true,</em> prevents senders from changing, correcting, or deleting the recipient information for the envelope.
@property (nonatomic) BOOL recipientsLock;
/// Contains a URI for an endpoint that you can use to retrieve the recipients.
@property (nonatomic, copy) NSURL * _Nullable recipientsUri;
@property (nonatomic, strong) DSAPIRecipientViewRequest * _Nullable recipientViewRequest;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable sender;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// When <em>true,</em> recipients can sign on a mobile device.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerCanSignOnMobile;
/// Specifies the physical location where the signing takes place. It can have two enumeration values; `inPerson` and `online`. The default value is `online`.
@property (nonatomic, copy) NSString * _Nullable signingLocation;
/// Indicates the envelope status. Valid values when creating an envelope are:   * `created`: The envelope is created as a draft. It can be modified and sent later. * `sent`: The envelope will be sent to the recipients after the envelope is created.  You can query these additional statuses once the recipients have interacted with the envelope.  * `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in. * `declined`: The envelope has been declined by the recipients. * `delivered`: The envelope has been delivered to the recipients. * `signed`: The envelope has been signed by the recipients. * `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.
@property (nonatomic, copy) NSString * _Nullable status;
/// The data and time that the status changed.
@property (nonatomic, copy) NSDate * _Nullable statusChangedDateTime;
/// The DateTime that the envelope changed status (i.e. was created or sent.)
@property (nonatomic, copy) NSDate * _Nullable statusDateTime;
/// The ID of the template. If a value is not provided, DocuSign generates a value.
@property (nonatomic, copy) NSString * _Nullable templateId;
/// This object specifies the template recipients. Each `roleName` in the template must have a recipient assigned to it. This object is comprised of the following elements:  * `email`: The recipient's email address. * `name`: The recipient's name. * `roleName`: The template roleName associated with the recipient. * `clientUserId`: An optional property that specifies whether the recipient is embedded or remote. If the `clientUserId` is not null, then the recipient is embedded. Note that if a `clientUserId` is used and the account settings `signerMustHaveAccount` or `signerMustLoginToSign` are <em>true,</em> an error is generated on sending. * `defaultRecipient`: Optional, When <em>true,</em> this recipient is the default recipient and any tabs generated by the `transformPdfFields` option are mapped to this recipient. * `routingOrder`: This specifies the routing order of the recipient in the envelope. * `accessCode`: This optional element specifies the access code a recipient has to enter to validate the identity. Maximum Length: 50 characters. * `inPersonSignerName`: Optional. If the template role is an in-person signer, this is the full legal name of the signer. Maximum Length: 100 characters. * `emailNotification`: This is an optional complex element that has a role-specific `emailSubject`, `emailBody`, and `language`. It follows the same format as the `emailNotification` property for recipients. * `tabs`: This property enables the tab values to be specified for matching to tabs in the template.
@property (nonatomic, copy) NSArray<DSAPITemplateRole *> * _Nullable templateRoles;
/// The URI for retrieving any templates associated with the envelope.
@property (nonatomic, copy) NSURL * _Nullable templatesUri;
/// Used to identify an envelope. The ID is a sender-generated value and is valid in the DocuSign system for 7 days. DocuSign recommends that you use a transaction ID for offline signing to ensure that an envelope is not sent multiple times. You can use the `transactionId` property to determine an envelope's status (i.e. was it created or not) in cases where the Internet connection was lost before the envelope status was returned.
@property (nonatomic, copy) NSString * _Nullable transactionId;
/// When <em>true,</em> the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When <em>false,</em> the Electronic Record and Signature Disclosure is not shown to any envelope recipients.   If the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.
@property (nonatomic, copy) NSString * _Nullable useDisclosure;
/// The date and time the envelope or template was voided.
@property (nonatomic, copy) NSDate * _Nullable voidedDateTime;
/// The reason the envelope or template was voided.
@property (nonatomic, copy) NSString * _Nullable voidedReason;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface DSAPIEnvelopeDefinition (SWIFT_EXTENSION(DocuSignAPI))
- (DSAPIEnvelopeDefinition * _Nullable)convertToObjectWithJsonString:(NSString * _Nonnull)jsonString SWIFT_WARN_UNUSED_RESULT;
@end

@class DSAPIPage;

/// This object contains details about the envelope document.
SWIFT_CLASS("_TtC11DocuSignAPI21DSAPIEnvelopeDocument")
@interface DSAPIEnvelopeDocument : NSObject
/// If recipients were added by converting form fields into tabs, their IDs appear here. This property is read-only.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable addedRecipientIds;
/// If this document is an attachment to another document in the envelope, this is the ID of the attachment tab it is associated with on the other document.
@property (nonatomic, copy) NSString * _Nullable attachmentTabId;
/// When <em>true,</em> marks all of the documents in the envelope as authoritative copies.  <em>Note:</em> You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to <em>true</em> at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to <em>false.</em>
@property (nonatomic) BOOL authoritativeCopy;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable authoritativeCopyMetadata;
/// When <em>true,</em> the document has editable form fields that are made available through a PDF format.
@property (nonatomic) BOOL containsPdfFormFields;
/// This string sets the display and behavior properties of the document during signing. Valid values:  * `modal`<br>   The document is shown as a supplement action strip   and can be viewed, downloaded, or printed in a modal window.   This is the recommended value for supplemental documents.   * `inline`<br>   The document is shown in the normal signing window.   This value is not used with supplemental documents,   but is the default value for all other documents.
@property (nonatomic, copy) NSString * _Nullable display;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable displayMetadata;
/// The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.
@property (nonatomic, copy) NSString * _Nullable documentBase64;
/// An object containing information about the custom fields on the document.
@property (nonatomic, copy) NSArray<DSAPINameValue *> * _Nullable documentFields;
/// The ID of the document that the tab is placed on. This value must refer to the ID of an existing document.
@property (nonatomic, copy) NSString * _Nullable documentId;
/// The GUID of the document.
@property (nonatomic, copy) NSString * _Nullable documentIdGuid;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// When <em>true,</em> the document is included in the combined document download (`documentsCombinedUri`).  The default value is <em>true.</em>
@property (nonatomic) BOOL includeInDownload;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable includeInDownloadMetadata;
/// The document's file name.   Example: `Q1-Report.docx`
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The order in which to sort the results.  Valid values are:    * `asc`: Ascending order. * `desc`: Descending order.
@property (nonatomic, copy) NSString * _Nullable order;
/// An array of page objects that contain information about the pages in the document.
@property (nonatomic, copy) NSArray<DSAPIPage *> * _Nullable pages;
/// Sets how the signer interacts with the supplemental document. Valid values:   * `no_interaction`<br>   No recipient action is required.   * `view`<br>   The recipient is required to view the document.   * `accept`<br>   The recipient is required to accept the document by selecting accept during signing, but is not required to view the document.   * `view_accept`<br>   The recipient is required to view and accept the document.
@property (nonatomic, copy) NSString * _Nullable signerMustAcknowledge;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signerMustAcknowledgeMetadata;
@property (nonatomic, copy) NSString * _Nullable sizeBytes;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The type of this tab. Values are:  - Approve - CheckBox - Company - Date - DateSigned, Decline - Email, EmailAddress - EnvelopeId - FirstName - Formula - FullName, InitialHere - InitialHereOptional - LastName - List - Note - Number - Radio - SignerAttachment - SignHere - SignHereOptional - Ssn - Text - Title - Zip5 - Zip5Dash4
@property (nonatomic, copy) NSString * _Nullable type;
/// The URI for retrieving the document.
@property (nonatomic, copy) NSURL * _Nullable uri;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI28DSAPIEnvelopeDocumentsResult")
@interface DSAPIEnvelopeDocumentsResult : NSObject
/// An array containing information about the documents that are included in the envelope.
@property (nonatomic, copy) NSArray<DSAPIEnvelopeDocument *> * _Nullable envelopeDocuments;
/// The envelope ID.
@property (nonatomic, copy) NSString * _Nullable envelopeId;
- (nonnull instancetype)initWithEnvelopeDocuments:(NSArray<DSAPIEnvelopeDocument *> * _Nullable)envelopeDocuments envelopeId:(NSString * _Nullable)envelopeId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A tab that displays the envelope ID. Recipients cannot enter or change the information in this tab.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIEnvelopeId")
@interface DSAPIEnvelopeId : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This object describes an envelope.
SWIFT_CLASS("_TtC11DocuSignAPI20DSAPIEnvelopeSummary")
@interface DSAPIEnvelopeSummary : NSObject
/// The envelope ID of the envelope status that failed to post.
@property (nonatomic, copy) NSString * _Nullable envelopeId;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
@property (nonatomic, copy) NSURL * _Nullable recipientSigningUri;
@property (nonatomic, copy) NSString * _Nullable recipientSigningUriError;
/// Indicates the envelope status. Valid values are:   * `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in. * `created`: The envelope is created as a draft. It can be modified and sent later. * `declined`: The envelope has been declined by the recipients. * `delivered`: The envelope has been delivered to the recipients. * `sent`: The envelope will be sent to the recipients after the envelope is created. * `signed`: The envelope has been signed by the recipients. * `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.
@property (nonatomic, copy) NSString * _Nullable status;
/// The DateTime that the envelope changed status (i.e. was created or sent.)
@property (nonatomic, copy) NSDate * _Nullable statusDateTime;
/// A URI containing the user ID.
@property (nonatomic, copy) NSURL * _Nullable uri;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI21DSAPIEnvelopeTemplate")
@interface DSAPIEnvelopeTemplate : NSObject
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable accessControlListBase64;
/// When <em>true,</em> users can add comments to the documents in the envelope. For example, if a signer has a question about the text in the document, they can add a comment to the document.
@property (nonatomic) BOOL allowComments;
/// When <em>true,</em> the Document Markup feature is enabled.  <em>Note:</em>  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.
@property (nonatomic) BOOL allowMarkup;
/// When <em>true,</em> the recipient can redirect an envelope to a more appropriate recipient.
@property (nonatomic) BOOL allowReassign;
/// When <em>true,</em> recipients can view the history of the envelope.
@property (nonatomic) BOOL allowViewHistory;
/// Deprecated. This feature has been replaced by signing groups.
@property (nonatomic, copy) NSString * _Nullable anySigner;
/// When <em>true,</em> the envelope is queued for processing and the value of the `status` property is set to `Processing`. Additionally, GET status calls return `Processing` until completed.   <em>Note:</em> A `transactionId` is required for this call to work correctly. When the envelope is created, the status is `Processing` and an `envelopeId` is not returned in the response. To get the `envelopeId`, use a GET envelope query by using the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/">transactionId</a> or by checking the Connect notification.
@property (nonatomic) BOOL asynchronous;
/// Contains a URL for retrieving the attachments that are associated with the envelope.
@property (nonatomic, copy) NSURL * _Nullable attachmentsUri;
/// When <em>true,</em> marks all of the documents in the envelope as authoritative copies.  <em>Note:</em> You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to <em>true</em> at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to <em>false.</em>
@property (nonatomic) BOOL authoritativeCopy;
/// The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set. If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
@property (nonatomic, copy) NSString * _Nullable authoritativeCopyDefault;
/// By default, templates that have been used within the last 60 days are included in auto-matching.  By explicitly setting `autoMatch`, you can permanently include or exclude the template in auto matching.  When <em>true</em> the template is included in auto-matching regardless of when it was last used.  When <em>false</em> the template is never included in auto-matching.
@property (nonatomic) BOOL autoMatch;
/// When <em>true,</em> the template has been explicitly included in or excluded from auto-matching. The default is false. This is a read-only property.
@property (nonatomic) BOOL autoMatchSpecifiedByUser;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// The ID of the brand.
@property (nonatomic, copy) NSString * _Nullable brandId;
/// When <em>true,</em> the `brandId` for the envelope is locked and senders cannot change the brand used for the envelope.
@property (nonatomic) BOOL brandLock;
/// The URI for retrieving certificate information.
@property (nonatomic, copy) NSURL * _Nullable certificateUri;
/// Specifies the date and time this item was completed.
@property (nonatomic, copy) NSDate * _Nullable completedDateTime;
@property (nonatomic, copy) NSString * _Nullable copyRecipientData;
/// The UTC DateTime when the workspace user authorization was created.
@property (nonatomic, copy) NSString * _Nullable created;
/// The UTC DateTime when the item was created.
@property (nonatomic, copy) NSDate * _Nullable createdDateTime;
@property (nonatomic, strong) DSAPICustomFields * _Nullable customFields;
/// The URI for retrieving custom fields.
@property (nonatomic, copy) NSURL * _Nullable customFieldsUri;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable deletedDateTime;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// A sender-defined description of the line item.
@property (nonatomic, copy) NSString * _Nullable templatedescription;
/// When <em>true,</em> responsive documents are disabled for the envelope.
@property (nonatomic) BOOL disableResponsiveDocument;
/// The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.
@property (nonatomic, copy) NSString * _Nullable documentBase64;
/// A complex element that contains details about the documents associated with the envelope.
@property (nonatomic, copy) NSArray<DSAPIDocument *> * _Nullable documents;
/// The URI for retrieving all of the documents associated with the envelope as a single PDF file.
@property (nonatomic, copy) NSURL * _Nullable documentsCombinedUri;
/// The URI for retrieving all of the documents associated with the envelope as separate files.
@property (nonatomic, copy) NSURL * _Nullable documentsUri;
/// This is the same as the email body. If the sender enters an email blurb, it is included in the email body for all envelope recipients.
@property (nonatomic, copy) NSString * _Nullable emailBlurb;
@property (nonatomic, strong) DSAPIEmailSettings * _Nullable emailSettings;
/// The subject line of the email message that is sent to all recipients.  For information about adding merge field information to the email subject, see <a href="/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields">Template Email Subject Merge Fields</a>.  <em>Note:</em> The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.
@property (nonatomic, copy) NSString * _Nullable emailSubject;
/// When <em>true,</em> the signer is allowed to print the document and sign it on paper.
@property (nonatomic) BOOL enableWetSign;
/// When <em>true,</em> signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.  <em>Note:</em> To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` <em>true.</em>  [docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/
@property (nonatomic) BOOL enforceSignerVisibility;
/// An array of attachment objects that provide information about the attachments that are associated with the envelope.
@property (nonatomic, copy) NSArray<DSAPIAttachment *> * _Nullable envelopeAttachments;
/// An array containing information about the documents that are included in the envelope.
@property (nonatomic, copy) NSArray<DSAPIEnvelopeDocument *> * _Nullable envelopeDocuments;
/// The envelope ID of the envelope status that failed to post.
@property (nonatomic, copy) NSString * _Nullable envelopeId;
/// When <em>true,</em> <a href="https://support.docusign.com/en/guides/ndse-user-guide-set-advanced-document-options">Envelope ID Stamping</a> is enabled. After a document or attachment is stamped with an Envelope ID, the ID is seen by all recipients and becomes a permanent part of the document and cannot be removed.
@property (nonatomic) BOOL envelopeIdStamping;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable envelopeLocation;
/// The URI for retrieving the envelope or envelopes.
@property (nonatomic, copy) NSURL * _Nullable envelopeUri;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSString * _Nullable expireAfter;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic, copy) NSDate * _Nullable expireDateTime;
/// Not used. Use the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations">`expirations`</a> property in the <a href="/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification">`notification`</a> object instead.
@property (nonatomic) BOOL expireEnabled;
/// May contain an external identifier for the envelope.
@property (nonatomic, copy) NSString * _Nullable externalEnvelopeId;
@property (nonatomic, copy) NSString * _Nullable favoritedByMe;
/// The ID of the folder.
@property (nonatomic, copy) NSString * _Nullable folderId;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable folderIds;
@property (nonatomic, copy) NSString * _Nullable folderName;
/// A list of folder objects.
@property (nonatomic, copy) NSArray<DSAPIFolder *> * _Nullable folders;
/// When <em>true,</em> indicates that users have added comments to the envelope.
@property (nonatomic) BOOL hasComments;
/// When <em>true,</em> indicates that the data collected through form fields on a document has changed.
@property (nonatomic) BOOL hasFormDataChanged;
/// When <em>true,</em> indicates that a .wav file used for voice authentication is included in the envelope.
@property (nonatomic) BOOL hasWavFile;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable holder;
/// The date and time the envelope was initially sent.
@property (nonatomic, copy) NSDate * _Nullable initialSentDateTime;
/// When <em>true,</em> indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).
@property (nonatomic) BOOL is21CFRPart11;
/// When <em>true,</em> indicates that the envelope is a dynamic envelope.
@property (nonatomic) BOOL isDynamicEnvelope;
/// When <em>true,</em> indicates that the envelope is a signature-provided envelope.
@property (nonatomic) BOOL isSignatureProviderEnvelope;
/// The UTC date and time that the comment was last updated.  <em>Note:</em> This can only be done by the creator.
@property (nonatomic, copy) NSDate * _Nullable lastModified;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable lastModifiedBy;
/// The date and time that the item was last modified.
@property (nonatomic, copy) NSDate * _Nullable lastModifiedDateTime;
@property (nonatomic, copy) NSString * _Nullable lastUsed;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable location;
@property (nonatomic, strong) DSAPILockInformation * _Nullable lockInformation;
/// When <em>true,</em> prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope.   Additionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes.   However, if the `messageLock` node is set to <em>true</em> and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.
@property (nonatomic) BOOL messageLock;
@property (nonatomic, copy) NSString * _Nullable name;
/// The user's new password.
@property (nonatomic, copy) NSString * _Nullable newPassword;
@property (nonatomic, strong) DSAPINotification * _Nullable notification;
/// The URI for retrieving notifications.
@property (nonatomic, copy) NSURL * _Nullable notificationUri;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable owner;
/// An integer value specifying the number of document pages in the template.
@property (nonatomic, copy) NSString * _Nullable pageCount;
/// The user's encrypted password hash.
@property (nonatomic, copy) NSString * _Nullable password;
@property (nonatomic, copy) NSString * _Nullable passwordProtected;
/// The date that a purge was completed.
@property (nonatomic, copy) NSDate * _Nullable purgeCompletedDate;
/// The date that a purge was requested.
@property (nonatomic, copy) NSDate * _Nullable purgeRequestDate;
/// Shows the current purge state for the envelope. Valid values:  - `unpurged`: There has been no successful request to purge documents. - `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged. - `documents_dequeued`: The envelope documents have been taken out of the purge queue. - `documents_purged`: The envelope documents have been successfully purged. - `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged. - `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged. - `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted. - `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.  <em>Related topics</em>  - <a href="/docs/esign-rest-api/esign101/concepts/documents/purging/">Purging documents (eSingature Concepts)</a> - <a href="https://www.docusign.com/blog/developers/purging-documents-envelope">Purging documents in an envelope (blog post)</a>
@property (nonatomic, copy) NSString * _Nullable purgeState;
@property (nonatomic, strong) DSAPIRecipients * _Nullable recipients;
/// When <em>true,</em> prevents senders from changing, correcting, or deleting the recipient information for the envelope.
@property (nonatomic) BOOL recipientsLock;
/// Contains a URI for an endpoint that you can use to retrieve the recipients.
@property (nonatomic, copy) NSURL * _Nullable recipientsUri;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable sender;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
/// When <em>true,</em> recipients can sign on a mobile device.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL signerCanSignOnMobile;
/// Specifies the physical location where the signing takes place. It can have two enumeration values; `inPerson` and `online`. The default value is `online`.
@property (nonatomic, copy) NSString * _Nullable signingLocation;
/// Indicates the envelope status. Valid values are:  * `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in. * `created`: The envelope is created as a draft. It can be modified and sent later. * `declined`: The envelope has been declined by the recipients. * `delivered`: The envelope has been delivered to the recipients. * `sent`: The envelope will be sent to the recipients after the envelope is created. * `signed`: The envelope has been signed by the recipients. * `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.
@property (nonatomic, copy) NSString * _Nullable status;
/// The data and time that the status changed.
@property (nonatomic, copy) NSDate * _Nullable statusChangedDateTime;
/// The DateTime that the envelope changed status (i.e. was created or sent.)
@property (nonatomic, copy) NSDate * _Nullable statusDateTime;
/// The unique identifier of the template. If this is not provided, DocuSign will generate a value.
@property (nonatomic, copy) NSString * _Nullable templateId;
/// The URI for retrieving the templates.
@property (nonatomic, copy) NSURL * _Nullable templatesUri;
/// Used to identify an envelope.   The ID is a sender-generated value and is valid in the DocuSign system for 7 days.  It is recommended that a transaction ID is used for offline  signing to ensure that an envelope is not sent multiple times.  The `transactionId` property can be used determine an envelope's  status (i.e. was it created or not) in cases where the internet c  onnection was lost before the envelope status was returned.
@property (nonatomic, copy) NSString * _Nullable transactionId;
/// A URI containing the user ID.
@property (nonatomic, copy) NSURL * _Nullable uri;
/// When <em>true,</em> the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When <em>false,</em> the Electronic Record and Signature Disclosure is not shown to any envelope recipients.   If the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.
@property (nonatomic, copy) NSString * _Nullable useDisclosure;
/// The date and time the envelope or template was voided.
@property (nonatomic, copy) NSDate * _Nullable voidedDateTime;
/// The reason the envelope or template was voided.
@property (nonatomic, copy) NSString * _Nullable voidedReason;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface DSAPIEnvelopeTemplate (SWIFT_EXTENSION(DocuSignAPI))
- (id _Nullable)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end


/// Information about templates.
SWIFT_CLASS("_TtC11DocuSignAPI28DSAPIEnvelopeTemplateResults")
@interface DSAPIEnvelopeTemplateResults : NSObject
/// The last index position in the result set.
@property (nonatomic, copy) NSString * _Nullable endPosition;
/// The list of requested templates.
@property (nonatomic, copy) NSArray<DSAPIEnvelopeTemplate *> * _Nullable envelopeTemplates;
/// A list of folder objects.
@property (nonatomic, copy) NSArray<DSAPIFolder *> * _Nullable folders;
/// The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search.
@property (nonatomic, copy) NSURL * _Nullable nextUri;
/// The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search.
@property (nonatomic, copy) NSURL * _Nullable previousUri;
/// The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.
@property (nonatomic, copy) NSString * _Nullable resultSetSize;
/// The starting index position of the current result set.
@property (nonatomic, copy) NSString * _Nullable startPosition;
/// The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.
@property (nonatomic, copy) NSString * _Nullable totalSetSize;
- (nonnull instancetype)initWithEndPosition:(NSString * _Nullable)endPosition envelopeTemplates:(NSArray<DSAPIEnvelopeTemplate *> * _Nullable)envelopeTemplates folders:(NSArray<DSAPIFolder *> * _Nullable)folders nextUri:(NSURL * _Nullable)nextUri previousUri:(NSURL * _Nullable)previousUri resultSetSize:(NSString * _Nullable)resultSetSize startPosition:(NSString * _Nullable)startPosition totalSetSize:(NSString * _Nullable)totalSetSize OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This object describes errors that occur. It is only valid for responses and ignored in requests.
SWIFT_CLASS("_TtC11DocuSignAPI17DSAPIErrorDetails")
@interface DSAPIErrorDetails : NSObject
/// The code associated with the error condition.
@property (nonatomic, copy) NSString * _Nullable errorCode;
/// A brief message describing the error condition.
@property (nonatomic, copy) NSString * _Nullable message;
- (nonnull instancetype)initWithErrorCode:(NSString * _Nullable)errorCode message:(NSString * _Nullable)message OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// A complex element that specifies the expiration settings for the envelope. When an envelope expires, it is voided and no longer available for signing. <em>Note:</em> there is a short delay between when the envelope expires and when it is voided.
SWIFT_CLASS("_TtC11DocuSignAPI16DSAPIExpirations")
@interface DSAPIExpirations : NSObject
/// An integer that sets the number of days the envelope is active. For this value to be used, `expireEnabled` must be explicitly set to <em>true.</em>
@property (nonatomic, copy) NSString * _Nullable expireAfter;
/// When <em>true,</em> the envelope expires in the number of days set by `expireAfter`. When <em>false</em> or not set, the envelope expires in the number of days specified by the <a href="https://support.docusign.com/en/guides/ndse-admin-guide-reminders-and-expirations">default expiration account setting</a>.
@property (nonatomic) BOOL expireEnabled;
/// An integer that specifying the number of days before the envelope expires that an expiration warning email is sent to the recipient. When 0 (zero), no warning email is sent.
@property (nonatomic, copy) NSString * _Nullable expireWarn;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithExpireAfter:(NSString * _Nullable)expireAfter expireEnabled:(BOOL)expireEnabled expireWarn:(NSString * _Nullable)expireWarn OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPITelemetryEvent;

/// This response object is returned after you post a telemetry event.
SWIFT_CLASS("_TtC11DocuSignAPI25DSAPIFailedTelemetryEvent")
@interface DSAPIFailedTelemetryEvent : NSObject
/// The event resulting in the failure.
@property (nonatomic, strong) DSAPITelemetryEvent * _Nullable event;
/// The failure reason.
@property (nonatomic, copy) NSString * _Nullable failureReason;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithEvent:(DSAPITelemetryEvent * _Nullable)event failureReason:(NSString * _Nullable)failureReason OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that displays the recipient's first name. This tab takes the recipient's name as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.
SWIFT_CLASS("_TtC11DocuSignAPI14DSAPIFirstName")
@interface DSAPIFirstName : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This object contains details about a folder.
SWIFT_CLASS("_TtC11DocuSignAPI11DSAPIFolder")
@interface DSAPIFolder : NSObject
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The ID of the folder.
@property (nonatomic, copy) NSString * _Nullable folderId;
/// A collection of folder objects returned in a response.
@property (nonatomic, copy) NSArray<DSAPIFolder *> * _Nullable folders;
/// When <em>true,</em> the current user has access to the folder.
@property (nonatomic) BOOL hasAccess;
/// When <em>true,</em> the folder has subfolders.
@property (nonatomic) BOOL hasSubFolders;
/// The number of items in the folder.
@property (nonatomic, copy) NSString * _Nullable itemCount;
/// The name of the folder.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable owner;
/// The ID of the parent folder, or the special value `root` for the root folder.
@property (nonatomic, copy) NSString * _Nullable parentFolderId;
/// The URI of the parent folder.
@property (nonatomic, copy) NSURL * _Nullable parentFolderUri;
/// The number of subfolders.
@property (nonatomic, copy) NSString * _Nullable subFolderCount;
/// The type of folder. Possible values include:  - `draft` - `inbox` - `normal` (a system-generated folder) - `recyclebin` - `sentitems` - `custom` (a custom folder created by a user)
@property (nonatomic, copy) NSString * _Nullable type;
/// The URI for the folder.
@property (nonatomic, copy) NSURL * _Nullable uri;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI20DSAPIFoldersResponse")
@interface DSAPIFoldersResponse : NSObject
/// The last index position in the result set.
@property (nonatomic, copy) NSString * _Nullable endPosition;
/// An array containing PowerForm data.
@property (nonatomic, copy) NSArray<DSAPIEnvelopeSummary *> * _Nullable envelopes;
/// A list of folder objects.
@property (nonatomic, copy) NSArray<DSAPIFolder *> * _Nullable folders;
/// The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search.
@property (nonatomic, copy) NSURL * _Nullable nextUri;
/// The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search.
@property (nonatomic, copy) NSURL * _Nullable previousUri;
/// The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.
@property (nonatomic, copy) NSString * _Nullable resultSetSize;
/// The starting index position of the current result set.
@property (nonatomic, copy) NSString * _Nullable startPosition;
/// The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.
@property (nonatomic, copy) NSString * _Nullable totalSetSize;
- (nonnull instancetype)initWithEndPosition:(NSString * _Nullable)endPosition envelopes:(NSArray<DSAPIEnvelopeSummary *> * _Nullable)envelopes folders:(NSArray<DSAPIFolder *> * _Nullable)folders nextUri:(NSURL * _Nullable)nextUri previousUri:(NSURL * _Nullable)previousUri resultSetSize:(NSString * _Nullable)resultSetSize startPosition:(NSString * _Nullable)startPosition totalSetSize:(NSString * _Nullable)totalSetSize OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The value of a formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the formula tab calculates and displays the result.  The `formula` property of the tab contains the references to the underlying tabs. See [Calculated Fields][calculatedfields] in the DocuSign Support Center to learn more about formulas.  If a formula tab contains a `paymentDetails` property, the tab is considered a payment item. See [Requesting Payments Along with Signatures][paymentguide] in the DocuSign Support Center to learn more about payments.  [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIFormulaTab")
@interface DSAPIFormulaTab : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// Contains the formula for calculating the value of this tab.  Use a tab's `tabLabel`, enclosed in brackets, to refer to it.  For example, you want to present the total cost of two items, tax included.  The cost of each item is stored in number tabs labeled Item1 and Item2. The tax rate is in a number tab labeled TaxRate.  The formula string for this property would be: `([Item1] + [Item2]) * (1 + [TaxRate])`  See [Calculated Fields][calculatedfields] in the DocuSign Support Center to learn more about formulas.  Maximum Length: 2000 characters  [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
@property (nonatomic, copy) NSString * _Nullable formula;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formulaMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// If this is a regular formula (no `paymentDetails` property is present):  * <em>true:</em> The tab is hidden. * <em>false:</em> The tab is shown.  If the formula is payment item (a `paymentDetails` property is present):  * <em>true:</em> The tab is displayed as a payment. * <em>false:</em> The tab is displayed as a regular formula.
@property (nonatomic, copy) NSString * _Nullable hidden;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable hiddenMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL isPaymentAmount;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable isPaymentAmountMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// The number of decimal places to round to.
@property (nonatomic, copy) NSString * _Nullable roundDecimalPlaces;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable roundDecimalPlacesMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+35, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+35, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that displays the recipient's full name.
SWIFT_CLASS("_TtC11DocuSignAPI13DSAPIFullName")
@interface DSAPIFullName : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPIOfflineAttributes;
@class DSAPIRecipientSignatureInformation;

/// Contains information about an in-person recipient. This is a DocuSign user, acting as a Signing Host, who is in the same physical location as the signer. To learn about the fields used for the eNotary feature, see the [recipients resource][resource].  [resource]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/#in-person-signer-recipient
SWIFT_CLASS("_TtC11DocuSignAPI19DSAPIInPersonSigner")
@interface DSAPIInPersonSigner : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// When <em>true,</em> specifies that the signer can perform the signing ceremony offline.
@property (nonatomic) BOOL canSignOffline;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion.   If this number is greater than `0` for a signing group, only the user who previously completed may sign again.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// The reason why the recipient was created (for example, `sender`). This property is read-only.
@property (nonatomic, copy) NSString * _Nullable creationReason;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// When <em>true,</em> this is the default recipient for the envelope. This option is used when creating an envelope from a template.
@property (nonatomic) BOOL defaultRecipient;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The signer's email address in an eNotary flow.  Use only when `inPersonSigningType` is `notary`. For regular in-person-signer flow, use `signerEmail` instead.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The email address of the signing host. This is the DocuSign user that is hosting the in-person signing session.  Required when `inPersonSigningType` is `inPersonSigner`. For eNotary flow, use `email` instead.  Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable hostEmail;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable hostEmailMetadata;
/// The name of the signing host. This is the DocuSign user that is hosting the in-person signing session.  Required when `inPersonSigningType` is `inPersonSigner`. For eNotary flow, use `name` instead.  Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable hostName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable hostNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// Specifies whether the envelope uses the eNotary feature. Valid values:  * `inPersonSigner`: The envelope uses the normal in-person signing flow. * `notary`: The envelope uses the eNotary in-person signing flow.
@property (nonatomic, copy) NSString * _Nullable inPersonSigningType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable inPersonSigningTypeMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The signer's full legal name in an eNotary flow.  Required when `inPersonSigningType` is `notary`. For a regular in-person-signer flow, use `signerName` instead.  Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
@property (nonatomic, copy) NSString * _Nullable notaryId;
/// A note sent to the in-person signer in the signing email. This note is visible only to this recipient.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
@property (nonatomic, strong) DSAPIOfflineAttributes * _Nullable offlineAttributes;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// When <em>true,</em> specifies that the recipient creates the tabs.
@property (nonatomic) BOOL recipientSuppliesTabs;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.  This parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates.   Set this parameter to `safe` to use a SAFE-BioPharma certificate.  The signer must be enrolled in the SAFE program to sign with a SAFE certificate.
@property (nonatomic, copy) NSString * _Nullable requireSignerCertificate;
/// When <em>true,</em> the signer must print, sign, and upload or fax the signed documents to DocuSign.
@property (nonatomic) BOOL requireSignOnPaper;
/// When <em>true,</em> the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.
@property (nonatomic) BOOL requireUploadSignature;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
@property (nonatomic, strong) DSAPIRecipientSignatureInformation * _Nullable signatureInfo;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// The in-person signer's email address.  Required when `inPersonSigningType` is `inPersonSigner`. For eNotary flow, use `email` instead.  Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signerEmail;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signerEmailMetadata;
/// The signer's first name.
@property (nonatomic, copy) NSString * _Nullable signerFirstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signerFirstNameMetadata;
/// The signer's last name.
@property (nonatomic, copy) NSString * _Nullable signerLastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signerLastNameMetadata;
/// Required. The full legal name of a signer for the envelope.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signerName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signerNameMetadata;
/// When <em>true</em> and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).
@property (nonatomic, copy) NSString * _Nullable signInEachLocation;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signInEachLocationMetadata;
/// Not applicable. You cannot use a signing group for an in-person signer.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// Not applicable.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The total number of tabs in the documents. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to initial the document. May be optional.
SWIFT_CLASS("_TtC11DocuSignAPI16DSAPIInitialHere")
@interface DSAPIInitialHere : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable handDrawRequired;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// When <em>true,</em> the recipient does not need to complete this tab to complete the signing process.
@property (nonatomic) BOOL optional;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable optionalMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Sets the size for the InitialHere tab. It can be value from 0.5 to 1.0, where 1.0 represents full size and 0.5 is 50% size.
@property (nonatomic, copy) NSString * _Nullable scaleValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable scaleValueMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+2, -7)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+2, -7)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
@property (nonatomic, copy) NSString * _Nullable imageDataBase64;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Contains information about an intermediary recipient. An intermediary is a recipient who can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order, unless subsequent agents, editors or intermediaries are added.
SWIFT_CLASS("_TtC11DocuSignAPI17DSAPIIntermediary")
@interface DSAPIIntermediary : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address. Notification of the document to sign is sent to this email address.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name. Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipientÃ¢ÂÂs email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that displays the recipient's last name. This tab takes the recipient's name as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.
SWIFT_CLASS("_TtC11DocuSignAPI13DSAPILastName")
@interface DSAPILastName : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This tab offers a list of options to choose from. The `listItems` property contains a list of <a href="/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/">`listItem`</a> objects to specify the selectable options.
SWIFT_CLASS("_TtC11DocuSignAPI9DSAPIList")
@interface DSAPIList : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// The value in the list that is selected by default.
@property (nonatomic, copy) NSString * _Nullable listSelectedValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable listSelectedValueMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic, copy) NSString * _Nullable requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The value to use when the item is selected.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This object represents a list custom field from which envelope creators and senders can select custom data.
SWIFT_CLASS("_TtC11DocuSignAPI20DSAPIListCustomField")
@interface DSAPIListCustomField : NSObject
/// If you are using merge fields, this property specifies the type of the merge field. The only supported value is `salesforce`.
@property (nonatomic, copy) NSString * _Nullable configurationType;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The ID of the custom field.
@property (nonatomic, copy) NSString * _Nullable fieldId;
/// An array of strings that represents the options in a list.  Maximum length: 2048 characters, but each individual option string can only be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable listItems;
/// The name of the custom field.
@property (nonatomic, copy) NSString * _Nullable name;
/// When <em>true,</em> senders are required to select an option from the list before they can send the envelope.
@property (nonatomic) BOOL required;
/// When <em>true,</em> the field displays in the <em>Envelope Custom Fields</em> section when a user creates or sends an envelope.
@property (nonatomic) BOOL show;
/// The value of the custom field. This is the value that the user who creates or sends the envelope selects from the list.
@property (nonatomic, copy) NSString * _Nullable value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConfigurationType:(NSString * _Nullable)configurationType errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails fieldId:(NSString * _Nullable)fieldId listItems:(NSArray<NSString *> * _Nullable)listItems name:(NSString * _Nullable)name required:(BOOL)required show:(BOOL)show value:(NSString * _Nullable)value OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DocuSignAPI20DSAPILockInformation")
@interface DSAPILockInformation : NSObject
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The number of seconds to lock the envelope for editing.  This value must be greater than `0` seconds.
@property (nonatomic, copy) NSString * _Nullable lockDurationInSeconds;
/// The human-readable name of the application that is locking the envelope or template. This value displays to the user in error messages when lock conflicts occur.
@property (nonatomic, copy) NSString * _Nullable lockedByApp;
@property (nonatomic, strong) DSAPIUserInfo * _Nullable lockedByUser;
/// The date and time that the lock expires.
@property (nonatomic, copy) NSDate * _Nullable lockedUntilDateTime;
/// A unique identifier provided to the owner of the lock. You must use this token with subsequent calls to prove ownership of the lock.
@property (nonatomic, copy) NSString * _Nullable lockToken;
/// The type of lock.  Currently `edit` is the only supported type.
@property (nonatomic, copy) NSString * _Nullable lockType;
/// When <em>true,</em> a scratchpad is used to edit information.
@property (nonatomic) BOOL useScratchPad;
- (nonnull instancetype)initWithErrorDetails:(DSAPIErrorDetails * _Nullable)errorDetails lockDurationInSeconds:(NSString * _Nullable)lockDurationInSeconds lockedByApp:(NSString * _Nullable)lockedByApp lockedByUser:(DSAPIUserInfo * _Nullable)lockedByUser lockedUntilDateTime:(NSDate * _Nullable)lockedUntilDateTime lockToken:(NSString * _Nullable)lockToken lockType:(NSString * _Nullable)lockType useScratchPad:(BOOL)useScratchPad OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIPathExtendedElement;

/// Contains information for transfering values between Salesforce data fields and DocuSign Tabs.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIMergeField")
@interface DSAPIMergeField : NSObject
/// When <em>true,</em> the sender can modify the value of the `mergeField` tab during the sending process.
@property (nonatomic) BOOL allowSenderToEdit;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable allowSenderToEditMetadata;
/// If you are using merge fields, this property specifies the type of the merge field. The only supported value is `salesforce`.
@property (nonatomic, copy) NSString * _Nullable configurationType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable configurationTypeMetadata;
/// Sets the object associated with the custom tab. Currently this is the Salesforce Object.
@property (nonatomic, copy) NSString * _Nullable path;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIPathExtendedElement *> * _Nullable pathExtended;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pathExtendedMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pathMetadata;
/// Specifies the row number in a Salesforce table that the merge field value corresponds to.
@property (nonatomic, copy) NSString * _Nullable row;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable rowMetadata;
/// When <em>true,</em> data entered into the merge field during Signing will update the mapped Salesforce field.
@property (nonatomic) BOOL writeBack;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable writeBackMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAllowSenderToEdit:(BOOL)allowSenderToEdit allowSenderToEditMetadata:(DSAPIPropertyMetadata * _Nullable)allowSenderToEditMetadata configurationType:(NSString * _Nullable)configurationType configurationTypeMetadata:(DSAPIPropertyMetadata * _Nullable)configurationTypeMetadata path:(NSString * _Nullable)path pathExtended:(NSArray<DSAPIPathExtendedElement *> * _Nullable)pathExtended pathExtendedMetadata:(DSAPIPropertyMetadata * _Nullable)pathExtendedMetadata pathMetadata:(DSAPIPropertyMetadata * _Nullable)pathMetadata row:(NSString * _Nullable)row rowMetadata:(DSAPIPropertyMetadata * _Nullable)rowMetadata writeBack:(BOOL)writeBack writeBackMetadata:(DSAPIPropertyMetadata * _Nullable)writeBackMetadata OBJC_DESIGNATED_INITIALIZER;
@end


/// A name-value pair that describes an item and provides a value for the item.
SWIFT_CLASS("_TtC11DocuSignAPI14DSAPINameValue")
@interface DSAPINameValue : NSObject
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The name of the item.
@property (nonatomic, copy) NSString * _Nullable name;
/// The initial value of the item.
@property (nonatomic, copy) NSString * _Nullable originalValue;
/// The current value of the item.
@property (nonatomic, copy) NSString * _Nullable value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithErrorDetails:(DSAPIErrorDetails * _Nullable)errorDetails name:(NSString * _Nullable)name originalValue:(NSString * _Nullable)originalValue value:(NSString * _Nullable)value OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DocuSignAPI20DSAPINotaryRecipient")
@interface DSAPINotaryRecipient : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditEmail;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditName;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSURL * _Nullable bulkRecipientsUri;
/// When <em>true,</em> specifies that the signer can perform the signing ceremony offline.
@property (nonatomic) BOOL canSignOffline;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// The reason why the item was created.
@property (nonatomic, copy) NSString * _Nullable creationReason;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// When <em>true,</em> this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.
@property (nonatomic) BOOL defaultRecipient;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address. Notification of the document to sign is sent to this email address.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The user's first name.  Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable isBulkRecipient;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable isBulkRecipientMetadata;
/// The user's last name.  Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// URL that directs the recipient to LiveOak to complete the remote online notarization process. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable liveOakStartURL;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum length: 100 characters.  Note: You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// Not applicable to Notary tab.
@property (nonatomic, copy) NSString * _Nullable notaryId;
@property (nonatomic, copy) NSString * _Nullable notarySignerEmailSent;
/// An array of strings that correspond to the `recipientId` of each signer in the notary group. This property is read-only.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable notarySigners;
/// The notary type. This property is read-only. Valid values:  - `inperson` - `remote`
@property (nonatomic, copy) NSString * _Nullable notaryType;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
@property (nonatomic, strong) DSAPIOfflineAttributes * _Nullable offlineAttributes;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// When <em>true,</em> specifies that the recipient creates the tabs.
@property (nonatomic) BOOL recipientSuppliesTabs;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.  This parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates.   Set this parameter to `safe` to use a SAFE-BioPharma certificate.  The signer must be enrolled in the SAFE program to sign with a SAFE certificate.
@property (nonatomic, copy) NSString * _Nullable requireSignerCertificate;
/// When <em>true,</em> the signer must print, sign, and upload or fax the signed documents to DocuSign.
@property (nonatomic) BOOL requireSignOnPaper;
/// When <em>true,</em> the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.
@property (nonatomic) BOOL requireUploadSignature;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
@property (nonatomic, strong) DSAPIRecipientSignatureInformation * _Nullable signatureInfo;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// When <em>true</em> and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).
@property (nonatomic) BOOL signInEachLocation;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signInEachLocationMetadata;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.
@property (nonatomic, copy) NSString * _Nullable status;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A tab that displays additional information, in the form of a note, for the recipient.
SWIFT_CLASS("_TtC11DocuSignAPI9DSAPINote")
@interface DSAPINote : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.  <em>Note:</em> Approve, Date Signed, Decline, Email Address, and Note tabs do not display custom tooltip text in the signing interface. Although you can technically set a value via the API for these tabs, it will not be displayed to the recipient.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIReminders;

/// A complex element that specifies the notification settings for the envelope.
SWIFT_CLASS("_TtC11DocuSignAPI17DSAPINotification")
@interface DSAPINotification : NSObject
@property (nonatomic, strong) DSAPIExpirations * _Nullable expirations;
@property (nonatomic, strong) DSAPIReminders * _Nullable reminders;
/// When <em>true,</em> the account default notification settings are used for the envelope, overriding the reminders and expirations settings. When <em>false,</em> the reminders and expirations settings specified in this request are used. The default value is <em>false.</em>
@property (nonatomic) BOOL useAccountDefaults;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithExpirations:(DSAPIExpirations * _Nullable)expirations reminders:(DSAPIReminders * _Nullable)reminders useAccountDefaults:(BOOL)useAccountDefaults OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to enter numbers and decimal (.) points.
SWIFT_CLASS("_TtC11DocuSignAPI11DSAPINumber")
@interface DSAPINumber : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// Contains the formula for calculating the value of this tab.  Use a tab's `tabLabel`, enclosed in brackets, to refer to it.  For example, you want to present the total cost of two items, tax included.  The cost of each item is stored in number tabs labeled Item1 and Item2. The tax rate is in a number tab labeled TaxRate.  The formula string for this property would be: `([Item1] + [Item2]) * (1 + [TaxRate])`  See [Calculated Fields][calculatedfields] in the DocuSign Support Center to learn more about formulas.  Maximum Length: 2000 characters  [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
@property (nonatomic, copy) NSString * _Nullable formula;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formulaMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL isPaymentAmount;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable isPaymentAmountMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Reserved for DocuSign use.
SWIFT_CLASS("_TtC11DocuSignAPI22DSAPIOfflineAttributes")
@interface DSAPIOfflineAttributes : NSObject
/// The GUID of the account associated with the consumer disclosure.
@property (nonatomic, copy) NSString * _Nullable accountEsignId;
/// A string containing information about the model of the device used for offline signing.
@property (nonatomic, copy) NSString * _Nullable deviceModel;
/// A string containing information about the type of device used for offline signing.
@property (nonatomic, copy) NSString * _Nullable deviceName;
/// A string containing the latitude of the device location at the time of signing.
@property (nonatomic, copy) NSString * _Nullable gpsLatitude;
/// A string containing the longitude of the device location at the time of signing.
@property (nonatomic, copy) NSString * _Nullable gpsLongitude;
/// A signing hash used for offline signing.
@property (nonatomic, copy) NSString * _Nullable offlineSigningHash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAccountEsignId:(NSString * _Nullable)accountEsignId deviceModel:(NSString * _Nullable)deviceModel deviceName:(NSString * _Nullable)deviceName gpsLatitude:(NSString * _Nullable)gpsLatitude gpsLongitude:(NSString * _Nullable)gpsLongitude offlineSigningHash:(NSString * _Nullable)offlineSigningHash OBJC_DESIGNATED_INITIALIZER;
@end


/// Description of a page of a document.
SWIFT_CLASS("_TtC11DocuSignAPI9DSAPIPage")
@interface DSAPIPage : NSObject
/// The number of dots per inch used for the page image.
@property (nonatomic, copy) NSString * _Nullable dpi;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The height of the page in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
/// The number of image bytes.
@property (nonatomic, copy) NSString * _Nullable imageBytes;
/// The MIME type.
@property (nonatomic, copy) NSString * _Nullable mimeType;
/// The ID of the page.
@property (nonatomic, copy) NSString * _Nullable pageId;
/// The sequence of the page in the document, or page number.
@property (nonatomic, copy) NSString * _Nullable sequence;
/// The width of the page in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
- (nonnull instancetype)initWithDpi:(NSString * _Nullable)dpi errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails height:(NSString * _Nullable)height imageBytes:(NSString * _Nullable)imageBytes mimeType:(NSString * _Nullable)mimeType pageId:(NSString * _Nullable)pageId sequence:(NSString * _Nullable)sequence width:(NSString * _Nullable)width OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI24DSAPIPathExtendedElement")
@interface DSAPIPathExtendedElement : NSObject
@property (nonatomic, copy) NSString * _Nullable name;
/// The type of this tab. Values are:  - Approve - CheckBox - Company - Date - DateSigned, Decline - Email, EmailAddress - EnvelopeId - FirstName - Formula - FullName, InitialHere - InitialHereOptional - LastName - List - Note - Number - Radio - SignerAttachment - SignHere - SignHereOptional - Ssn - Text - Title - Zip5 - Zip5Dash4
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable typeName;
- (nonnull instancetype)initWithName:(NSString * _Nullable)name type:(NSString * _Nullable)type typeName:(NSString * _Nullable)typeName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Metadata about a property.
SWIFT_CLASS("_TtC11DocuSignAPI21DSAPIPropertyMetadata")
@interface DSAPIPropertyMetadata : NSObject
/// An array of option strings supported by this setting.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable options;
/// Indicates whether the property is editable. Valid values are:  - `editable` - `read_only`
@property (nonatomic, copy) NSString * _Nullable rights;
- (nonnull instancetype)initWithOptions:(NSArray<NSString *> * _Nullable)options rights:(NSString * _Nullable)rights OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// One of the selectable radio buttons in the `radios` property of a <a href="/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/">`radioGroup`</a> tab.
SWIFT_CLASS("_TtC11DocuSignAPI10DSAPIRadio")
@interface DSAPIRadio : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// Specifies the page number on which the tab is located. Must be 1 for supplemental documents.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// When <em>true,</em> the radio button is selected.
@property (nonatomic) BOOL selected;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable selectedMetadata;
/// Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAnchorAllowWhiteSpaceInCharacters:(BOOL)anchorAllowWhiteSpaceInCharacters anchorAllowWhiteSpaceInCharactersMetadata:(DSAPIPropertyMetadata * _Nullable)anchorAllowWhiteSpaceInCharactersMetadata anchorCaseSensitive:(BOOL)anchorCaseSensitive anchorCaseSensitiveMetadata:(DSAPIPropertyMetadata * _Nullable)anchorCaseSensitiveMetadata anchorHorizontalAlignment:(NSString * _Nullable)anchorHorizontalAlignment anchorHorizontalAlignmentMetadata:(DSAPIPropertyMetadata * _Nullable)anchorHorizontalAlignmentMetadata anchorIgnoreIfNotPresent:(BOOL)anchorIgnoreIfNotPresent anchorIgnoreIfNotPresentMetadata:(DSAPIPropertyMetadata * _Nullable)anchorIgnoreIfNotPresentMetadata anchorMatchWholeWord:(BOOL)anchorMatchWholeWord anchorMatchWholeWordMetadata:(DSAPIPropertyMetadata * _Nullable)anchorMatchWholeWordMetadata anchorString:(NSString * _Nullable)anchorString anchorStringMetadata:(DSAPIPropertyMetadata * _Nullable)anchorStringMetadata anchorTabProcessorVersion:(NSString * _Nullable)anchorTabProcessorVersion anchorTabProcessorVersionMetadata:(DSAPIPropertyMetadata * _Nullable)anchorTabProcessorVersionMetadata anchorUnits:(NSString * _Nullable)anchorUnits anchorUnitsMetadata:(DSAPIPropertyMetadata * _Nullable)anchorUnitsMetadata anchorXOffset:(NSString * _Nullable)anchorXOffset anchorXOffsetMetadata:(DSAPIPropertyMetadata * _Nullable)anchorXOffsetMetadata anchorYOffset:(NSString * _Nullable)anchorYOffset anchorYOffsetMetadata:(DSAPIPropertyMetadata * _Nullable)anchorYOffsetMetadata bold:(BOOL)bold boldMetadata:(DSAPIPropertyMetadata * _Nullable)boldMetadata errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails font:(NSString * _Nullable)font fontColor:(NSString * _Nullable)fontColor fontColorMetadata:(DSAPIPropertyMetadata * _Nullable)fontColorMetadata fontMetadata:(DSAPIPropertyMetadata * _Nullable)fontMetadata fontSize:(NSString * _Nullable)fontSize fontSizeMetadata:(DSAPIPropertyMetadata * _Nullable)fontSizeMetadata italic:(BOOL)italic italicMetadata:(DSAPIPropertyMetadata * _Nullable)italicMetadata locked:(BOOL)locked lockedMetadata:(DSAPIPropertyMetadata * _Nullable)lockedMetadata pageNumber:(NSString * _Nullable)pageNumber pageNumberMetadata:(DSAPIPropertyMetadata * _Nullable)pageNumberMetadata required:(BOOL)required requiredMetadata:(DSAPIPropertyMetadata * _Nullable)requiredMetadata selected:(BOOL)selected selectedMetadata:(DSAPIPropertyMetadata * _Nullable)selectedMetadata status:(NSString * _Nullable)status statusMetadata:(DSAPIPropertyMetadata * _Nullable)statusMetadata tabId:(NSString * _Nullable)tabId tabIdMetadata:(DSAPIPropertyMetadata * _Nullable)tabIdMetadata tabOrder:(NSString * _Nullable)tabOrder tabOrderMetadata:(DSAPIPropertyMetadata * _Nullable)tabOrderMetadata underline:(BOOL)underline underlineMetadata:(DSAPIPropertyMetadata * _Nullable)underlineMetadata value:(NSString * _Nullable)value valueMetadata:(DSAPIPropertyMetadata * _Nullable)valueMetadata xPosition:(NSString * _Nullable)xPosition xPositionMetadata:(DSAPIPropertyMetadata * _Nullable)xPositionMetadata yPosition:(NSString * _Nullable)yPosition yPositionMetadata:(DSAPIPropertyMetadata * _Nullable)yPositionMetadata OBJC_DESIGNATED_INITIALIZER;
@end


/// This group tab is used to place radio buttons on a document. The `radios` property contains a list of <a href="/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/">`radio`</a> objects  associated with the group. Only one radio button can be selected in a group.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIRadioGroup")
@interface DSAPIRadioGroup : NSObject
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
/// The name of the group. The search_text provided in the call automatically performs a wild card search on group_name.
@property (nonatomic, copy) NSString * _Nullable groupName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable groupNameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// Specifies the locations and status for radio buttons that are grouped together.
@property (nonatomic, copy) NSArray<DSAPIRadio *> * _Nullable radios;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tooltipMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConditionalParentLabel:(NSString * _Nullable)conditionalParentLabel conditionalParentLabelMetadata:(DSAPIPropertyMetadata * _Nullable)conditionalParentLabelMetadata conditionalParentValue:(NSString * _Nullable)conditionalParentValue conditionalParentValueMetadata:(DSAPIPropertyMetadata * _Nullable)conditionalParentValueMetadata documentId:(NSString * _Nullable)documentId documentIdMetadata:(DSAPIPropertyMetadata * _Nullable)documentIdMetadata groupName:(NSString * _Nullable)groupName groupNameMetadata:(DSAPIPropertyMetadata * _Nullable)groupNameMetadata originalValue:(NSString * _Nullable)originalValue originalValueMetadata:(DSAPIPropertyMetadata * _Nullable)originalValueMetadata radios:(NSArray<DSAPIRadio *> * _Nullable)radios recipientId:(NSString * _Nullable)recipientId recipientIdGuid:(NSString * _Nullable)recipientIdGuid recipientIdGuidMetadata:(DSAPIPropertyMetadata * _Nullable)recipientIdGuidMetadata recipientIdMetadata:(DSAPIPropertyMetadata * _Nullable)recipientIdMetadata requireAll:(BOOL)requireAll requireAllMetadata:(DSAPIPropertyMetadata * _Nullable)requireAllMetadata requireInitialOnSharedChange:(BOOL)requireInitialOnSharedChange requireInitialOnSharedChangeMetadata:(DSAPIPropertyMetadata * _Nullable)requireInitialOnSharedChangeMetadata shared:(BOOL)shared sharedMetadata:(DSAPIPropertyMetadata * _Nullable)sharedMetadata shareToRecipients:(NSString * _Nullable)shareToRecipients shareToRecipientsMetadata:(DSAPIPropertyMetadata * _Nullable)shareToRecipientsMetadata tabType:(NSString * _Nullable)tabType tabTypeMetadata:(DSAPIPropertyMetadata * _Nullable)tabTypeMetadata templateLocked:(BOOL)templateLocked templateLockedMetadata:(DSAPIPropertyMetadata * _Nullable)templateLockedMetadata templateRequired:(BOOL)templateRequired templateRequiredMetadata:(DSAPIPropertyMetadata * _Nullable)templateRequiredMetadata tooltip:(NSString * _Nullable)tooltip tooltipMetadata:(DSAPIPropertyMetadata * _Nullable)tooltipMetadata value:(NSString * _Nullable)value valueMetadata:(DSAPIPropertyMetadata * _Nullable)valueMetadata OBJC_DESIGNATED_INITIALIZER;
@end


/// Describes an additional notification method.
SWIFT_CLASS("_TtC11DocuSignAPI36DSAPIRecipientAdditionalNotification")
@interface DSAPIRecipientAdditionalNotification : NSObject
/// The secondary delivery method. One of:  - `email` - `fax` - `SMS` - `offline`
@property (nonatomic, copy) NSString * _Nullable secondaryDeliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable secondaryDeliveryMethodMetadata;
/// The status of the delivery. This property is read-only.  One of:  - `autoresponded` - `optedout` - `limitreached`
@property (nonatomic, copy) NSString * _Nullable secondaryDeliveryStatus;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI24DSAPIRecipientAttachment")
@interface DSAPIRecipientAttachment : NSObject
/// The unique identifier for the attachment.
@property (nonatomic, copy) NSString * _Nullable attachmentId;
/// Specifies the type of the attachment for the recipient. Possible values are:  - `.htm` - `.xml`
@property (nonatomic, copy) NSString * _Nullable attachmentType;
/// A Base64-encoded representation of the attachment that is used to upload and download the file. File attachments may be up to 50 MB in size.
@property (nonatomic, copy) NSString * _Nullable data;
/// An optional label for the attachment.
@property (nonatomic, copy) NSString * _Nullable label;
/// The name of the attachment.
@property (nonatomic, copy) NSString * _Nullable name;
/// The URL of a previously staged chunked upload. Using a chunked upload enables you to stage a large, chunkable temp file. You then use the `remoteUrl` property to reference the chunked upload as the content in attachment and document-related requests. The `remoteUrl` property cannot be used for downloads.
@property (nonatomic, copy) NSURL * _Nullable remoteUrl;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAttachmentId:(NSString * _Nullable)attachmentId attachmentType:(NSString * _Nullable)attachmentType data:(NSString * _Nullable)data label:(NSString * _Nullable)label name:(NSString * _Nullable)name remoteUrl:(NSURL * _Nullable)remoteUrl OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DocuSignAPI31DSAPIRecipientEmailNotification")
@interface DSAPIRecipientEmailNotification : NSObject
/// The body of the email message.
@property (nonatomic, copy) NSString * _Nullable emailBody;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailBodyMetadata;
/// The subject line for the email notification.
@property (nonatomic, copy) NSString * _Nullable emailSubject;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailSubjectMetadata;
/// The language to use for the standard email format and signing view for a recipient.  For example, in the recipient's email notification, this setting affects elements such as the standard introductory text describing the request to sign. It also determines the language used for buttons and tabs in both the email notification and the signing experience.  <em>Note:</em> This setting affects only DocuSign standard text. Any custom text that you enter for the `emailBody` and `emailSubject` of the notification is not translated, and appears exactly as you enter it.   To retrieve the possible values, use the [Accounts::listSupportedLanguages][ListLang] method.  [ListLang]: /docs/esign-rest-api/reference/accounts/accounts/listsupportedlanguages/
@property (nonatomic, copy) NSString * _Nullable supportedLanguage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable supportedLanguageMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithEmailBody:(NSString * _Nullable)emailBody emailBodyMetadata:(DSAPIPropertyMetadata * _Nullable)emailBodyMetadata emailSubject:(NSString * _Nullable)emailSubject emailSubjectMetadata:(DSAPIPropertyMetadata * _Nullable)emailSubjectMetadata supportedLanguage:(NSString * _Nullable)supportedLanguage supportedLanguageMetadata:(DSAPIPropertyMetadata * _Nullable)supportedLanguageMetadata OBJC_DESIGNATED_INITIALIZER;
@end


/// Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication.
SWIFT_CLASS("_TtC11DocuSignAPI31DSAPIRecipientSMSAuthentication")
@interface DSAPIRecipientSMSAuthentication : NSObject
/// An array containing a list of phone numbers that the recipient can use for SMS text authentication.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable senderProvidedNumbers;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderProvidedNumbersMetadata;
- (nonnull instancetype)initWithSenderProvidedNumbers:(NSArray<NSString *> * _Nullable)senderProvidedNumbers senderProvidedNumbersMetadata:(DSAPIPropertyMetadata * _Nullable)senderProvidedNumbersMetadata OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.  Used only with recipient types In Person Signers and Signers.
SWIFT_CLASS("_TtC11DocuSignAPI34DSAPIRecipientSignatureInformation")
@interface DSAPIRecipientSignatureInformation : NSObject
/// The font type to use for the signature if the signature is not drawn. The following font styles  are supported. The quotes are to indicate that these values are strings, not `enums`.  - `&quot;1_DocuSign&quot;` - `&quot;2_DocuSign&quot;` - `&quot;3_DocuSign&quot;` - `&quot;4_DocuSign&quot;` - `&quot;5_DocuSign&quot;` - `&quot;6_DocuSign&quot;` - `&quot;7_DocuSign&quot;` - `&quot;8_DocuSign&quot;` - `&quot;Mistral&quot;` - `&quot;Rage Italic&quot;`
@property (nonatomic, copy) NSString * _Nullable fontStyle;
/// Specifies the user's signature in initials format.
@property (nonatomic, copy) NSString * _Nullable signatureInitials;
/// Specifies the user's signature name.
@property (nonatomic, copy) NSString * _Nullable signatureName;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFontStyle:(NSString * _Nullable)fontStyle signatureInitials:(NSString * _Nullable)signatureInitials signatureName:(NSString * _Nullable)signatureName OBJC_DESIGNATED_INITIALIZER;
@end


/// The recipient details that are returned after you update the recipient.
SWIFT_CLASS("_TtC11DocuSignAPI28DSAPIRecipientUpdateResponse")
@interface DSAPIRecipientUpdateResponse : NSObject
/// When you use the query parameter `combine_same_order_recipients` on the PUT Recipients call, the `recipientUpdateResponse` returns this property. When <em>true,</em> it indicates that the recipient has been combined or merged with a matching recipient. Recipient matching occurs as part of template matching, and is based on Recipient Role and Routing Order.
@property (nonatomic, copy) NSString * _Nullable combined;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
- (nonnull instancetype)initWithCombined:(NSString * _Nullable)combined errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails recipientId:(NSString * _Nullable)recipientId recipientIdGuid:(NSString * _Nullable)recipientIdGuid tabs:(DSAPITabs * _Nullable)tabs OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The request body for the <a href="/docs/esign-rest-api/reference/envelopes/envelopeviews/createrecipient/">EnvelopeViews: createRecipient</a> and <a href="/docs/esign-rest-api/reference/envelopes/envelopeviews/createsharedrecipient/">EnvelopeViews: createSharedRecipient</a> methods.
SWIFT_CLASS("_TtC11DocuSignAPI25DSAPIRecipientViewRequest")
@interface DSAPIRecipientViewRequest : NSObject
/// A unique identifier of the authentication event executed by the client application.
@property (nonatomic, copy) NSString * _Nullable assertionId;
/// A sender-generated value that indicates the date and time that the signer was authenticated.
@property (nonatomic, copy) NSString * _Nullable authenticationInstant;
/// Required. Choose a value that most closely matches the technique your application used to authenticate the recipient / signer.   Choose a value from this list:  * Biometric  * Email * HTTPBasicAuth * Kerberos * KnowledgeBasedAuth * None * PaperDocuments * Password * RSASecureID * SingleSignOn_CASiteminder * SingleSignOn_InfoCard * SingleSignOn_MicrosoftActiveDirectory * SingleSignOn_Other * SingleSignOn_Passport * SingleSignOn_SAML * Smartcard * SSLMutualAuth * X509Certificate  This information is included in the Certificate of Completion.
@property (nonatomic, copy) NSString * _Nullable authenticationMethod;
/// A sender-created value. If provided, the recipient is treated as an embedded (captive) recipient or signer.  Use your application's client ID (user ID) for the recipient. Doing so enables the details of your application's authentication of the recipient to be connected to the recipient's signature if the signature is disputed or repudiated.  Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// (Required) Specifies the email of the recipient. You can use either `email` and `userName` or `userId` to identify the recipient.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable frameAncestors;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable messageOrigins;
/// Only used if `pingUrl` is specified. This is the interval, in seconds, between pings on the `pingUrl`.  The default is `300` seconds. Valid values are 60-1200 seconds.
@property (nonatomic, copy) NSString * _Nullable pingFrequency;
/// The client URL that the DocuSign Signing experience should ping to indicate to the client that Signing is active. An HTTP GET call is executed against the client. The response from the client is ignored. The intent is for the client to reset its session timer when the request is received.
@property (nonatomic, copy) NSURL * _Nullable pingUrl;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// (Required) The URL to which the user should be redirected after the signing session has ended.  Maximum Length: 470 characters. If the `returnUrl` exceeds this limit, the user is redirected to a truncated URL Be sure to include `https://` in the URL or redirecting might fail on some browsers.   When DocuSign redirects to this URL, it will include an `event` query parameter that your app can use:  * `access_code_failed`: Recipient used incorrect access code. * `cancel`: Recipient canceled the signing operation,   possibly by using the <em>Finish Later</em> option. * `decline`: Recipient declined to sign. * `exception`: A system error occurred during the signing process. * `fax_pending`: Recipient has a fax pending. * `id_check_failed`: Recipient failed an ID check. * `session_timeout`: The session timed out. An account can control this timeout by using the <em>Signer Session Timeout</em> option. * `signing_complete`: The recipient completed the signing ceremony. * `ttl_expired`: The Time To Live token for the envelope has expired.   After being successfully invoked, these tokens expire   after 5 minutes or if the envelope is voided. * `viewing_complete`: The recipient completed viewing an envelope   that is in a read-only/terminal state,   such as completed, declined, or voided.
@property (nonatomic, copy) NSURL * _Nullable returnUrl;
/// The domain in which the user authenticated.
@property (nonatomic, copy) NSString * _Nullable securityDomain;
/// The user ID of the recipient. You can use either the user ID or email and user name to identify the recipient.   If `userId` is used and a `clientUserId` is provided, the value in the `userId` property must match a `recipientId` (which you can retrieve with a GET recipients call) for the envelope.   If a `userId` is used and a `clientUserId` is not provided, the `userId` must match the user ID of the authenticating user.
@property (nonatomic, copy) NSString * _Nullable userId;
/// The username of the recipient. You can use either `email` and `userName` or `userId` to identify the recipient.
@property (nonatomic, copy) NSString * _Nullable userName;
/// Specifies whether a browser should be allowed to render a page in a frame or IFrame. Setting this property ensures that your content is not embedded into unauthorized pages or frames.  Valid values are:  - `deny`: The page cannot be displayed in a frame. - `same_origin`: The page can only be displayed in a frame on the same origin as the page itself. - `allow_from`: The page can only be displayed in a frame on the origin specified by the `xFrameOptionsAllowFromUrl` property.
@property (nonatomic, copy) NSString * _Nullable xFrameOptions;
/// When the value of `xFrameOptions` is `allow_from`, this property specifies the origin on which the page is allowed to display in a frame. If the value of `xFrameOptions` is `allow_from`, you must include a value for this property.
@property (nonatomic, copy) NSURL * _Nullable xFrameOptionsAllowFromUrl;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DSAPISealSign;
@class DSAPISigner;
@class DSAPIWitness;

/// Specifies the envelope recipients.
SWIFT_CLASS("_TtC11DocuSignAPI15DSAPIRecipients")
@interface DSAPIRecipients : NSObject
/// A list of agent recipients assigned to the documents.
@property (nonatomic, copy) NSArray<DSAPIAgent *> * _Nullable agents;
/// A list of carbon copy recipients assigned to the documents.
@property (nonatomic, copy) NSArray<DSAPICarbonCopy *> * _Nullable carbonCopies;
/// A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.
@property (nonatomic, copy) NSArray<DSAPICertifiedDelivery *> * _Nullable certifiedDeliveries;
/// The routing order of the current recipient. If this value equals a particular signer's routing order, it indicates that the envelope has been sent to that recipient, but he or she has not completed the required actions.
@property (nonatomic, copy) NSString * _Nullable currentRoutingOrder;
/// A list of users who can edit the envelope.
@property (nonatomic, copy) NSArray<DSAPIEditor *> * _Nullable editors;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.
@property (nonatomic, copy) NSArray<DSAPIInPersonSigner *> * _Nullable inPersonSigners;
/// Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).
@property (nonatomic, copy) NSArray<DSAPIIntermediary *> * _Nullable intermediaries;
/// A list of notary recipients on the envelope.
@property (nonatomic, copy) NSArray<DSAPINotaryRecipient *> * _Nullable notaries;
/// The number of recipients in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientCount;
/// A list of electronic seals to apply to documents.
@property (nonatomic, copy) NSArray<DSAPISealSign *> * _Nullable seals;
/// A list of signers on the envelope.
@property (nonatomic, copy) NSArray<DSAPISigner *> * _Nullable signers;
/// A list of signers who act as witnesses on the envelope.
@property (nonatomic, copy) NSArray<DSAPIWitness *> * _Nullable witnesses;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAgents:(NSArray<DSAPIAgent *> * _Nullable)agents carbonCopies:(NSArray<DSAPICarbonCopy *> * _Nullable)carbonCopies certifiedDeliveries:(NSArray<DSAPICertifiedDelivery *> * _Nullable)certifiedDeliveries currentRoutingOrder:(NSString * _Nullable)currentRoutingOrder editors:(NSArray<DSAPIEditor *> * _Nullable)editors errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails inPersonSigners:(NSArray<DSAPIInPersonSigner *> * _Nullable)inPersonSigners intermediaries:(NSArray<DSAPIIntermediary *> * _Nullable)intermediaries notaries:(NSArray<DSAPINotaryRecipient *> * _Nullable)notaries recipientCount:(NSString * _Nullable)recipientCount seals:(NSArray<DSAPISealSign *> * _Nullable)seals signers:(NSArray<DSAPISigner *> * _Nullable)signers witnesses:(NSArray<DSAPIWitness *> * _Nullable)witnesses OBJC_DESIGNATED_INITIALIZER;
@end


@interface DSAPIRecipients (SWIFT_EXTENSION(DocuSignAPI))
- (id _Nullable)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end


/// This is the response that the API returns after you update recipients.
SWIFT_CLASS("_TtC11DocuSignAPI28DSAPIRecipientsUpdateSummary")
@interface DSAPIRecipientsUpdateSummary : NSObject
/// An array of `recipientUpdateResults` objects that contain details about the recipients.
@property (nonatomic, copy) NSArray<DSAPIRecipientUpdateResponse *> * _Nullable recipientUpdateResults;
- (nonnull instancetype)initWithRecipientUpdateResults:(NSArray<DSAPIRecipientUpdateResponse *> * _Nullable)recipientUpdateResults OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A complex element that specifies reminder settings for the envelope.
SWIFT_CLASS("_TtC11DocuSignAPI14DSAPIReminders")
@interface DSAPIReminders : NSObject
/// An integer specifying the number of days after the recipient receives the envelope that reminder emails are sent to the recipient. The default value is 0.
@property (nonatomic, copy) NSString * _Nullable reminderDelay;
/// When <em>true,</em> reminders are enabled. The default value is <em>false.</em>
@property (nonatomic) BOOL reminderEnabled;
/// An integer specifying the interval in days between reminder emails. The default value is 0.
@property (nonatomic, copy) NSString * _Nullable reminderFrequency;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithReminderDelay:(NSString * _Nullable)reminderDelay reminderEnabled:(BOOL)reminderEnabled reminderFrequency:(NSString * _Nullable)reminderFrequency OBJC_DESIGNATED_INITIALIZER;
@end


/// Specifies one or more electronic seals to apply on documents. An electronic seal recipient is a legal entity rather than an actual person. Electronic Seals can be used by organizations and governments to show evidence of origin and integrity of documents. Even though electronic seals can be represented by a tab in a document, they do not require user interaction and apply automatically in the order specified by the sender. The sender is therefore the person authorizing usage of the electronic seal in the flow.  Example:   ```json &quot;recipients&quot;: {       &quot;seals&quot;: [         {           &quot;recipientId&quot;: &quot;1&quot;,           &quot;routingOrder&quot; : 1,           &quot;recipientSignatureProviders&quot;: [             {               &quot;sealName&quot;: &quot;52e9d968-xxxx-xxxx-xxxx-4682bc45c106&quot;             }        ]      }    ]  },     .     .     . ``` For more information about Electronic Seals, see <a href="https://support.docusign.com/en/guides/ndse-user-guide-apply-electronic-seals">Apply Electronic Seals to Your Documents</a>.
SWIFT_CLASS("_TtC11DocuSignAPI13DSAPISealSign")
@interface DSAPISealSign : NSObject
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// Not applicable.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// Not applicable.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// Not applicable.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// Not applicable.
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// Not applicable.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable name;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
/// Not applicable.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// (Required) The `recipientId` used when the envelope or template was created.   This is a local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// Not applicable.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// (Optional, default: 1)  Specifies the routing order of the electronic seal in the envelope. The routing order assigned to your electronic seal cannot be shared with another recipient. It is recommended that you set a routing order for your electronic seals.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// Not applicable.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
/// Not applicable.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable suppressEmails;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// Not applicable.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Metadata that indicates whether a property is editable and describes setting-specific options.
SWIFT_CLASS("_TtC11DocuSignAPI21DSAPISettingsMetadata")
@interface DSAPISettingsMetadata : NSObject
/// When <em>true,</em> indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).
@property (nonatomic) BOOL is21CFRPart11;
/// An array of option strings supported by this setting.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable options;
/// Indicates whether the property is editable. Valid values are:  - `editable` - `read_only`
@property (nonatomic, copy) NSString * _Nullable rights;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable uiHint;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable uiOrder;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable uiType;
- (nonnull instancetype)initWithIs21CFRPart11:(BOOL)is21CFRPart11 options:(NSArray<NSString *> * _Nullable)options rights:(NSString * _Nullable)rights uiHint:(NSString * _Nullable)uiHint uiOrder:(NSString * _Nullable)uiOrder uiType:(NSString * _Nullable)uiType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIStamp;

/// A tab that allows the recipient to sign a document. May be optional.
SWIFT_CLASS("_TtC11DocuSignAPI13DSAPISignHere")
@interface DSAPISignHere : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable handDrawRequired;
/// Not applicable to Sign Here tab.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em>  the tab contains a visual representation for an electronic seal in a document.
@property (nonatomic) BOOL isSealSignTab;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// When <em>true,</em> the recipient does not need to complete this tab to complete the signing process.
@property (nonatomic) BOOL optional;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable optionalMetadata;
/// Specifies the page number on which the tab is located. Must be 1 for supplemental documents.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Scales the size of the tab. This field accepts values from 0.5 to 2.0, where  0.5 is half the normal size, 1.0 is normal size, and 2.0 is twice the normal size.
@property (nonatomic, copy) NSString * _Nullable scaleValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable scaleValueMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, strong) DSAPIStamp * _Nullable stamp;
/// The type of stamp. Valid values are:  - `signature`: A signature image. This is the default value. - `stamp`: A stamp image. - null
@property (nonatomic, copy) NSString * _Nullable stampType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable stampTypeMetadata;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// Not applicable to Sign Here tab.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+1, -7)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+1, -7)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
@property (nonatomic, copy) NSString * _Nullable imageDataBase64;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A complex type containing information about a signer recipient. A signer is a recipient who must take action on a document, such as sign, initial, date, or add data to form fields on a document.
SWIFT_CLASS("_TtC11DocuSignAPI11DSAPISigner")
@interface DSAPISigner : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// Optional element. When <em>true,</em> the agent recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditEmail;
/// Optional. When <em>true,</em> the agent recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditName;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSURL * _Nullable bulkRecipientsUri;
/// When <em>true,</em> specifies that the signer can perform the signing ceremony offline.
@property (nonatomic) BOOL canSignOffline;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// The reason why the item was created.
@property (nonatomic, copy) NSString * _Nullable creationReason;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// When <em>true,</em> this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.
@property (nonatomic) BOOL defaultRecipient;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address. The system sends notifications about the documents to sign to this address. Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name. Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// When <em>true,</em> this signer is a bulk recipient and the recipient information is contained in a bulk recipient file.   Note that when this is true the email and name for the recipient becomes bulk@recipient.com and &quot;Bulk Recipient&quot;. These fields can not be changed for the bulk recipient.
@property (nonatomic) BOOL isBulkRecipient;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable isBulkRecipientMetadata;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The `recipientId` of the notary for this signer.
@property (nonatomic, copy) NSString * _Nullable notaryId;
@property (nonatomic, copy) NSString * _Nullable notarySignerEmailSent;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
@property (nonatomic, strong) DSAPIOfflineAttributes * _Nullable offlineAttributes;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// When <em>true,</em> specifies that the recipient creates the tabs.
@property (nonatomic) BOOL recipientSuppliesTabs;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// Sets the type of signer certificate required for signing. If left blank, no certificate is required. Only one type of certificate can be set for a signer. Valid values:  * `docusign_express`: Requires a DocuSign Express certificate. * `safe`: Requires a SAFE-BioPharma certificate. * `open_trust`: Requires an OpenTrust certificate.   <em>Important:</em> There are certain rules and restrictions that must be followed when requiring OpenTrust digital signatures. See [ML:OpenTrust Rules and Restrictions] for more information.
@property (nonatomic, copy) NSString * _Nullable requireSignerCertificate;
/// When <em>true,</em> the signer must print, sign, and upload or fax the signed documents to DocuSign.
@property (nonatomic) BOOL requireSignOnPaper;
/// When <em>true,</em> the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.
@property (nonatomic) BOOL requireUploadSignature;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
@property (nonatomic, strong) DSAPIRecipientSignatureInformation * _Nullable signatureInfo;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// When <em>true</em> and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).
@property (nonatomic) BOOL signInEachLocation;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signInEachLocationMetadata;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// Specifies the status of the recipient at the time of the request. This property is read-only. Possible values are:  - `created`: The recipient is in a draft state. This is only associated with draft envelopes (envelopes with a created status). - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing web site. This is not an email delivery of the documents in an envelope. - `signed`; The recipient has completed (performed all required interactions, such as signing or entering data) all required tags in an envelope. This is a temporary state during processing, after which the recipient is automatically moved to completed. - `declined`: The recipient declined to sign the documents in the envelope. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `faxpending`: The recipient has finished signing and the system is waiting a fax attachment by the recipient before completing their signing step. - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used by the DocuSign webapp (also known as the DocuSign console) to inform senders about the auto-responded email.
@property (nonatomic, copy) NSString * _Nullable status;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
/// The total number of tabs in the documents. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to attach supporting documents to an envelope.
SWIFT_CLASS("_TtC11DocuSignAPI21DSAPISignerAttachment")
@interface DSAPISignerAttachment : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable handDrawRequired;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// When <em>true,</em> the recipient does not need to complete this tab to complete the signing process.
@property (nonatomic) BOOL optional;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable optionalMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Sets the size of the tab. This field accepts values from `0.5` to `1.0`, where `1.0` represents full size and `0.5` is 50% of full size.
@property (nonatomic, copy) NSString * _Nullable scaleValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable scaleValueMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+0, -24)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (+0, -24)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI25DSAPISocialAuthentication")
@interface DSAPISocialAuthentication : NSObject
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable authentication;
- (nonnull instancetype)initWithAuthentication:(NSString * _Nullable)authentication OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A one-line field that allows the recipient to enter a Social Security Number. The SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.
SWIFT_CLASS("_TtC11DocuSignAPI8DSAPISsn")
@interface DSAPISsn : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic, copy) NSString * _Nullable requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI10DSAPIStamp")
@interface DSAPIStamp : NSObject
/// The UTC date and time when the user adopted the signature.
@property (nonatomic, copy) NSDate * _Nullable adoptedDateTime;
/// The UTC DateTime when the item was created.
@property (nonatomic, copy) NSDate * _Nullable createdDateTime;
@property (nonatomic, copy) NSString * _Nullable customField;
@property (nonatomic, strong) DSAPIDateStampProperties * _Nullable dateStampProperties;
/// When <em>true,</em> users may not resize the stamp.
@property (nonatomic) BOOL disallowUserResizeStamp;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Optionally specify an external identifier for the user's signature.
@property (nonatomic, copy) NSString * _Nullable externalID;
@property (nonatomic, copy) NSString * _Nullable imageBase64;
/// Specificies the type of image. Valid values are:  - `signature_image` - `initials_image`
@property (nonatomic, copy) NSString * _Nullable imageType;
/// The date and time that the item was last modified.
@property (nonatomic, copy) NSDate * _Nullable lastModifiedDateTime;
/// The phonetic spelling of the `signatureName`.
@property (nonatomic, copy) NSString * _Nullable phoneticName;
/// Specifies the user's signature name.
@property (nonatomic, copy) NSString * _Nullable signatureName;
/// The format of a stamp. Valid values are:  - `NameHanko`: The stamp represents only the signer's name. - `NameDateHanko`: The stamp represents the signer's name and the date.
@property (nonatomic, copy) NSString * _Nullable stampFormat;
/// The URI for retrieving the image of the user's stamp.
@property (nonatomic, copy) NSURL * _Nullable stampImageUri;
/// The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.
@property (nonatomic, copy) NSString * _Nullable stampSizeMM;
/// Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.
@property (nonatomic, copy) NSString * _Nullable status;
- (nonnull instancetype)initWithAdoptedDateTime:(NSDate * _Nullable)adoptedDateTime createdDateTime:(NSDate * _Nullable)createdDateTime customField:(NSString * _Nullable)customField dateStampProperties:(DSAPIDateStampProperties * _Nullable)dateStampProperties disallowUserResizeStamp:(BOOL)disallowUserResizeStamp errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails externalID:(NSString * _Nullable)externalID imageBase64:(NSString * _Nullable)imageBase64 imageType:(NSString * _Nullable)imageType lastModifiedDateTime:(NSDate * _Nullable)lastModifiedDateTime phoneticName:(NSString * _Nullable)phoneticName signatureName:(NSString * _Nullable)signatureName stampFormat:(NSString * _Nullable)stampFormat stampImageUri:(NSURL * _Nullable)stampImageUri stampSizeMM:(NSString * _Nullable)stampSizeMM status:(NSString * _Nullable)status OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI13DSAPITabGroup")
@interface DSAPITabGroup : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// A unique identifier for a tab group. To assign a tab to the `tabGroup`, you assign the `TabGroupLabel` to the `tab.TabGroupLabels` array.
@property (nonatomic, copy) NSString * _Nullable groupLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable groupLabelMetadata;
/// Specifies how `maximumAllowed` and `minimumRequired` are interpreted when selecting tabs in a `tabGroup`.  Possible values are:  - `SelectAtLeast` - `SelectAtMost` - `SelectExactly` - `SelectARange`
@property (nonatomic, copy) NSString * _Nullable groupRule;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable groupRuleMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// The maximum number of tabs within the `tabGroup` that should be checked, populated, or signed. This property is used for validation.
@property (nonatomic, copy) NSString * _Nullable maximumAllowed;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maximumAllowedMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The minimum number of of tabs within the `tabGroup` that should be checked, populated, or signed. This property is used for validation.
@property (nonatomic, copy) NSString * _Nullable minimumRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable minimumRequiredMetadata;
/// Specifies the page number on which the tab is located.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// The scope of the tab group. Possible values are:  - `document` - `envelope` (default)
@property (nonatomic, copy) NSString * _Nullable tabScope;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabScopeMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DSAPIText;
@class DSAPITitle;
@class DSAPIZip;

/// Tabs indicate to recipients where they should sign, initial, or enter data on a document. They are represented graphically as symbols on documents at the time of signing. Tabs can also display data to the recipients.
SWIFT_CLASS("_TtC11DocuSignAPI9DSAPITabs")
@interface DSAPITabs : NSObject
/// A list of [Approve tabs][approve].  An Approve tab enables the recipient to approve documents without placing a signature or initials on the document. If the recipient clicks the tab during the signing process, the recipient is considered to have signed the document. No information is shown on the document of the approval, but it is recorded as a signature in the envelope history. The value of an approve tab can't be set.  [approve]:        /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIApprove *> * _Nullable approveTabs;
/// A list of [Checkbox tabs][checkbox].   A Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.   [checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPICheckbox *> * _Nullable checkboxTabs;
/// A list of [Company tabs][company].  A Company tab displays a field for the name of the recipient's company. This value can't be set.  [company]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_company
@property (nonatomic, copy) NSArray<DSAPICompany *> * _Nullable companyTabs;
/// A list of [Date Signed tabs][dateSigned].   A Date Signed tab displays the date that the recipient signed the document. This value can't be set.  [dateSigned]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIDateSigned *> * _Nullable dateSignedTabs;
/// A list of [Date tabs][date].  A Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.  <em>Note:</em> If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.   [date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIDate *> * _Nullable dateTabs;
/// A list of [Decline tabs][decline].  A Decline tab enables the recipient to decline the envelope. If the recipient clicks the tab during the signing process, the envelope is voided. The value of this tab can't be set.   [decline]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIDecline *> * _Nullable declineTabs;
/// A list of [Email Address tabs][emailAddress].  An Email Address tab displays the recipient's email as entered in the recipient information. This value can't be set.   [emailAddress]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIEmailAddress *> * _Nullable emailAddressTabs;
/// A list of [Email tabs][email].  An Email tab enables the recipient to enter an email address. This is a one-line field that checks that a valid email address is entered. It uses the same parameters as a Text tab, with the validation message and pattern set for email information. This value can be set.  When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.  [email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIEmail *> * _Nullable emailTabs;
/// A list of [Envelope ID tabs][envelopeId].  An Envelope ID tab  displays the envelope ID. Recipients cannot enter or change the information in this tab. This value can't be set.   [envelopeId]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#response201_envelopeid
@property (nonatomic, copy) NSArray<DSAPIEnvelopeId *> * _Nullable envelopeIdTabs;
/// A list of [First Name tabs][firstName].  A First Name tab displays the recipient's first name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.   [firstName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_firstname
@property (nonatomic, copy) NSArray<DSAPIFirstName *> * _Nullable firstNameTabs;
/// A list of [Formula tabs][formulaTab].  The value of a Formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the Formula tab calculates and displays the result. This value can be set.  The `formula` property of the tab contains the references to the underlying tabs. To learn more about formulas, see [Calculated Fields][calculatedfields].  If a Formula tab contains a `paymentDetails` property, the tab is considered a payment item. To learn more about payments, see [Requesting Payments Along with Signatures][paymentguide].  [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures [formulaTab]:      /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIFormulaTab *> * _Nullable formulaTabs;
/// A list of [Full Name tabs][fullName].  A Full Name tab displays the recipient's full name. This value can't be set.   [fullName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIFullName *> * _Nullable fullNameTabs;
/// A list of [Initial Here tabs][initialHere].  This type of tab enables the recipient to initial the document. May be optional. This value can't be set.  [initialHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIInitialHere *> * _Nullable initialHereTabs;
/// A list of [Last Name tabs][lastName].  A Last Name tab displays the recipient's last name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.   [lastName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPILastName *> * _Nullable lastNameTabs;
/// An array of List tabs.  A List tab enables the recipient to choose from a list of options. You specify the options in the `listItems` property. This value can't be set.  Find descriptions of all tab types in the [tabs Resource][ert].  [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIList *> * _Nullable listTabs;
/// A list of [Note tabs][note].  A Note tab displays additional information to the recipient in the form of a note. This value can be set.  [note]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPINote *> * _Nullable noteTabs;
/// A list of [Number tabs][number].  A Number tab enables the recipient to enter numbers and decimal points (.). This value can be set.    [number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPINumber *> * _Nullable numberTabs;
/// A list of [Radio Group tabs][radioGroup].  A Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio buttons associated with the group. Only one radio button can be selected in a group. This value can be set.   [radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIRadioGroup *> * _Nullable radioGroupTabs;
/// A list of [Signer Attachment tabs][signerAttachment].  This type of tab enables the recipient to attach supporting documents to an envelope. This value can't be set.   [signerAttachment]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPISignerAttachment *> * _Nullable signerAttachmentTabs;
/// A list of [Sign Here tabs][signHere].  This type of tab enables the recipient to sign a document. May be optional. This value can't be set.  [signHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPISignHere *> * _Nullable signHereTabs;
/// A list of [SSN tabs][ssn].  An SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.   [ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPISsn *> * _Nullable ssnTabs;
/// An array of `tabGroup` items.  To associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.
@property (nonatomic, copy) NSArray<DSAPITabGroup *> * _Nullable tabGroups;
/// A list of Text tabs.  A text tab enables the recipient to enter free text. This value can be set.  Find descriptions of all tab types in the [tabs Resource][ert].  [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIText *> * _Nullable textTabs;
/// A list of [Title tabs][title].  A Title tab displays the recipient's title.  This value can't be set.   [title]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPITitle *> * _Nullable titleTabs;
/// A list of [Zip tabs][zip].  A Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.   [zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
@property (nonatomic, copy) NSArray<DSAPIZip *> * _Nullable zipTabs;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The telemetry event model.
SWIFT_CLASS("_TtC11DocuSignAPI19DSAPITelemetryEvent")
@interface DSAPITelemetryEvent : NSObject
/// The app version.
@property (nonatomic, copy) NSString * _Nullable appVersion;
/// The identity (TBD).
@property (nonatomic, copy) NSString * _Nullable identity;
/// The traceToken.
@property (nonatomic, copy) NSString * _Nullable traceToken;
/// The category of the event.
@property (nonatomic, copy) NSString * _Nullable eventCategory;
/// The name of the event.
@property (nonatomic, copy) NSString * _Nullable eventName;
/// The type of the event.
@property (nonatomic, copy) NSString * _Nullable eventType;
/// The array containing application names.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable applications;
/// The client specific details.
@property (nonatomic, strong) DSAPIClientContext * _Nullable clientContext;
/// The data.
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable data;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAppVersion:(NSString * _Nullable)appVersion identity:(NSString * _Nullable)identity traceToken:(NSString * _Nullable)traceToken eventCategory:(NSString * _Nullable)eventCategory eventName:(NSString * _Nullable)eventName eventType:(NSString * _Nullable)eventType applications:(NSArray<NSString *> * _Nullable)applications clientContext:(DSAPIClientContext * _Nullable)clientContext data:(NSDictionary<NSString *, NSString *> * _Nullable)data OBJC_DESIGNATED_INITIALIZER;
@end


/// The telemetry events model.
SWIFT_CLASS("_TtC11DocuSignAPI20DSAPITelemetryEvents")
@interface DSAPITelemetryEvents : NSObject
/// The telemetry events.
@property (nonatomic, copy) NSArray<DSAPITelemetryEvent *> * _Nullable events;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithEvents:(NSArray<DSAPITelemetryEvent *> * _Nullable)events OBJC_DESIGNATED_INITIALIZER;
@end


/// This response object is returned after you post a telemetry event.
SWIFT_CLASS("_TtC11DocuSignAPI28DSAPITelemetryEventsResponse")
@interface DSAPITelemetryEventsResponse : NSObject
/// An array containing failed telemetry events.
@property (nonatomic, copy) NSArray<DSAPIFailedTelemetryEvent *> * _Nullable failedEvents;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFailedEvents:(NSArray<DSAPIFailedTelemetryEvent *> * _Nullable)failedEvents OBJC_DESIGNATED_INITIALIZER;
@end


/// Information about a specific role.
SWIFT_CLASS("_TtC11DocuSignAPI17DSAPITemplateRole")
@interface DSAPITemplateRole : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// When <em>true,</em> this recipient is the default recipient and any tabs generated by the `transformPdfFields` option are mapped to this recipient.
@property (nonatomic) BOOL defaultRecipient;
/// The email address of the person associated with a role name. It is the email address of the person specified in the `name` property.  For an in-person signer, this is the email address of the host.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
/// The full legal name of the in-person signer.  Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable inPersonSignerName;
/// Specifies the recipient's name.  For an in-person signer, this is the name of the host.
@property (nonatomic, copy) NSString * _Nullable name;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that allows the recipient to enter any type of text.
SWIFT_CLASS("_TtC11DocuSignAPI9DSAPIText")
@interface DSAPIText : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// Contains the formula for calculating the value of this tab.  Use a tab's `tabLabel`, enclosed in brackets, to refer to it.  For example, you want to present the total cost of two items, tax included.  The cost of each item is stored in number tabs labeled Item1 and Item2. The tax rate is in a number tab labeled TaxRate.  The formula string for this property would be: `([Item1] + [Item2]) * (1 + [TaxRate])`  See [Calculated Fields][calculatedfields] in the DocuSign Support Center to learn more about formulas.  Maximum Length: 2000 characters  [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
@property (nonatomic, copy) NSString * _Nullable formula;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formulaMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// Reserved for DocuSign.
@property (nonatomic) BOOL isPaymentAmount;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable isPaymentAmountMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// This object represents a free text custom field where envelope creators and senders can enter custom data.
SWIFT_CLASS("_TtC11DocuSignAPI20DSAPITextCustomField")
@interface DSAPITextCustomField : NSObject
/// If you are using merge fields, this property specifies the type of the merge field. The only supported value is `salesforce`.
@property (nonatomic, copy) NSString * _Nullable configurationType;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The ID of the custom field.
@property (nonatomic, copy) NSString * _Nullable fieldId;
/// The name of the custom field.
@property (nonatomic, copy) NSString * _Nullable name;
/// When <em>true,</em> senders are required to enter or select information for the field before they can send the envelope.
@property (nonatomic) BOOL required;
/// When <em>true,</em> the field displays in the <em>Envelope Custom Fields</em> section when a user creates or sends an envelope.
@property (nonatomic) BOOL show;
/// The value of the custom field. The user who creates or sends the envelope provides this value. Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConfigurationType:(NSString * _Nullable)configurationType errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails fieldId:(NSString * _Nullable)fieldId name:(NSString * _Nullable)name required:(BOOL)required show:(BOOL)show value:(NSString * _Nullable)value OBJC_DESIGNATED_INITIALIZER;
@end


/// A tab that displays the recipient's title.
SWIFT_CLASS("_TtC11DocuSignAPI10DSAPITitle")
@interface DSAPITitle : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Describes which account management capabilities a user has.
SWIFT_CLASS("_TtC11DocuSignAPI45DSAPIUserAccountManagementGranularInformation")
@interface DSAPIUserAccountManagementGranularInformation : NSObject
/// <em>True</em> if the user can manage account security settings.
@property (nonatomic, copy) NSString * _Nullable canManageAccountSecuritySettings;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageAccountSecuritySettingsMetadata;
/// <em>True</em> if the user can manage account settings.
@property (nonatomic, copy) NSString * _Nullable canManageAccountSettings;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageAccountSettingsMetadata;
/// <em>True</em> if the user can manage administrators.
@property (nonatomic, copy) NSString * _Nullable canManageAdmins;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageAdminsMetadata;
@property (nonatomic, copy) NSString * _Nullable canManageConnect;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageConnectMetadata;
@property (nonatomic, copy) NSString * _Nullable canManageDocumentRetention;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageDocumentRetentionMetadata;
@property (nonatomic, copy) NSString * _Nullable canManageEnvelopeTransfer;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageEnvelopeTransferMetadata;
@property (nonatomic, copy) NSString * _Nullable canManageGroupsButNotUsers;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageGroupsButNotUsersMetadata;
/// <em>True</em> if the user can manage reporting.
@property (nonatomic, copy) NSString * _Nullable canManageReporting;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageReportingMetadata;
/// <em>True</em> if the user can manage sharing.
@property (nonatomic, copy) NSString * _Nullable canManageSharing;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageSharingMetadata;
/// <em>True</em> if the user can manage signing groups.
@property (nonatomic, copy) NSString * _Nullable canManageSigningGroups;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageSigningGroupsMetadata;
/// <em>True</em> if the user can manage users.
@property (nonatomic, copy) NSString * _Nullable canManageUsers;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageUsersMetadata;
@property (nonatomic, copy) NSString * _Nullable canViewUsers;
- (nonnull instancetype)initWithCanManageAccountSecuritySettings:(NSString * _Nullable)canManageAccountSecuritySettings canManageAccountSecuritySettingsMetadata:(DSAPISettingsMetadata * _Nullable)canManageAccountSecuritySettingsMetadata canManageAccountSettings:(NSString * _Nullable)canManageAccountSettings canManageAccountSettingsMetadata:(DSAPISettingsMetadata * _Nullable)canManageAccountSettingsMetadata canManageAdmins:(NSString * _Nullable)canManageAdmins canManageAdminsMetadata:(DSAPISettingsMetadata * _Nullable)canManageAdminsMetadata canManageConnect:(NSString * _Nullable)canManageConnect canManageConnectMetadata:(DSAPISettingsMetadata * _Nullable)canManageConnectMetadata canManageDocumentRetention:(NSString * _Nullable)canManageDocumentRetention canManageDocumentRetentionMetadata:(DSAPISettingsMetadata * _Nullable)canManageDocumentRetentionMetadata canManageEnvelopeTransfer:(NSString * _Nullable)canManageEnvelopeTransfer canManageEnvelopeTransferMetadata:(DSAPISettingsMetadata * _Nullable)canManageEnvelopeTransferMetadata canManageGroupsButNotUsers:(NSString * _Nullable)canManageGroupsButNotUsers canManageGroupsButNotUsersMetadata:(DSAPISettingsMetadata * _Nullable)canManageGroupsButNotUsersMetadata canManageReporting:(NSString * _Nullable)canManageReporting canManageReportingMetadata:(DSAPISettingsMetadata * _Nullable)canManageReportingMetadata canManageSharing:(NSString * _Nullable)canManageSharing canManageSharingMetadata:(DSAPISettingsMetadata * _Nullable)canManageSharingMetadata canManageSigningGroups:(NSString * _Nullable)canManageSigningGroups canManageSigningGroupsMetadata:(DSAPISettingsMetadata * _Nullable)canManageSigningGroupsMetadata canManageUsers:(NSString * _Nullable)canManageUsers canManageUsersMetadata:(DSAPISettingsMetadata * _Nullable)canManageUsersMetadata canViewUsers:(NSString * _Nullable)canViewUsers OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI13DSAPIUserInfo")
@interface DSAPIUserInfo : NSObject
/// The account ID associated with the envelope.
@property (nonatomic, copy) NSString * _Nullable accountId;
/// The name on the account.
@property (nonatomic, copy) NSString * _Nullable accountName;
/// Access code provided to the user to activate the account.
@property (nonatomic, copy) NSString * _Nullable activationAccessCode;
/// The user's email address.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// When <em>true,</em> indicates that the user is logged in. This is a read-only property.
@property (nonatomic) BOOL loginStatus;
/// The user's membership ID.
@property (nonatomic, copy) NSString * _Nullable membershipId;
/// This field is no longer supported for most accounts. To create an eSignature user without sending an activation email, use the Admin API by following <a href="/docs/admin-api/how-to/create-active-user/">these steps</a>.
@property (nonatomic) BOOL sendActivationEmail;
/// A URI containing the user ID.
@property (nonatomic, copy) NSURL * _Nullable uri;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
/// The name of the user.
@property (nonatomic, copy) NSString * _Nullable userName;
/// Status of the user's account. One of:  - `ActivationRequired` - `ActivationSent` - `Active` - `Closed` - `Disabled`
@property (nonatomic, copy) NSString * _Nullable userStatus;
/// The type of user, for example `CompanyUser`.
@property (nonatomic, copy) NSString * _Nullable userType;
- (nonnull instancetype)initWithAccountId:(NSString * _Nullable)accountId accountName:(NSString * _Nullable)accountName activationAccessCode:(NSString * _Nullable)activationAccessCode email:(NSString * _Nullable)email errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails loginStatus:(BOOL)loginStatus membershipId:(NSString * _Nullable)membershipId sendActivationEmail:(BOOL)sendActivationEmail uri:(NSURL * _Nullable)uri userId:(NSString * _Nullable)userId userName:(NSString * _Nullable)userName userStatus:(NSString * _Nullable)userStatus userType:(NSString * _Nullable)userType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Properties that configure the settings for a user. Some elements of this object have a `metadata` property, which includes the following: - `rights`: The calling users permissions to edit this setting (can be `editable` or `read_only`) - `uiHint`: Internally used to build UIs (can be `available` or `hidden`) - `options`: The values supported for this setting (not all settings have this element)
SWIFT_CLASS("_TtC11DocuSignAPI28DSAPIUserSettingsInformation")
@interface DSAPIUserSettingsInformation : NSObject
@property (nonatomic, strong) DSAPIUserAccountManagementGranularInformation * _Nullable accountManagementGranular;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable adminOnly;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable adminOnlyMetadata;
/// When <em>true,</em> the API returns suggested tabs for documents for this user.
@property (nonatomic) BOOL allowAutoTagging;
/// When <em>true,</em> this user can participate in envelope transfers on the account.
@property (nonatomic) BOOL allowEnvelopeTransferTo;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEnvelopeTransferToMetadata;
/// When <em>true,</em> this user can create [electronic seal recipients][eseal].  [eseal]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/#seal-recipient
@property (nonatomic) BOOL allowEsealRecipients;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowEsealRecipientsMetadata;
/// When <em>true</em> and this user is an administrator, they can view all of the envelopes generated from PowerForms. The default value is <em>false.</em>
@property (nonatomic) BOOL allowPowerFormsAdminToAccessAllPowerFormEnvelope;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata;
/// When <em>true,</em> this user can set the language used in the standard email format for a recipient when creating an envelope.
@property (nonatomic) BOOL allowRecipientLanguageSelection;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowRecipientLanguageSelectionMetadata;
/// When <em>true,</em> this user can send envelopes &quot;on behalf of&quot; other users through the API.
@property (nonatomic) BOOL allowSendOnBehalfOf;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSendOnBehalfOfMetadata;
/// When <em>true,</em> this user can include supplemental documents.
@property (nonatomic) BOOL allowSupplementalDocuments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable allowSupplementalDocumentsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTagVersionedPlacementEnabled;
/// When <em>true,</em> indicates that this user can send envelope-specific API requests on the account.
@property (nonatomic) BOOL apiAccountWideAccess;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable apiAccountWideAccessMetadata;
/// When <em>true,</em> this user can export authoritative copy for the account.
@property (nonatomic) BOOL apiCanExportAC;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable apiCanExportACMetadata;
/// When <em>true,</em> this user can use the bulk send feature for the account.
@property (nonatomic) BOOL bulkSend;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable bulkSendMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable canChargeAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canChargeAccountMetadata;
/// When true, this user can edit the shared address book for the account.
@property (nonatomic, copy) NSString * _Nullable canEditSharedAddressbook;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canEditSharedAddressbookMetadata;
/// When <em>true,</em> this user can lock envelopes.
@property (nonatomic) BOOL canLockEnvelopes;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canLockEnvelopesMetadata;
/// When <em>true,</em> this user is an administrator for the account.
@property (nonatomic) BOOL canManageAccount;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageAccountMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable canManageDistributor;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageDistributorMetadata;
/// When <em>true,</em> this user can manage templates for the account.
@property (nonatomic) BOOL canManageTemplates;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canManageTemplatesMetadata;
/// When <em>true,</em> this user can send API requests on the account.
@property (nonatomic) BOOL canSendAPIRequests;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canSendAPIRequestsMetadata;
/// When <em>true,</em> this user can send envelopes on the account.
@property (nonatomic) BOOL canSendEnvelope;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canSendEnvelopeMetadata;
@property (nonatomic, copy) NSString * _Nullable canSendEnvelopesViaSMS;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canSendEnvelopesViaSMSMetadata;
/// When <em>true,</em> this user can sign envelopes.
@property (nonatomic) BOOL canSignEnvelope;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canSignEnvelopeMetadata;
/// When <em>true,</em> this user can use a scratchpad to edit information.
@property (nonatomic) BOOL canUseScratchpad;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canUseScratchpadMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable canUseSmartContracts;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable canUseSmartContractsMetadata;
/// When <em>true,</em> this user is prohibited from uploading documents during sending.
@property (nonatomic) BOOL disableDocumentUpload;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableDocumentUploadMetadata;
/// When <em>true,</em> this user can access the <em>Other Actions</em> menu.
@property (nonatomic) BOOL disableOtherActions;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable disableOtherActionsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable enableDSPro;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableDSProMetadata;
/// When <em>true,</em> the account can define the routing order of recipients for envelopes sent by using the eSignature API.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enableSequentialSigningAPI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSequentialSigningAPIMetadata;
/// When <em>true,</em> the account can define the routing order of recipients for envelopes sent by using the DocuSign application.  <em>Note:</em> Only SysAdmin users can change this setting.
@property (nonatomic) BOOL enableSequentialSigningUI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSequentialSigningUIMetadata;
/// When <em>true,</em> this user can use the signing attachments feature.
@property (nonatomic) BOOL enableSignerAttachments;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSignerAttachmentsMetadata;
/// When <em>true,</em> a user can override the default default account setting for the Sign on Paper option, which specifies whether signers can sign documents on paper as an option to signing electronically.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic) BOOL enableSignOnPaperOverride;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableSignOnPaperOverrideMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable enableTransactionPoint;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableTransactionPointMetadata;
/// When <em>true,</em> Vaulting is enabled for the account.
@property (nonatomic) BOOL enableVaulting;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable enableVaultingMetadata;
/// When <em>false,</em> this user can apply tabs to documents during the sending experience.
@property (nonatomic, copy) NSString * _Nullable expressSendOnly;
/// The user's locale code. Valid values are: - `zh_CN` - `zh_TW` - `nl` - `en` - `fr` - `de` - `it` - `ja` - `ko` - `pt` - `pt_BR` - `ru` - `es`
@property (nonatomic, copy) NSString * _Nullable locale;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable localeMetadata;
/// When <em>true,</em> this user can create and manage <a href="/docs/click-api/">Clickwraps</a>.
@property (nonatomic) BOOL manageClickwrapsMode;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable manageClickwrapsModeMetadata;
/// The user ID (GUID) of the user who last modified this user record. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable modifiedBy;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable modifiedByMetadata;
/// The date on which this user record was last modified.
@property (nonatomic, copy) NSDate * _Nullable modifiedDate;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable modifiedDateMetadata;
/// Note referencing the page that modified this user record.
@property (nonatomic, copy) NSString * _Nullable modifiedPage;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable modifiedPageMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable newSendUI;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable newSendUIMetadata;
/// Indicates the Power Form mode setting for the user: - `none` - `admin` - `user`
@property (nonatomic, copy) NSString * _Nullable powerFormMode;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable powerFormModeMetadata;
/// When <em>true,</em> this user receives notifications when envelopes are viewed.
@property (nonatomic) BOOL recipientViewedNotification;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable recipientViewedNotificationMetadata;
/// Sets how self-signed documents are presented to the email recipients. Valid values are:  - `include_pdf`: A PDF of the completed document is attached to the email. - `include_link`: A secure link to the self-signed documents is included    in the email.  <em>Note:</em> Only Admin users can change this setting.
@property (nonatomic, copy) NSString * _Nullable selfSignedRecipientEmailDocument;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable selfSignedRecipientEmailDocumentMetadata;
/// When <em>true,</em> this user gets supplemental documents when downloading documents.
@property (nonatomic) BOOL supplementalDocumentIncludeInDownload;
/// When <em>true,</em> this user must accept supplemental documents.
@property (nonatomic) BOOL supplementalDocumentsMustAccept;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable supplementalDocumentsMustAcceptMetadata;
/// When <em>true,</em> this user must both view and accept supplemental documents.
@property (nonatomic) BOOL supplementalDocumentsMustRead;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable supplementalDocumentsMustReadMetadata;
/// When <em>true,</em> this user must view supplemental documents.
@property (nonatomic) BOOL supplementalDocumentsMustView;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable supplementalDocumentsMustViewMetadata;
/// When <em>true,</em> a new template is created each time the user sends an envelope.
@property (nonatomic) BOOL templateActiveCreation;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable templateActiveCreationMetadata;
/// When <em>true,</em> the system notifies this user before applying a matching template.
@property (nonatomic) BOOL templateApplyNotify;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable templateApplyNotifyMetadata;
/// When <em>true,</em> the system automatically applies a matching template to a document if only one template matches. If there are multiple matches, it displays a list of matches to select from.
@property (nonatomic) BOOL templateAutoMatching;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable templateAutoMatchingMetadata;
/// Percentage used when matching templates.
@property (nonatomic, copy) NSString * _Nullable templateMatchingSensitivity;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable templateMatchingSensitivityMetadata;
/// When <em>true,</em> users see template matching functionality.
@property (nonatomic) BOOL templatePageLevelMatching;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable templatePageLevelMatchingMetadata;
/// When true, daylight savings time is in effect for this user's time zone.
@property (nonatomic, copy) NSString * _Nullable timezoneDST;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneDSTMetadata;
/// The custom DateTime format setting for this user.
@property (nonatomic, copy) NSString * _Nullable timezoneMask;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneMaskMetadata;
/// The timezone offset for the user. Valid values: - `tz_01_afghanistan` - `tz_02_alaskan` - `tz_03_arab` - `tz_04_arabian` - `tz_05_arabic` - `tz_06_argentina` - `tz_07_atlantic` - `tz_08_aus_central` - `tz_09_aus_eastern` - `tz_10_azerbaijan` - `tz_11_azores` - `tz_12_bangladesh` - `tz_13_canada_central` - `tz_14_cape_verde` - `tz_15_caucasus` - `tz_16_central_australia` - `tz_17_central_america` - `tz_18_central_asia` - `tz_19_central_brazilian` - `tz_20_central_europe` - `tz_21_central_european` - `tz_22_central_pacific` - `tz_23_central` - `tz_24_central_mexico` - `tz_25_china` - `tz_26_dateline` - `tz_27_east_africa` - `tz_28_east_australia` - `tz_29_east_europe` - `tz_30_east_south_america` - `tz_31_eastern` - `tz_32_egypt` - `tz_33_ekaterinburg` - `tz_34_fiji` - `tz_35_fli` - `tz_36_georgian` - `tz_37_gmt` - `tz_38_greenland` - `tz_39_greenwich` - `tz_40_gtb` - `tz_41_hawaiian` - `tz_42_india` - `tz_43_iran` - `tz_44_israel` - `tz_45_jordan` - `tz_46_kaliningrad` - `tz_47_kamchatka` - `tz_48_korea` - `tz_49_magadan` - `tz_50_mauritius` - `tz_51_mid_atlantic` - `tz_52_middle_east` - `tz_53_montevideo` - `tz_54_morocco` - `tz_55_mountain` - `tz_56_mountain_mexico` - `tz_57_myanmar` - `tz_58_north_central_asia` - `tz_59_namibia` - `tz_60_nepal` - `tz_61_new_zealand` - `tz_62_new_foundland` - `tz_63_north_asia_east` - `tz_64_north_asia` - `tz_65_pacific_sa` - `tz_66_pacific` - `tz_67_pacific_mexico` - `tz_68_pakistan` - `tz_69_paraguay` - `tz_70_romance` - `tz_71_russian` - `tz_72_sa_eastern` - `tz_73_sa_pacific` - `tz_74_sa_western` - `tz_75_samoa` - `tz_76_se_asia` - `tz_77_singapore` - `tz_78_south_africa` - `tz_79_sriLanka` - `tz_80_syria` - `tz_81_taipei` - `tz_82_tasmania` - `tz_83_tokyo` - `tz_84_tonga` - `tz_85_turkey` - `tz_86_ulaanbaatar` - `tz_87_us_eastern` - `tz_88_us_mountain` - `tz_89_venezuela` - `tz_90_vladivostok` - `tz_91_west_australia` - `tz_92_west_central_africa` - `tz_93_west_europe` - `tz_94_west_asia` - `tz_95_west_pacific` - `tz_96_yakutsk`
@property (nonatomic, copy) NSString * _Nullable timezoneOffset;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneOffsetMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable timezoneSendingPref;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneSendingPrefMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable timezoneSigningPref;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable timezoneSigningPrefMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable transactionPointSiteNameURL;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable transactionPointSiteNameURLMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable transactionPointUserName;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable transactionPointUserNameMetadata;
/// Indicates the specified Vaulting mode: - `none` - `estored` - `electronic_original`
@property (nonatomic, copy) NSString * _Nullable vaultingMode;
@property (nonatomic, strong) DSAPISettingsMetadata * _Nullable vaultingModeMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI18DSAPIUserSignature")
@interface DSAPIUserSignature : NSObject
/// The date and time the user adopted their signature.
@property (nonatomic, copy) NSDate * _Nullable adoptedDateTime;
/// The UTC DateTime when the item was created.
@property (nonatomic, copy) NSDate * _Nullable createdDateTime;
@property (nonatomic, copy) NSString * _Nullable customField;
@property (nonatomic, strong) DSAPIDateStampProperties * _Nullable dateStampProperties;
/// When <em>true,</em> users may not resize the stamp.
@property (nonatomic) BOOL disallowUserResizeStamp;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Optionally specify an external identifier for the user's signature.
@property (nonatomic, copy) NSString * _Nullable externalID;
/// A Base64-encoded representation of the signature image.
@property (nonatomic, copy) NSString * _Nullable imageBase64;
/// Specificies the type of image. Valid values are:  - `signature_image` - `initials_image`
@property (nonatomic, copy) NSString * _Nullable imageType;
/// The ID of the user's initials image.
@property (nonatomic, copy) NSString * _Nullable initials150ImageId;
/// The URI for retrieving the image of the user's initials.
@property (nonatomic, copy) NSURL * _Nullable initialsImageUri;
/// Boolean that specifies whether the signature is the default signature for the user.
@property (nonatomic, copy) NSString * _Nullable isDefault;
/// The date and time that the item was last modified.
@property (nonatomic, copy) NSDate * _Nullable lastModifiedDateTime;
/// The National Association of Realtors (NAR) membership ID for a user who is a realtor.
@property (nonatomic, copy) NSString * _Nullable nrdsId;
/// The realtor's last name.
@property (nonatomic, copy) NSString * _Nullable nrdsLastName;
/// The realtor's NAR membership status. The value `active` verifies that the user is a current NAR member. Valid values are:  - `Active` - `Inactive` - `Terminate` - `Provisional` - `Deceased` - `Suspend` - `Unknown`
@property (nonatomic, copy) NSString * _Nullable nrdsStatus;
/// The phonetic spelling of the `signatureName`.
@property (nonatomic, copy) NSString * _Nullable phoneticName;
/// The ID of the user's signature image.
@property (nonatomic, copy) NSString * _Nullable signature150ImageId;
/// The font type for the signature, if the signature is not drawn. The supported font types are:  &quot;7_DocuSign&quot;, &quot;1_DocuSign&quot;, &quot;6_DocuSign&quot;, &quot;8_DocuSign&quot;, &quot;3_DocuSign&quot;, &quot;Mistral&quot;, &quot;4_DocuSign&quot;, &quot;2_DocuSign&quot;, &quot;5_DocuSign&quot;, &quot;Rage Italic&quot;
@property (nonatomic, copy) NSString * _Nullable signatureFont;
/// Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as &quot;&&quot;, &quot;<&quot;, &quot;>&quot;) in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.
@property (nonatomic, copy) NSString * _Nullable signatureId;
/// An endpoint URI that you can use to retrieve the user's signature image.
@property (nonatomic, copy) NSURL * _Nullable signatureImageUri;
/// The initials associated with the signature.
@property (nonatomic, copy) NSString * _Nullable signatureInitials;
/// Specifies the user's signature name.
@property (nonatomic, copy) NSString * _Nullable signatureName;
/// The rights that the user has to the signature. Valid values are:  - `none` - `read` - `admin`
@property (nonatomic, copy) NSString * _Nullable signatureRights;
/// Specifies the type of signature.
@property (nonatomic, copy) NSString * _Nullable signatureType;
/// The format of a stamp. Valid values are:  - `NameHanko`: The stamp represents only the signer's name. - `NameDateHanko`: The stamp represents the signer's name and the date.
@property (nonatomic, copy) NSString * _Nullable stampFormat;
/// The URI for retrieving the image of the user's stamp.
@property (nonatomic, copy) NSURL * _Nullable stampImageUri;
/// The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.
@property (nonatomic, copy) NSString * _Nullable stampSizeMM;
/// The type of stamp. Valid values are:  - `signature`: A signature image. This is the default value. - `stamp`: A stamp image. - null
@property (nonatomic, copy) NSString * _Nullable stampType;
/// Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.
@property (nonatomic, copy) NSString * _Nullable status;
- (nonnull instancetype)initWithAdoptedDateTime:(NSDate * _Nullable)adoptedDateTime createdDateTime:(NSDate * _Nullable)createdDateTime customField:(NSString * _Nullable)customField dateStampProperties:(DSAPIDateStampProperties * _Nullable)dateStampProperties disallowUserResizeStamp:(BOOL)disallowUserResizeStamp errorDetails:(DSAPIErrorDetails * _Nullable)errorDetails externalID:(NSString * _Nullable)externalID imageBase64:(NSString * _Nullable)imageBase64 imageType:(NSString * _Nullable)imageType initials150ImageId:(NSString * _Nullable)initials150ImageId initialsImageUri:(NSURL * _Nullable)initialsImageUri isDefault:(NSString * _Nullable)isDefault lastModifiedDateTime:(NSDate * _Nullable)lastModifiedDateTime nrdsId:(NSString * _Nullable)nrdsId nrdsLastName:(NSString * _Nullable)nrdsLastName nrdsStatus:(NSString * _Nullable)nrdsStatus phoneticName:(NSString * _Nullable)phoneticName signature150ImageId:(NSString * _Nullable)signature150ImageId signatureFont:(NSString * _Nullable)signatureFont signatureId:(NSString * _Nullable)signatureId signatureImageUri:(NSURL * _Nullable)signatureImageUri signatureInitials:(NSString * _Nullable)signatureInitials signatureName:(NSString * _Nullable)signatureName signatureRights:(NSString * _Nullable)signatureRights signatureType:(NSString * _Nullable)signatureType stampFormat:(NSString * _Nullable)stampFormat stampImageUri:(NSURL * _Nullable)stampImageUri stampSizeMM:(NSString * _Nullable)stampSizeMM stampType:(NSString * _Nullable)stampType status:(NSString * _Nullable)status OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI28DSAPIUserSignatureDefinition")
@interface DSAPIUserSignatureDefinition : NSObject
@property (nonatomic, strong) DSAPIDateStampProperties * _Nullable dateStampProperties;
/// When <em>true,</em> users may not resize the stamp.
@property (nonatomic) BOOL disallowUserResizeStamp;
/// Optionally specify an external identifier for the user's signature.
@property (nonatomic, copy) NSString * _Nullable externalID;
/// Specificies the type of image. Valid values are:  - `signature_image` - `initials_image`
@property (nonatomic, copy) NSString * _Nullable imageType;
/// Boolean that specifies whether the signature is the default signature for the user.
@property (nonatomic, copy) NSString * _Nullable isDefault;
/// The National Association of Realtors (NAR) membership ID for a user who is a realtor.
@property (nonatomic, copy) NSString * _Nullable nrdsId;
/// The realtor's last name.
@property (nonatomic, copy) NSString * _Nullable nrdsLastName;
/// The phonetic spelling of the `signatureName`.
@property (nonatomic, copy) NSString * _Nullable phoneticName;
/// The font type to use for the signature if the signature is not drawn. The following font styles  are supported. The quotes are to indicate that these values are strings, not `enums`.  - `&quot;1_DocuSign&quot;` - `&quot;2_DocuSign&quot;` - `&quot;3_DocuSign&quot;` - `&quot;4_DocuSign&quot;` - `&quot;5_DocuSign&quot;` - `&quot;6_DocuSign&quot;` - `&quot;7_DocuSign&quot;` - `&quot;8_DocuSign&quot;` - `&quot;Mistral&quot;` - `&quot;Rage Italic&quot;`
@property (nonatomic, copy) NSString * _Nullable signatureFont;
/// Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as &quot;&&quot;, &quot;<&quot;, &quot;>&quot;) in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.
@property (nonatomic, copy) NSString * _Nullable signatureId;
/// Specifies the user's signature in initials format.
@property (nonatomic, copy) NSString * _Nullable signatureInitials;
/// Specifies the user's signature name.
@property (nonatomic, copy) NSString * _Nullable signatureName;
/// Specifies the type of signature.
@property (nonatomic, copy) NSString * _Nullable signatureType;
/// The format of a stamp. Valid values are:  - `NameHanko`: The stamp represents only the signer's name. - `NameDateHanko`: The stamp represents the signer's name and the date.
@property (nonatomic, copy) NSString * _Nullable stampFormat;
/// The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.
@property (nonatomic, copy) NSString * _Nullable stampSizeMM;
- (nonnull instancetype)initWithDateStampProperties:(DSAPIDateStampProperties * _Nullable)dateStampProperties disallowUserResizeStamp:(BOOL)disallowUserResizeStamp externalID:(NSString * _Nullable)externalID imageType:(NSString * _Nullable)imageType isDefault:(NSString * _Nullable)isDefault nrdsId:(NSString * _Nullable)nrdsId nrdsLastName:(NSString * _Nullable)nrdsLastName phoneticName:(NSString * _Nullable)phoneticName signatureFont:(NSString * _Nullable)signatureFont signatureId:(NSString * _Nullable)signatureId signatureInitials:(NSString * _Nullable)signatureInitials signatureName:(NSString * _Nullable)signatureName signatureType:(NSString * _Nullable)signatureType stampFormat:(NSString * _Nullable)stampFormat stampSizeMM:(NSString * _Nullable)stampSizeMM OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI30DSAPIUserSignaturesInformation")
@interface DSAPIUserSignaturesInformation : NSObject
/// An array of  `userSignature` objects.
@property (nonatomic, copy) NSArray<DSAPIUserSignature *> * _Nullable userSignatures;
- (nonnull instancetype)initWithUserSignatures:(NSArray<DSAPIUserSignature *> * _Nullable)userSignatures OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI12DSAPIViewUrl")
@interface DSAPIViewUrl : NSObject
/// URL to the Review ID page.
@property (nonatomic, copy) NSURL * _Nullable url;
- (nonnull instancetype)initWithUrl:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A complex type containing information about a witness recipient. Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
SWIFT_CLASS("_TtC11DocuSignAPI12DSAPIWitness")
@interface DSAPIWitness : NSObject
/// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
@property (nonatomic, copy) NSString * _Nullable accessCode;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable accessCodeMetadata;
/// Optional. When <em>true,</em> the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
@property (nonatomic, copy) NSString * _Nullable addAccessCodeToEmail;
/// An array of additional notification objects.
@property (nonatomic, copy) NSArray<DSAPIRecipientAdditionalNotification *> * _Nullable additionalNotifications;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditEmail;
/// Optional element. When <em>true,</em> the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.
@property (nonatomic, copy) NSString * _Nullable agentCanEditName;
/// When <em>true,</em> if the recipient is locked on a template, advanced recipient routing can override the lock.
@property (nonatomic) BOOL allowSystemOverrideForLockedRecipient;
/// When <em>true,</em> autonavigation is set for the recipient.
@property (nonatomic) BOOL autoNavigation;
/// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable autoRespondedReason;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSURL * _Nullable bulkRecipientsUri;
/// When <em>true,</em> specifies that the signer can perform the signing ceremony offline.
@property (nonatomic) BOOL canSignOffline;
/// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  <em>true,</em> an error is generated on sending.   Maximum length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable clientUserId;
/// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable completedCount;
/// The reason why the recipient was created (for example, `sender`). This property is read-only.
@property (nonatomic, copy) NSString * _Nullable creationReason;
/// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable customFields;
/// The date and time the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable declinedDateTime;
/// The reason the recipient declined the document. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable declinedReason;
/// When <em>true,</em> this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.
@property (nonatomic) BOOL defaultRecipient;
/// The date and time that the envelope was delivered to the recipient. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable deliveredDateTime;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable deliveryMethod;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable deliveryMethodMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorId;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable designatorIdGuid;
/// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true.</em>
@property (nonatomic, copy) NSArray<DSAPIDocumentVisibility *> * _Nullable documentVisibility;
/// The recipient's email address.
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable emailMetadata;
@property (nonatomic, strong) DSAPIRecipientEmailNotification * _Nullable emailNotification;
@property (nonatomic, copy) NSString * _Nullable emailRecipientPostSigningURL;
/// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   <em>Example</em>:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`
@property (nonatomic, copy) NSString * _Nullable embeddedRecipientStartURL;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to <em>true</em> for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable excludedDocuments;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable faxNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable faxNumberMetadata;
/// The recipient's first name. Maximum Length: 50 characters.
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable firstNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fullNameMetadata;
/// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   <em>Example:</em> Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
@property (nonatomic, copy) NSString * _Nullable idCheckConfigurationName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable idCheckConfigurationNameMetadata;
/// When <em>true</em> and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.
@property (nonatomic) BOOL inheritEmailNotificationConfiguration;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable isBulkRecipient;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable isBulkRecipientMetadata;
/// The recipient's last name.
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lastNameMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientPhoneAuthEditable;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable lockedRecipientSmsEditable;
/// The full legal name of the recipient. Maximum Length: 100 characters.  <em>Note:</em> You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
@property (nonatomic, copy) NSString * _Nullable notaryId;
@property (nonatomic, copy) NSString * _Nullable notarySignerEmailSent;
/// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters.
@property (nonatomic, copy) NSString * _Nullable note;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable noteMetadata;
@property (nonatomic, strong) DSAPIOfflineAttributes * _Nullable offlineAttributes;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSArray<DSAPIRecipientAttachment *> * _Nullable recipientAttachments;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
/// When <em>true,</em> specifies that the recipient creates the tabs.
@property (nonatomic) BOOL recipientSuppliesTabs;
/// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
@property (nonatomic, copy) NSString * _Nullable recipientType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientTypeMetadata;
/// When <em>true,</em> the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.
@property (nonatomic) BOOL requireIdLookup;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireIdLookupMetadata;
/// By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.  This parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates.   Set this parameter to `safe` to use a SAFE-BioPharma certificate.  The signer must be enrolled in the SAFE program to sign with a SAFE certificate.
@property (nonatomic, copy) NSString * _Nullable requireSignerCertificate;
/// When <em>true,</em> the signer must print, sign, and upload or fax the signed documents to DocuSign.
@property (nonatomic) BOOL requireSignOnPaper;
/// When <em>true,</em> the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.
@property (nonatomic) BOOL requireUploadSignature;
/// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
@property (nonatomic, copy) NSString * _Nullable roleName;
/// Specifies the routing order of the recipient in the envelope.
@property (nonatomic, copy) NSString * _Nullable routingOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable routingOrderMetadata;
/// The UTC DateTime when the envelope was sent. This property is read-only.
@property (nonatomic, copy) NSDate * _Nullable sentDateTime;
@property (nonatomic, strong) DSAPIRecipientSignatureInformation * _Nullable signatureInfo;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSDate * _Nullable signedDateTime;
/// When <em>true</em> and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).
@property (nonatomic) BOOL signInEachLocation;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signInEachLocationMetadata;
/// Optional. The ID of the <a href="https://support.docusign.com/en/guides/ndse-user-guide-signing-groups">signing group</a>.  <em>Note:</em> When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy.
@property (nonatomic, copy) NSString * _Nullable signingGroupId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable signingGroupIdMetadata;
/// Optional. The name of the signing group.   Maximum Length: 100 characters.
@property (nonatomic, copy) NSString * _Nullable signingGroupName;
/// A complex type that contains information about users in the signing group.
@property (nonatomic, copy) NSArray<DSAPIUserInfo *> * _Nullable signingGroupUsers;
@property (nonatomic, strong) DSAPIRecipientSMSAuthentication * _Nullable smsAuthentication;
/// Deprecated.
@property (nonatomic, copy) NSArray<DSAPISocialAuthentication *> * _Nullable socialAuthentications;
/// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if <em>Send-on-behalf-of</em> is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.
@property (nonatomic, copy) NSString * _Nullable status;
/// The code associated with the recipient's status. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable statusCode;
/// When <em>true,</em> email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
@property (nonatomic) BOOL suppressEmails;
@property (nonatomic, strong) DSAPITabs * _Nullable tabs;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, copy) NSString * _Nullable totalTabCount;
/// The ID of the user to access.  <em>Note:</em> Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
@property (nonatomic, copy) NSString * _Nullable userId;
/// The `recipientId` of the person or party for whom the recipient is a witness.
@property (nonatomic, copy) NSString * _Nullable witnessFor;
/// Not used. Use the `witnessFor` property instead.
@property (nonatomic, copy) NSString * _Nullable witnessForGuid;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A tab that allows the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits in the ZIP+4 format. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.
SWIFT_CLASS("_TtC11DocuSignAPI8DSAPIZip")
@interface DSAPIZip : NSObject
/// When <em>true,</em> the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is <em>true.</em>
@property (nonatomic) BOOL anchorAllowWhiteSpaceInCharacters;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorAllowWhiteSpaceInCharactersMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are placed. When <em>true,</em> the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When <em>false,</em> `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorCaseSensitive;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorCaseSensitiveMetadata;
/// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tab’s left side with the last character of the matching anchor word.  <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic, copy) NSString * _Nullable anchorHorizontalAlignment;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorHorizontalAlignmentMetadata;
/// When <em>true,</em> this tab is ignored if the `anchorString` is not found in the document.
@property (nonatomic) BOOL anchorIgnoreIfNotPresent;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorIgnoreIfNotPresentMetadata;
/// When <em>true,</em> the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is <em>false.</em>  For example, when set to <em>true,</em> if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When <em>false,</em> if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to <em>true.</em>  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to <em>true</em> (its default value).   <em>Note:</em> You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
@property (nonatomic) BOOL anchorMatchWholeWord;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorMatchWholeWordMetadata;
/// Specifies the string to find in the document and use as the basis for tab placement.
@property (nonatomic, copy) NSString * _Nullable anchorString;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorStringMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable anchorTabProcessorVersion;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorTabProcessorVersionMetadata;
/// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` - `inches` - `mms` - `cms`
@property (nonatomic, copy) NSString * _Nullable anchorUnits;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorUnitsMetadata;
/// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorXOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorXOffsetMetadata;
/// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.
@property (nonatomic, copy) NSString * _Nullable anchorYOffset;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable anchorYOffsetMetadata;
/// When <em>true,</em> the information in the tab is bold.
@property (nonatomic) BOOL bold;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable boldMetadata;
/// When <em>true,</em> the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
@property (nonatomic) BOOL concealValueOnDocument;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable concealValueOnDocumentMetadata;
/// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
@property (nonatomic, copy) NSString * _Nullable conditionalParentLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentLabelMetadata;
/// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use &quot;on&quot; as the value to show that the parent tab is active.
@property (nonatomic, copy) NSString * _Nullable conditionalParentValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable conditionalParentValueMetadata;
/// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
@property (nonatomic, copy) NSString * _Nullable customTabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable customTabIdMetadata;
/// When <em>true,</em> disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
@property (nonatomic) BOOL disableAutoSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable disableAutoSizeMetadata;
/// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
@property (nonatomic, copy) NSString * _Nullable documentId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable documentIdMetadata;
@property (nonatomic, strong) DSAPIErrorDetails * _Nullable errorDetails;
/// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana
@property (nonatomic, copy) NSString * _Nullable font;
/// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White
@property (nonatomic, copy) NSString * _Nullable fontColor;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontColorMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontMetadata;
/// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
@property (nonatomic, copy) NSString * _Nullable fontSize;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable fontSizeMetadata;
/// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
@property (nonatomic, copy) NSString * _Nullable formOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formOrderMetadata;
/// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
@property (nonatomic, copy) NSString * _Nullable formPageLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageLabelMetadata;
/// An integer specifying the order in which to present the guided form pages.
@property (nonatomic, copy) NSString * _Nullable formPageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable formPageNumberMetadata;
/// The height of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable height;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable heightMetadata;
/// When <em>true,</em> the information in the tab is italic.
@property (nonatomic) BOOL italic;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable italicMetadata;
/// When <em>true,</em> the signer cannot change the data of the custom tab.
@property (nonatomic) BOOL locked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable lockedMetadata;
/// An optional value that describes the maximum length of the property when the property is a string.
@property (nonatomic, copy) NSString * _Nullable maxLength;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable maxLengthMetadata;
@property (nonatomic, strong) DSAPIMergeField * _Nullable mergeField;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable mergeFieldXml;
/// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable nameMetadata;
/// The initial value of the tab when it was sent to the recipient.
@property (nonatomic, copy) NSString * _Nullable originalValue;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable originalValueMetadata;
/// The page number on which the tab is located. For supplemental documents, this value must be `1`.
@property (nonatomic, copy) NSString * _Nullable pageNumber;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable pageNumberMetadata;
/// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
@property (nonatomic, copy) NSString * _Nullable recipientId;
/// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
@property (nonatomic, copy) NSString * _Nullable recipientIdGuid;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdGuidMetadata;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable recipientIdMetadata;
/// When <em>true</em> and shared is true, information must be entered in this field to complete the envelope.
@property (nonatomic) BOOL requireAll;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireAllMetadata;
/// When <em>true,</em> the signer is required to fill out this tab.
@property (nonatomic) BOOL required;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requiredMetadata;
/// Optional element for field markup. When <em>true,</em> the signer is required to initial when they modify a shared field.
@property (nonatomic) BOOL requireInitialOnSharedChange;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable requireInitialOnSharedChangeMetadata;
/// When <em>true,</em> the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
@property (nonatomic) BOOL senderRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable senderRequiredMetadata;
/// When <em>true,</em> this custom tab is shared.
@property (nonatomic) BOOL shared;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable sharedMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable shareToRecipients;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable shareToRecipientsMetadata;
/// Reserved for DocuSign.
@property (nonatomic, copy) NSString * _Nullable source;
/// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable statusMetadata;
/// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tabGroupLabels;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabGroupLabelsMetadata;
/// The unique identifier for the tab.
@property (nonatomic, copy) NSString * _Nullable tabId;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabIdMetadata;
/// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters.
@property (nonatomic, copy) NSString * _Nullable tabLabel;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabLabelMetadata;
/// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
@property (nonatomic, copy) NSString * _Nullable tabOrder;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabOrderMetadata;
/// Indicates the type of tab (for example, `signHere` or `initialHere`).
@property (nonatomic, copy) NSString * _Nullable tabType;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable tabTypeMetadata;
/// When <em>true,</em> the sender cannot change any attributes of the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateLocked;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateLockedMetadata;
/// When <em>true,</em> the sender may not remove the recipient. Used only when working with template recipients.
@property (nonatomic) BOOL templateRequired;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable templateRequiredMetadata;
/// The text of a tooltip that appears when a user hovers over a form field or tab.
@property (nonatomic, copy) NSString * _Nullable tooltip;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable toolTipMetadata;
/// When <em>true,</em> the information in the tab is underlined.
@property (nonatomic) BOOL underline;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable underlineMetadata;
/// When <em>true,</em> ZIP+4 format is used.
@property (nonatomic) BOOL useDash4;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable useDash4Metadata;
/// The message displayed if the custom tab fails input validation (either custom of embedded).
@property (nonatomic, copy) NSString * _Nullable validationMessage;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationMessageMetadata;
/// A regular expression used to validate input for the tab.
@property (nonatomic, copy) NSString * _Nullable validationPattern;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable validationPatternMetadata;
/// Specifies the value of the tab.
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable valueMetadata;
/// The width of the tab in pixels.
@property (nonatomic, copy) NSString * _Nullable width;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable widthMetadata;
/// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable xPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable xPositionMetadata;
/// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2)
@property (nonatomic, copy) NSString * _Nullable yPosition;
@property (nonatomic, strong) DSAPIPropertyMetadata * _Nullable yPositionMetadata;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DocuSignAPI11DSClientAPI")
@interface DSClientAPI : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull basePath;)
+ (NSString * _Nonnull)basePath SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull customHeaders;)
+ (NSDictionary<NSString *, NSString *> * _Nonnull)customHeaders SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBasePath:(NSString * _Nonnull)basePath customHeaders:(NSDictionary<NSString *, NSString *> * _Nonnull)customHeaders;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIImage;

SWIFT_CLASS("_TtC11DocuSignAPI12EnvelopesAPI")
@interface EnvelopesAPI : NSObject
/// Gets a PDF transcript of all of the comments in an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param encoding (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)commentsGetCommentsTranscriptWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId encoding:(NSString * _Nullable)encoding completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Gets the default Electronic Record and Signature Disclosure for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param langCode (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)consumerDisclosureGetConsumerDisclosureEnvelopeIdRecipientIdWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId langCode:(NSString * _Nullable)langCode completion:(void (^ _Nonnull)(DSAPIConsumerDisclosure * _Nullable, NSError * _Nullable))completion;
/// Gets the Electronic Record and Signature Disclosure for a specific envelope recipient.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param langCode (path) The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to ï¿½browserï¿½ to automatically detect the browser language being used by the viewer and display the disclosure in that language.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param langCode (query) The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Armenian (hy), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to ï¿½browserï¿½ to automatically detect the browser language being used by the viewer and display the disclosure in that language. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)consumerDisclosureGetConsumerDisclosureEnvelopeIdRecipientIdLangCodeWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId langCode:(NSString * _Nonnull)langCode recipientId:(NSString * _Nonnull)recipientId completion:(void (^ _Nonnull)(DSAPIConsumerDisclosure * _Nullable, NSError * _Nullable))completion;
/// Deletes envelope custom fields for draft and in-process envelopes.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)customFieldsDeleteCustomFieldsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPICustomFields * _Nullable)body completion:(void (^ _Nonnull)(DSAPICustomFields * _Nullable, NSError * _Nullable))completion;
/// Creates envelope custom fields for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)customFieldsPostCustomFieldsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPICustomFields * _Nullable)body completion:(void (^ _Nonnull)(DSAPICustomFields * _Nullable, NSError * _Nullable))completion;
/// Updates envelope custom fields in an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)customFieldsPutCustomFieldsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPICustomFields * _Nullable)body completion:(void (^ _Nonnull)(DSAPICustomFields * _Nullable, NSError * _Nullable))completion;
/// Deletes documents from a draft envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsDeleteDocumentsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIEnvelopeDefinition * _Nullable)body completion:(void (^ _Nonnull)(DSAPIEnvelopeDocumentsResult * _Nullable, NSError * _Nullable))completion;
/// Gets a document from an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param certificate (query) When set to <em>false</em>, the envelope signing certificate is removed from the download. (optional)
///
/// \param documentsByUserid (query)  (optional)
///
/// \param encoding (query)  (optional)
///
/// \param encrypt (query) When set to <em>true</em>, the PDF bytes returned in the response are encrypted for all the key managers configured on your DocuSign account. The documents can be decrypted with the KeyManager Decrypt Document API. (optional)
///
/// \param language (query) Specifies the language for the Certificate of Completion in the response. The supported languages, with the language value shown in parenthesis, are: Chinese Simplified (zh_CN), , Chinese Traditional (zh_TW), Dutch (nl), English US (en), French (fr), German (de), Italian (it), Japanese (ja), Korean (ko), Portuguese (pt), Portuguese (Brazil) (pt_BR), Russian (ru), Spanish (es).  (optional)
///
/// \param recipientId (query)  (optional)
///
/// \param sharedUserId (query)  (optional)
///
/// \param showChanges (query) When set to <em>true</em>, any changed fields for the returned PDF are highlighted in yellow and optional signatures or initials outlined in red.  (optional)
///
/// \param watermark (query) When set to <em>true</em>, the account has the watermark feature enabled, and the envelope is not complete, the watermark for the account is added to the PDF documents. This option can remove the watermark.  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsGetDocumentWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId certificate:(NSString * _Nullable)certificate documentsByUserid:(NSString * _Nullable)documentsByUserid encoding:(NSString * _Nullable)encoding encrypt:(NSString * _Nullable)encrypt language:(NSString * _Nullable)language recipientId:(NSString * _Nullable)recipientId sharedUserId:(NSString * _Nullable)sharedUserId showChanges:(NSString * _Nullable)showChanges watermark:(NSString * _Nullable)watermark completion:(void (^ _Nonnull)(NSURL * _Nullable, NSError * _Nullable))completion;
/// Gets a list of documents in an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param documentsByUserid (query)  (optional)
///
/// \param includeDocumentSize (query)  (optional)
///
/// \param includeMetadata (query)  (optional)
///
/// \param includeTabs (query)  (optional)
///
/// \param recipientId (query)  (optional)
///
/// \param sharedUserId (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsGetDocumentsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId documentsByUserid:(NSString * _Nullable)documentsByUserid includeDocumentSize:(NSString * _Nullable)includeDocumentSize includeMetadata:(NSString * _Nullable)includeMetadata includeTabs:(NSString * _Nullable)includeTabs recipientId:(NSString * _Nullable)recipientId sharedUserId:(NSString * _Nullable)sharedUserId completion:(void (^ _Nonnull)(DSAPIEnvelopeDocumentsResult * _Nullable, NSError * _Nullable))completion;
/// Adds or replaces a document in an existing envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsPutDocumentWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId completion:(void (^ _Nonnull)(DSAPIEnvelopeDocument * _Nullable, NSError * _Nullable))completion;
/// Adds one or more documents to an existing envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsPutDocumentsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIEnvelopeDefinition * _Nullable)body completion:(void (^ _Nonnull)(DSAPIEnvelopeDocumentsResult * _Nullable, NSError * _Nullable))completion;
/// Deletes the email setting overrides for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)emailSettingsDeleteEmailSettingsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId completion:(void (^ _Nonnull)(DSAPIEmailSettings * _Nullable, NSError * _Nullable))completion;
/// Gets the email setting overrides for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)emailSettingsGetEmailSettingsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId completion:(void (^ _Nonnull)(DSAPIEmailSettings * _Nullable, NSError * _Nullable))completion;
/// Adds email setting overrides to an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)emailSettingsPostEmailSettingsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIEmailSettings * _Nullable)body completion:(void (^ _Nonnull)(DSAPIEmailSettings * _Nullable, NSError * _Nullable))completion;
/// Updates the email setting overrides for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)emailSettingsPutEmailSettingsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIEmailSettings * _Nullable)body completion:(void (^ _Nonnull)(DSAPIEmailSettings * _Nullable, NSError * _Nullable))completion;
/// Gets the status of a single envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param advancedUpdate (query) When true, envelope information can be added or modified. (optional)
///
/// \param include (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)envelopesGetEnvelopeWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId advancedUpdate:(NSString * _Nullable)advancedUpdate include:(NSString * _Nullable)include completion:(void (^ _Nonnull)(DSAPIEnvelope * _Nullable, NSError * _Nullable))completion;
/// Creates an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param body (body)  (optional)
///
/// \param cdseMode (query)  (optional)
///
/// \param changeRoutingOrder (query)  (optional)
///
/// \param completedDocumentsOnly (query) If set to true then we want to set the sourceEnvelopeId to indicate that this is a&quot;forward&quot; envelope action (optional)
///
/// \param mergeRolesOnDraft (query) When set to <em>true</em>, merges template roles and remove empty recipients when you create an envelope with multiple templates. (optional)
///
/// \param tabLabelExactMatches (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)envelopesPostEnvelopesWithAccountId:(NSString * _Nonnull)accountId body:(DSAPIEnvelopeDefinition * _Nullable)body cdseMode:(NSString * _Nullable)cdseMode changeRoutingOrder:(NSString * _Nullable)changeRoutingOrder completedDocumentsOnly:(NSString * _Nullable)completedDocumentsOnly mergeRolesOnDraft:(NSString * _Nullable)mergeRolesOnDraft tabLabelExactMatches:(NSString * _Nullable)tabLabelExactMatches completion:(void (^ _Nonnull)(DSAPIEnvelopeSummary * _Nullable, NSError * _Nullable))completion;
/// Deletes an envelope lock.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)lockDeleteEnvelopeLockWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId lockToken:(NSString * _Nonnull)lockToken completion:(void (^ _Nonnull)(DSAPILockInformation * _Nullable, NSError * _Nullable))completion;
/// Gets envelope lock information.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)lockGetEnvelopeLockWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId completion:(void (^ _Nonnull)(DSAPILockInformation * _Nullable, NSError * _Nullable))completion;
/// Gets envelope notification information.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)notificationGetEnvelopesEnvelopeIdNotificationWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId completion:(void (^ _Nonnull)(DSAPINotification * _Nullable, NSError * _Nullable))completion;
/// Gets a page image from an envelope for display.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param pageNumber (path) The page number being accessed.
///
/// \param dpi (query) Sets the dpi for the image. (optional)
///
/// \param maxHeight (query) Sets the maximum height for the page image in pixels. The dpi is recalculated based on this setting. (optional)
///
/// \param maxWidth (query) Sets the maximum width for the page image in pixels. The dpi is recalculated based on this setting. (optional)
///
/// \param showChanges (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)pagesGetPageImageWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId pageNumber:(NSString * _Nonnull)pageNumber dpi:(NSString * _Nullable)dpi maxHeight:(NSString * _Nullable)maxHeight maxWidth:(NSString * _Nullable)maxWidth showChanges:(NSString * _Nullable)showChanges completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Deletes a recipient from an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsDeleteRecipientWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId completion:(void (^ _Nonnull)(DSAPIRecipients * _Nullable, NSError * _Nullable))completion;
/// Deletes the tabs associated with a recipient.  <em>Note:</em> It is an error to delete a tab that has the <code>templateLocked</code> property set to true. This property corresponds to the <em>Restrict changes</em> option in the web app.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsDeleteRecipientTabsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId body:(DSAPITabs * _Nullable)body completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Deletes recipients from an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsDeleteRecipientsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIRecipients * _Nullable)body completion:(void (^ _Nonnull)(DSAPIRecipients * _Nullable, NSError * _Nullable))completion;
/// Gets the initials image for a user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param includeChrome (query) The added line and identifier around the initial image. Note: Older envelopes might only have chromed images. If getting the non-chromed image fails, try getting the chromed image. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetRecipientInitialsImageWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId includeChrome:(NSString * _Nullable)includeChrome completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Gets signature information for a signer or sign-in-person recipient.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetRecipientSignatureWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId completion:(void (^ _Nonnull)(DSAPIUserSignature * _Nullable, NSError * _Nullable))completion;
/// Retrieve signature image information for a signer/sign-in-person recipient.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param includeChrome (query) When set to <em>true</em>, indicates the chromed version of the signature image should be retrieved. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetRecipientSignatureImageWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId includeChrome:(NSString * _Nullable)includeChrome completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Gets the tabs information for a signer or sign-in-person recipient in an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param includeAnchorTabLocations (query) When set to <em>true</em>, all tabs with anchor tab properties are included in the response.  (optional)
///
/// \param includeMetadata (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetRecipientTabsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId includeAnchorTabLocations:(NSString * _Nullable)includeAnchorTabLocations includeMetadata:(NSString * _Nullable)includeMetadata completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Gets the status of recipients for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param includeAnchorTabLocations (query)  When set to <em>true</em> and `include_tabs` is set to <em>true</em>, all tabs with anchor tab properties are included in the response.  (optional)
///
/// \param includeExtended (query)  When set to <em>true</em>, the extended properties are included in the response.  (optional)
///
/// \param includeMetadata (query)  (optional)
///
/// \param includeTabs (query) When set to <em>true</em>, the tab information associated with the recipient is included in the response. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetRecipientsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId includeAnchorTabLocations:(NSString * _Nullable)includeAnchorTabLocations includeExtended:(NSString * _Nullable)includeExtended includeMetadata:(NSString * _Nullable)includeMetadata includeTabs:(NSString * _Nullable)includeTabs completion:(void (^ _Nonnull)(DSAPIRecipients * _Nullable, NSError * _Nullable))completion;
/// Adds tabs for a recipient.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPostRecipientTabsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId body:(DSAPITabs * _Nullable)body completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Adds one or more recipients to an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param resendEnvelope (query) When set to <em>true</em>, resends the   envelope if the new recipient's routing order is before or the same as the envelope's next recipient. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPostRecipientsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIRecipients * _Nullable)body resendEnvelope:(NSString * _Nullable)resendEnvelope completion:(void (^ _Nonnull)(DSAPIRecipients * _Nullable, NSError * _Nullable))completion;
/// Sets the initials image for an accountless signer.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPutRecipientInitialsImageWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId image:(UIImage * _Nonnull)image completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
/// Sets the signature image for an accountless signer.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPutRecipientSignatureImageWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId image:(UIImage * _Nonnull)image completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
/// Updates the tabs for a recipient.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPutRecipientTabsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId body:(DSAPITabs * _Nullable)body completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Updates recipients in a draft envelope or corrects recipient information for an in-process envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param combineSameOrderRecipients (query)  (optional)
///
/// \param offlineSigning (query)  (optional)
///
/// \param resendEnvelope (query) When set to <em>true</em>, resends the   envelope if the new recipient's routing order is before or the same as the envelope's next recipient. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPutRecipientsWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIRecipients * _Nullable)body combineSameOrderRecipients:(NSString * _Nullable)combineSameOrderRecipients offlineSigning:(NSString * _Nullable)offlineSigning resendEnvelope:(NSString * _Nullable)resendEnvelope completion:(void (^ _Nonnull)(DSAPIRecipientsUpdateSummary * _Nullable, NSError * _Nullable))completion;
/// Deletes tabs from a document in an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsDeleteDocumentTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPITabs * _Nullable)body completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Returns the tabs on a document.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param includeMetadata (query)  (optional)
///
/// \param pageNumbers (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsGetDocumentTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId includeMetadata:(NSString * _Nullable)includeMetadata pageNumbers:(NSString * _Nullable)pageNumbers completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Returns tabs on the specified page.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param pageNumber (path) The page number being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsGetPageTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId pageNumber:(NSString * _Nonnull)pageNumber completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Adds tabs to a document in an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsPostDocumentTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPITabs * _Nullable)body completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Updates the tabs for document.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsPutDocumentTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPITabs * _Nullable)body completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Returns a URL to the shared recipient view UI for an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)viewsPostEnvelopeRecipientSharedViewWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIRecipientViewRequest * _Nullable)body completion:(void (^ _Nonnull)(DSAPIViewUrl * _Nullable, NSError * _Nullable))completion;
/// Returns a URL to the recipient view UI.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)viewsPostEnvelopeRecipientViewWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIRecipientViewRequest * _Nullable)body completion:(void (^ _Nonnull)(DSAPIViewUrl * _Nullable, NSError * _Nullable))completion;
/// Create the link to the page for manually reviewing IDs.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)viewsPostRecipientManualReviewViewWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId recipientId:(NSString * _Nonnull)recipientId completion:(void (^ _Nonnull)(DSAPIViewUrl * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface EnvelopesAPI (SWIFT_EXTENSION(DocuSignAPI))
/// Updates recipients in a draft envelope or corrects recipient information for an in-process envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param envelopeId (path) The envelopeId Guid of the envelope being accessed.
///
/// \param body (body)  (optional)
///
/// \param multiParts (multiParts) (optional)
///
/// \param combineSameOrderRecipients (query)  (optional)
///
/// \param offlineSigning (query)  (optional)
///
/// \param resendEnvelope (query) When set to <em>true</em>, resends the   envelope if the new recipient's routing order is before or the same as the envelope's next recipient. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsPutRecipientsOfflineWithAccountId:(NSString * _Nonnull)accountId envelopeId:(NSString * _Nonnull)envelopeId body:(DSAPIRecipients * _Nullable)body multiParts:(NSDictionary<NSString *, NSArray *> * _Nullable)multiParts combineSameOrderRecipients:(NSString * _Nullable)combineSameOrderRecipients offlineSigning:(NSString * _Nullable)offlineSigning resendEnvelope:(NSString * _Nullable)resendEnvelope completion:(void (^ _Nonnull)(DSAPIRecipientsUpdateSummary * _Nullable, NSError * _Nullable))completion;
/// Creates an envelope.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param body (body)  (optional)
///
/// \param multiParts (multiParts) (optional)
///
/// \param cdseMode (query)  (optional)
///
/// \param changeRoutingOrder (query)  (optional)
///
/// \param completedDocumentsOnly (query) If set to true then we want to set the sourceEnvelopeId to indicate that this is a&quot;forward&quot; envelope action (optional)
///
/// \param mergeRolesOnDraft (query) When set to <em>true</em>, merges template roles and remove empty recipients when you create an envelope with multiple templates. (optional)
///
/// \param tabLabelExactMatches (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)envelopesPostEnvelopesOfflineWithAccountId:(NSString * _Nonnull)accountId body:(DSAPIEnvelopeDefinition * _Nullable)body multiParts:(NSDictionary<NSString *, NSArray *> * _Nullable)multiParts cdseMode:(NSString * _Nullable)cdseMode changeRoutingOrder:(NSString * _Nullable)changeRoutingOrder completedDocumentsOnly:(NSString * _Nullable)completedDocumentsOnly mergeRolesOnDraft:(NSString * _Nullable)mergeRolesOnDraft tabLabelExactMatches:(NSString * _Nullable)tabLabelExactMatches completion:(void (^ _Nonnull)(DSAPIEnvelopeSummary * _Nullable, NSError * _Nullable))completion;
@end


SWIFT_CLASS("_TtC11DocuSignAPI10FoldersAPI")
@interface FoldersAPI : NSObject
/// Gets a list of the folders for the account.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param include (query)  (optional)
///
/// \param includeItems (query)  (optional)
///
/// \param startPosition (query)  (optional)
///
/// \param template (query) Specifies the items that are returned. Valid values are:   * include - The folder list will return normal folders plus template folders.  * only - Only the list of template folders are returned. (optional)
///
/// \param userFilter (query)  (optional)
///
/// \param subFolderDepth (query) (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)foldersGetFoldersWithAccountId:(NSString * _Nonnull)accountId include:(NSString * _Nullable)include includeItems:(NSString * _Nullable)includeItems startPosition:(NSString * _Nullable)startPosition template:(NSString * _Nullable)template_ userFilter:(NSString * _Nullable)userFilter subFolderDepth:(NSString * _Nullable)subFolderDepth completion:(void (^ _Nonnull)(DSAPIFoldersResponse * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DocuSignAPI12TelemetryAPI")
@interface TelemetryAPI : NSObject
/// Initiate a new chunked upload.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)createWithEvents:(DSAPITelemetryEvents * _Nullable)events baseURL:(NSString * _Nullable)baseURL completion:(void (^ _Nonnull)(DSAPITelemetryEventsResponse * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DocuSignAPI12TemplatesAPI")
@interface TemplatesAPI : NSObject
/// Gets the custom document fields from a template.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)customFieldsGetTemplateCustomFieldsWithAccountId:(NSString * _Nonnull)accountId templateId:(NSString * _Nonnull)templateId completion:(void (^ _Nonnull)(DSAPICustomFields * _Nullable, NSError * _Nullable))completion;
/// Gets PDF documents from a template.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param encrypt (query)  (optional)
///
/// \param showChanges (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsGetTemplateDocumentWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId templateId:(NSString * _Nonnull)templateId encrypt:(NSString * _Nullable)encrypt showChanges:(NSString * _Nullable)showChanges completion:(void (^ _Nonnull)(NSURL * _Nullable, NSError * _Nullable))completion;
/// Updates a template document.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param body (body)  (optional)
///
/// \param isEnvelopeDefinition (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)documentsPutTemplateDocumentWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId templateId:(NSString * _Nonnull)templateId body:(DSAPIEnvelopeDefinition * _Nullable)body isEnvelopeDefinition:(NSString * _Nullable)isEnvelopeDefinition completion:(void (^ _Nonnull)(DSAPIEnvelopeDocument * _Nullable, NSError * _Nullable))completion;
/// Gets template lock information.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)lockGetTemplateLockWithAccountId:(NSString * _Nonnull)accountId templateId:(NSString * _Nonnull)templateId completion:(void (^ _Nonnull)(DSAPILockInformation * _Nullable, NSError * _Nullable))completion;
/// Gets template notification information.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)notificationGetTemplatesTemplateIdNotificationWithAccountId:(NSString * _Nonnull)accountId templateId:(NSString * _Nonnull)templateId completion:(void (^ _Nonnull)(DSAPINotification * _Nullable, NSError * _Nullable))completion;
/// Gets a page image from a template for display.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param pageNumber (path) The page number being accessed.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param dpi (query)  (optional)
///
/// \param maxHeight (query)  (optional)
///
/// \param maxWidth (query)  (optional)
///
/// \param showChanges (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)pagesGetTemplatePageImageWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId pageNumber:(NSString * _Nonnull)pageNumber templateId:(NSString * _Nonnull)templateId dpi:(NSString * _Nullable)dpi maxHeight:(NSString * _Nullable)maxHeight maxWidth:(NSString * _Nullable)maxWidth showChanges:(NSString * _Nullable)showChanges completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Gets the tabs information for a signer or sign-in-person recipient in a template.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param recipientId (path) The ID of the recipient being accessed.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param includeAnchorTabLocations (query) When set to <em>true</em>, all tabs with anchor tab properties are included in the response.  (optional)
///
/// \param includeMetadata (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetTemplateRecipientTabsWithAccountId:(NSString * _Nonnull)accountId recipientId:(NSString * _Nonnull)recipientId templateId:(NSString * _Nonnull)templateId includeAnchorTabLocations:(NSString * _Nullable)includeAnchorTabLocations includeMetadata:(NSString * _Nullable)includeMetadata completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Gets recipient information from a template.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param includeAnchorTabLocations (query)  When set to <em>true</em> and `include_tabs` is set to <em>true</em>, all tabs with anchor tab properties are included in the response.  (optional)
///
/// \param includeExtended (query)  When set to <em>true</em>, the extended properties are included in the response.  (optional)
///
/// \param includeTabs (query) When set to <em>true</em>, the tab information associated with the recipient is included in the response. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)recipientsGetTemplateRecipientsWithAccountId:(NSString * _Nonnull)accountId templateId:(NSString * _Nonnull)templateId includeAnchorTabLocations:(NSString * _Nullable)includeAnchorTabLocations includeExtended:(NSString * _Nullable)includeExtended includeTabs:(NSString * _Nullable)includeTabs completion:(void (^ _Nonnull)(DSAPIRecipients * _Nullable, NSError * _Nullable))completion;
/// Returns tabs on a template.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param pageNumbers (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsGetTemplateDocumentTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId templateId:(NSString * _Nonnull)templateId pageNumbers:(NSString * _Nullable)pageNumbers completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Returns tabs on the specified page.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param documentId (path) The ID of the document being accessed.
///
/// \param pageNumber (path) The page number being accessed.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)tabsGetTemplatePageTabsWithAccountId:(NSString * _Nonnull)accountId documentId:(NSString * _Nonnull)documentId pageNumber:(NSString * _Nonnull)pageNumber templateId:(NSString * _Nonnull)templateId completion:(void (^ _Nonnull)(DSAPITabs * _Nullable, NSError * _Nullable))completion;
/// Gets a specific template associated with a specified account.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param templateId (path) The ID of the template being accessed.
///
/// \param include (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)templatesGetTemplateWithAccountId:(NSString * _Nonnull)accountId templateId:(NSString * _Nonnull)templateId include:(NSString * _Nullable)include completion:(void (^ _Nonnull)(DSAPIEnvelopeTemplate * _Nullable, NSError * _Nullable))completion;
/// Gets the list of templates.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param count (query) Number of records to return in the cache. (optional)
///
/// \param createdFromDate (query)  (optional)
///
/// \param createdToDate (query)  (optional)
///
/// \param folderIds (query) A comma separated list of folder ID GUIDs. (optional)
///
/// \param folderTypes (query)  (optional)
///
/// \param fromDate (query) Start of the search date range. Only returns templates created on or after this date/time. If no value is specified, there is no limit on the earliest date created. (optional)
///
/// \param include (query) A comma separated list of additional template attributes to include in the response. Valid values are: recipients, folders, documents, custom_fields, and notifications. (optional)
///
/// \param isDeletedTemplateOnly (query)  (optional)
///
/// \param isDownload (query)  (optional)
///
/// \param modifiedFromDate (query)  (optional)
///
/// \param modifiedToDate (query)  (optional)
///
/// \param order (query) Sets the direction order used to sort the list. Valid values are: -asc = ascending sort order (a to z)  -desc = descending sort order (z to a) (optional)
///
/// \param orderBy (query) Sets the file attribute used to sort the list. Valid values are:  -name: template name  -modified: date/time template was last modified.  -used: date/time the template was last used. (optional)
///
/// \param searchFields (query)  (optional)
///
/// \param searchText (query) The search text used to search the names of templates. (optional)
///
/// \param sharedByMe (query) If true, the response only includes templates shared by the user. If false, the response only returns template not shared by the user. If not specified, the response is not affected. (optional)
///
/// \param startPosition (query) The starting index for the first template shown in the response. This must be greater than or equal to 0 (zero). (optional)
///
/// \param templateIds (query)  (optional)
///
/// \param toDate (query) End of the search date range. Only returns templates created up to this date/time. If no value is provided, this defaults to the current date. (optional)
///
/// \param usedFromDate (query) Start of the search date range. Only returns templates used or edited on or after this date/time. If no value is specified, there is no limit on the earliest date used. (optional)
///
/// \param usedToDate (query) End of the search date range. Only returns templates used or edited up to this date/time. If no value is provided, this defaults to the current date. (optional)
///
/// \param userFilter (query) Sets if the templates shown in the response Valid values are:  -owned_by_me: only shows templates the user owns.  -shared_with_me: only shows templates that are shared with the user.  -all: shows all templates owned or shared with the user. (optional)
///
/// \param userId (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)templatesGetTemplatesWithAccountId:(NSString * _Nonnull)accountId count:(NSString * _Nullable)count createdFromDate:(NSString * _Nullable)createdFromDate createdToDate:(NSString * _Nullable)createdToDate folderIds:(NSString * _Nullable)folderIds folderTypes:(NSString * _Nullable)folderTypes fromDate:(NSString * _Nullable)fromDate include:(NSString * _Nullable)include isDeletedTemplateOnly:(NSString * _Nullable)isDeletedTemplateOnly isDownload:(NSString * _Nullable)isDownload modifiedFromDate:(NSString * _Nullable)modifiedFromDate modifiedToDate:(NSString * _Nullable)modifiedToDate order:(NSString * _Nullable)order orderBy:(NSString * _Nullable)orderBy searchFields:(NSString * _Nullable)searchFields searchText:(NSString * _Nullable)searchText sharedByMe:(NSString * _Nullable)sharedByMe startPosition:(NSString * _Nullable)startPosition templateIds:(NSString * _Nullable)templateIds toDate:(NSString * _Nullable)toDate usedFromDate:(NSString * _Nullable)usedFromDate usedToDate:(NSString * _Nullable)usedToDate userFilter:(NSString * _Nullable)userFilter userId:(NSString * _Nullable)userId completion:(void (^ _Nonnull)(DSAPIEnvelopeTemplateResults * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DocuSignAPI8UsersAPI")
@interface UsersAPI : NSObject
/// Retrieves the user profile image for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param encoding (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userProfileImageGetUserProfileImageWithAccountId:(NSString * _Nonnull)accountId userId:(NSString * _Nonnull)userId encoding:(NSString * _Nullable)encoding completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Gets the user account settings for a specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSettingsGetUserSettingsWithAccountId:(NSString * _Nonnull)accountId userId:(NSString * _Nonnull)userId completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Removes removes signature information for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesDeleteUserSignatureWithAccountId:(NSString * _Nonnull)accountId signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
/// Deletes the user initials image or the  user signature image for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param imageType (path) One of <em>signature_image</em> or <em>initials_image</em>.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesDeleteUserSignatureImageWithAccountId:(NSString * _Nonnull)accountId imageType:(NSString * _Nonnull)imageType signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId completion:(void (^ _Nonnull)(DSAPIUserSignature * _Nullable, NSError * _Nullable))completion;
/// Gets the user signature information for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesGetUserSignatureWithAccountId:(NSString * _Nonnull)accountId signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId completion:(void (^ _Nonnull)(DSAPIUserSignature * _Nullable, NSError * _Nullable))completion;
/// Retrieves the user initials image or the  user signature image for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param imageType (path) One of <em>signature_image</em> or <em>initials_image</em>.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param includeChrome (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesGetUserSignatureImageWithAccountId:(NSString * _Nonnull)accountId imageType:(NSString * _Nonnull)imageType signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId includeChrome:(NSString * _Nullable)includeChrome completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Retrieves a list of signature definitions for a user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param stampType (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesGetUserSignaturesWithAccountId:(NSString * _Nonnull)accountId userId:(NSString * _Nonnull)userId stampType:(NSString * _Nullable)stampType completion:(void (^ _Nonnull)(DSAPIUserSignaturesInformation * _Nullable, NSError * _Nullable))completion;
/// Adds user Signature and initials images to a Signature.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesPostUserSignaturesWithAccountId:(NSString * _Nonnull)accountId userId:(NSString * _Nonnull)userId body:(DSAPIUserSignaturesInformation * _Nullable)body completion:(void (^ _Nonnull)(DSAPIUserSignaturesInformation * _Nullable, NSError * _Nullable))completion;
/// Adds/updates a user signature.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param body (body)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesPutUserSignatureWithAccountId:(NSString * _Nonnull)accountId userId:(NSString * _Nonnull)userId body:(DSAPIUserSignaturesInformation * _Nullable)body completion:(void (^ _Nonnull)(DSAPIUserSignaturesInformation * _Nullable, NSError * _Nullable))completion;
/// Updates the user signature for a specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param body (body)  (optional)
///
/// \param closeExistingSignature (query) When set to <em>true</em>, closes the current signature. (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesPutUserSignatureByIdWithAccountId:(NSString * _Nonnull)accountId signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId body:(DSAPIUserSignatureDefinition * _Nullable)body closeExistingSignature:(NSString * _Nullable)closeExistingSignature completion:(void (^ _Nonnull)(DSAPIUserSignature * _Nullable, NSError * _Nullable))completion;
/// Updates the user signature image or user initials image for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param imageType (path) One of <em>signature_image</em> or <em>initials_image</em>.
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param transparentPng (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesPutUserSignatureImageWithAccountId:(NSString * _Nonnull)accountId imageType:(NSString * _Nonnull)imageType signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId transparentPng:(NSString * _Nullable)transparentPng completion:(void (^ _Nonnull)(DSAPIUserSignature * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface UsersAPI (SWIFT_EXTENSION(DocuSignAPI))
/// Upload the user signature image and/or user initials image for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param body (body)  (optional)
///
/// \param multiParts (path) multipart dictionary containing Images for respective keys representing initials or signature images.
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesPostUserSignatureImagesWithAccountId:(NSString * _Nonnull)accountId userId:(NSString * _Nonnull)userId body:(DSAPIUserSignaturesInformation * _Nullable)body multiParts:(NSDictionary<NSString *, NSArray *> * _Nullable)multiParts completion:(void (^ _Nonnull)(DSAPIUserSignaturesInformation * _Nullable, NSError * _Nullable))completion;
/// Updates the user signature image or user initials image for the specified user.
/// \param accountId (path) The external account number (int) or account ID Guid.
///
/// \param imageType (path) One of <em>signature_image</em> or <em>initials_image</em>.
///
/// \param image (path) Image of the signature or initials. .
///
/// \param signatureId (path) The ID of the signature being accessed.
///
/// \param userId (path) The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
///
/// \param transparentPng (query)  (optional)
///
/// \param completion completion handler to receive the data and the error objects
///
+ (void)userSignaturesPutUserSignatureImageDataWithAccountId:(NSString * _Nonnull)accountId imageType:(NSString * _Nonnull)imageType image:(UIImage * _Nonnull)image signatureId:(NSString * _Nonnull)signatureId userId:(NSString * _Nonnull)userId transparentPng:(NSString * _Nullable)transparentPng completion:(void (^ _Nonnull)(DSAPIUserSignature * _Nullable, NSError * _Nullable))completion;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
